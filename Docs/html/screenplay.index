<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="ScreenPlay Reference Documentation" version="" project="ScreenPlay">
    <namespace name="" status="active" access="public" module="screenplay">
        <function name="FileTimeToInt64" status="internal" access="private" location="mathhelper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/mathhelper.h" lineno="41" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="uint64_t" signature="uint64_t FileTimeToInt64(const FILETIME &amp;ft)">
            <parameter type="const FILETIME &amp;" name="ft" default=""/>
        </function>
        <qmlclass name="Background" qml-module-name="Background" href="qml-background.html" status="internal" access="private" location="Background.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Background.qml" lineno="5" title="Background" fulltitle="Background" subtitle="">
            <qmlproperty name="backgroundImage" fullname="Background::backgroundImage" href="qml-background.html#backgroundImage-prop" status="internal" access="private" location="Background.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Background.qml" lineno="9" type="string" attached="false" writable="true"/>
            <qmlproperty name="imageOffsetTop" fullname="Background::imageOffsetTop" href="qml-background.html#imageOffsetTop-prop" status="internal" access="private" location="Background.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Background.qml" lineno="10" type="int" attached="false" writable="true"/>
            <qmlproperty name="myDate" fullname="Background::myDate" href="qml-background.html#myDate-prop" status="internal" access="private" location="Background.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Background.qml" lineno="30" type="var" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="BackgroundParticleSystem" qml-module-name="BackgroundParticleSystem" href="qml-backgroundparticlesystem.html" status="internal" access="private" location="BackgroundParticleSystem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/BackgroundParticleSystem.qml" lineno="13" title="BackgroundParticleSystem" fulltitle="BackgroundParticleSystem" subtitle=""/>
        <class name="BaseWindow" href="basewindow.html" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="49" bases="QObject">
            <function name="BaseWindow" fullname="BaseWindow::BaseWindow" href="basewindow.html#BaseWindow" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="53" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="BaseWindow(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="BaseWindow" fullname="BaseWindow::BaseWindow" href="basewindow.html#BaseWindow-1" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="54" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" signature="BaseWindow(QString projectFilePath, const QVector&lt;int&gt; activeScreensList, const bool checkWallpaperVisible)">
                <parameter type="QString" name="projectFilePath" default=""/>
                <parameter type="const QVector&lt;int&gt;" name="activeScreensList" default=""/>
                <parameter type="const bool" name="checkWallpaperVisible" default=""/>
            </function>
            <function name="OSVersion" fullname="BaseWindow::OSVersion" href="basewindow.html#OSVersion-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="124" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="OSVersion" type="QString" signature="QString OSVersion() const"/>
            <function name="OSVersionChanged" fullname="BaseWindow::OSVersionChanged" href="basewindow.html#OSVersion-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="192" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="OSVersion" type="void" signature="void OSVersionChanged(QString OSVersion)">
                <parameter type="QString" name="OSVersion" default=""/>
            </function>
            <function name="activeScreensList" fullname="BaseWindow::activeScreensList" href="basewindow.html#activeScreensList-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="159" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="activeScreensList" type="QVector&lt;int&gt;" signature="QVector&lt;int&gt; activeScreensList() const"/>
            <function name="activeScreensListChanged" fullname="BaseWindow::activeScreensListChanged" href="basewindow.html#activeScreensList-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="199" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="activeScreensList" type="void" signature="void activeScreensListChanged(QVector&lt;int&gt; activeScreensList)">
                <parameter type="QVector&lt;int&gt;" name="activeScreensList" default=""/>
            </function>
            <function name="appID" fullname="BaseWindow::appID" href="basewindow.html#appID-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="119" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="appID" type="QString" signature="QString appID() const"/>
            <function name="appIDChanged" fullname="BaseWindow::appIDChanged" href="basewindow.html#appID-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="190" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void appIDChanged(QString appID)">
                <parameter type="QString" name="appID" default=""/>
            </function>
            <function name="basePath" fullname="BaseWindow::basePath" href="basewindow.html#basePath-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="174" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="basePath" type="QString" signature="QString basePath() const"/>
            <function name="basePathChanged" fullname="BaseWindow::basePathChanged" href="basewindow.html#basePath-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="202" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="basePath" type="void" signature="void basePathChanged(QString basePath)">
                <parameter type="QString" name="basePath" default=""/>
            </function>
            <function name="canFade" fullname="BaseWindow::canFade" href="basewindow.html#canFade-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="139" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="canFade" type="bool" signature="bool canFade() const"/>
            <function name="canFadeChanged" fullname="BaseWindow::canFadeChanged" href="basewindow.html#canFade-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="195" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="canFade" type="void" signature="void canFadeChanged(bool canFade)">
                <parameter type="bool" name="canFade" default=""/>
            </function>
            <function name="checkWallpaperVisible" fullname="BaseWindow::checkWallpaperVisible" href="basewindow.html#checkWallpaperVisible-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="164" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="checkWallpaperVisible" type="bool" signature="bool checkWallpaperVisible() const"/>
            <function name="checkWallpaperVisibleChanged" fullname="BaseWindow::checkWallpaperVisibleChanged" href="basewindow.html#checkWallpaperVisible-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="200" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="checkWallpaperVisible" type="void" signature="void checkWallpaperVisibleChanged(bool checkWallpaperVisible)">
                <parameter type="bool" name="checkWallpaperVisible" default=""/>
            </function>
            <function name="currentTime" fullname="BaseWindow::currentTime" href="basewindow.html#currentTime-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="134" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="currentTime" type="float" signature="float currentTime() const"/>
            <function name="currentTimeChanged" fullname="BaseWindow::currentTimeChanged" href="basewindow.html#currentTime-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="194" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="currentTime" type="void" signature="void currentTimeChanged(float currentTime)">
                <parameter type="float" name="currentTime" default=""/>
            </function>
            <function name="destroyThis" fullname="BaseWindow::destroyThis" href="basewindow.html#destroyThis" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="205" meta="slot" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void destroyThis()"/>
            <function name="fillMode" fullname="BaseWindow::fillMode" href="basewindow.html#fillMode-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="144" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="fillMode" type="QString" signature="QString fillMode() const"/>
            <function name="fillModeChanged" fullname="BaseWindow::fillModeChanged" href="basewindow.html#fillMode-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="196" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="fillMode" type="void" signature="void fillModeChanged(QString fillMode)">
                <parameter type="QString" name="fillMode" default=""/>
            </function>
            <function name="fullContentPath" fullname="BaseWindow::fullContentPath" href="basewindow.html#fullContentPath-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="114" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="fullContentPath" type="QString" signature="QString fullContentPath() const"/>
            <function name="fullContentPathChanged" fullname="BaseWindow::fullContentPathChanged" href="basewindow.html#fullContentPath-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="189" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="fullContentPath" type="void" signature="void fullContentPathChanged(QString fullContentPath)">
                <parameter type="QString" name="fullContentPath" default=""/>
            </function>
            <function name="getApplicationPath" fullname="BaseWindow::getApplicationPath" href="basewindow.html#getApplicationPath" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="218" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="QString" signature="QString getApplicationPath()"/>
            <function name="height" fullname="BaseWindow::height" href="basewindow.html#height-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="154" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="height" type="int" signature="int height() const"/>
            <function name="heightChanged" fullname="BaseWindow::heightChanged" href="basewindow.html#height-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="198" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="height" type="void" signature="void heightChanged(int height)">
                <parameter type="int" name="height" default=""/>
            </function>
            <function name="isPlaying" fullname="BaseWindow::isPlaying" href="basewindow.html#isPlaying-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="99" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="isPlaying" type="bool" signature="bool isPlaying() const"/>
            <function name="isPlayingChanged" fullname="BaseWindow::isPlayingChanged" href="basewindow.html#isPlaying-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="186" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="isPlaying" type="void" signature="void isPlayingChanged(bool isPlaying)">
                <parameter type="bool" name="isPlaying" default=""/>
            </function>
            <function name="loadFromFile" fullname="BaseWindow::loadFromFile" href="basewindow.html#loadFromFile" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="216" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="QString" signature="QString loadFromFile(const QString &amp;filename)">
                <parameter type="const QString &amp;" name="filename" default=""/>
            </function>
            <function name="loops" fullname="BaseWindow::loops" href="basewindow.html#loops-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="89" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="loops" type="bool" signature="bool loops() const"/>
            <function name="loopsChanged" fullname="BaseWindow::loopsChanged" href="basewindow.html#loops-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="184" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="loops" type="void" signature="void loopsChanged(bool loops)">
                <parameter type="bool" name="loops" default=""/>
            </function>
            <function name="messageReceived" fullname="BaseWindow::messageReceived" href="basewindow.html#messageReceived" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="207" meta="slot" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void messageReceived(QString key, QString value)">
                <parameter type="QString" name="key" default=""/>
                <parameter type="QString" name="value" default=""/>
            </function>
            <function name="metaObject" fullname="BaseWindow::metaObject" href="basewindow.html#metaObject" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="50" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="muted" fullname="BaseWindow::muted" href="basewindow.html#muted-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="129" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="muted" type="bool" signature="bool muted() const"/>
            <function name="mutedChanged" fullname="BaseWindow::mutedChanged" href="basewindow.html#muted-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="193" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="muted" type="void" signature="void mutedChanged(bool muted)">
                <parameter type="bool" name="muted" default=""/>
            </function>
            <function name="parseWallpaperType" fullname="BaseWindow::parseWallpaperType" href="basewindow.html#parseWallpaperType" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="407" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="BaseWindow::WallpaperType" signature="BaseWindow::WallpaperType parseWallpaperType(const QString &amp;type)">
                <parameter type="const QString &amp;" name="type" default=""/>
            </function>
            <function name="playbackRate" fullname="BaseWindow::playbackRate" href="basewindow.html#playbackRate-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="104" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="playbackRate" type="float" signature="float playbackRate() const"/>
            <function name="playbackRateChanged" fullname="BaseWindow::playbackRateChanged" href="basewindow.html#playbackRate-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="187" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="playbackRate" type="void" signature="void playbackRateChanged(float playbackRate)">
                <parameter type="float" name="playbackRate" default=""/>
            </function>
            <function name="qmlExit" fullname="BaseWindow::qmlExit" href="basewindow.html#qmlExit" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="180" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qmlExit()"/>
            <function name="qmlSceneValueReceived" fullname="BaseWindow::qmlSceneValueReceived" href="basewindow.html#qmlSceneValueReceived" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="191" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qmlSceneValueReceived(QString key, QString value)">
                <parameter type="QString" name="key" default=""/>
                <parameter type="QString" name="value" default=""/>
            </function>
            <function name="qt_getEnumMetaObject" href="basewindow.html#qt_getEnumMetaObject" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="87" related="0" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(BaseWindow::WallpaperType)">
                <parameter type="BaseWindow::WallpaperType" name="" default=""/>
            </function>
            <function name="qt_getEnumName" href="basewindow.html#qt_getEnumName" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="87" related="1" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(BaseWindow::WallpaperType)">
                <parameter type="BaseWindow::WallpaperType" name="" default=""/>
            </function>
            <function name="qt_metacall" fullname="BaseWindow::qt_metacall" href="basewindow.html#qt_metacall" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="50" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="BaseWindow::qt_metacast" href="basewindow.html#qt_metacast" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="50" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="BaseWindow::qt_static_metacall" href="basewindow.html#qt_static_metacall" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="50" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="reloadQML" fullname="BaseWindow::reloadQML" href="basewindow.html#reloadQML" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="181" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void reloadQML(const BaseWindow::WallpaperType oldType)">
                <parameter type="const BaseWindow::WallpaperType" name="oldType" default=""/>
            </function>
            <function name="reloadVideo" fullname="BaseWindow::reloadVideo" href="basewindow.html#reloadVideo" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="182" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void reloadVideo(const BaseWindow::WallpaperType oldType)">
                <parameter type="const BaseWindow::WallpaperType" name="oldType" default=""/>
            </function>
            <function name="replaceWallpaper" fullname="BaseWindow::replaceWallpaper" href="basewindow.html#replaceWallpaper" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="208" meta="slot" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void replaceWallpaper(const QString absolutePath, const QString file, const float volume, const QString fillMode, const QString type, const bool checkWallpaperVisible)">
                <parameter type="const QString" name="absolutePath" default=""/>
                <parameter type="const QString" name="file" default=""/>
                <parameter type="const float" name="volume" default=""/>
                <parameter type="const QString" name="fillMode" default=""/>
                <parameter type="const QString" name="type" default=""/>
                <parameter type="const bool" name="checkWallpaperVisible" default=""/>
            </function>
            <function name="setActiveScreensList" fullname="BaseWindow::setActiveScreensList" href="basewindow.html#activeScreensList-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="368" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="activeScreensList" type="void" signature="void setActiveScreensList(QVector&lt;int&gt; activeScreensList)">
                <parameter type="QVector&lt;int&gt;" name="activeScreensList" default=""/>
            </function>
            <function name="setAppID" fullname="BaseWindow::setAppID" href="basewindow.html#appID-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="280" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void setAppID(QString appID)">
                <parameter type="QString" name="appID" default=""/>
            </function>
            <function name="setBasePath" fullname="BaseWindow::setBasePath" href="basewindow.html#basePath-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="397" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="basePath" type="void" signature="void setBasePath(QString basePath)">
                <parameter type="QString" name="basePath" default=""/>
            </function>
            <function name="setCanFade" fullname="BaseWindow::setCanFade" href="basewindow.html#canFade-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="319" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="canFade" type="void" signature="void setCanFade(bool canFade)">
                <parameter type="bool" name="canFade" default=""/>
            </function>
            <function name="setCheckWallpaperVisible" fullname="BaseWindow::setCheckWallpaperVisible" href="basewindow.html#checkWallpaperVisible-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="377" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="checkWallpaperVisible" type="void" signature="void setCheckWallpaperVisible(bool checkWallpaperVisible)">
                <parameter type="bool" name="checkWallpaperVisible" default=""/>
            </function>
            <function name="setCurrentTime" fullname="BaseWindow::setCurrentTime" href="basewindow.html#currentTime-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="307" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="currentTime" type="void" signature="void setCurrentTime(float currentTime)">
                <parameter type="float" name="currentTime" default=""/>
            </function>
            <function name="setFillMode" fullname="BaseWindow::setFillMode" href="basewindow.html#fillMode-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="328" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="fillMode" type="void" signature="void setFillMode(QString fillMode)">
                <parameter type="QString" name="fillMode" default=""/>
            </function>
            <function name="setFullContentPath" fullname="BaseWindow::setFullContentPath" href="basewindow.html#fullContentPath-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="271" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="fullContentPath" type="void" signature="void setFullContentPath(QString fullContentPath)">
                <parameter type="QString" name="fullContentPath" default=""/>
            </function>
            <function name="setHeight" fullname="BaseWindow::setHeight" href="basewindow.html#height-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="359" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="height" type="void" signature="void setHeight(int height)">
                <parameter type="int" name="height" default=""/>
            </function>
            <function name="setIsPlaying" fullname="BaseWindow::setIsPlaying" href="basewindow.html#isPlaying-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="242" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="isPlaying" type="void" signature="void setIsPlaying(bool isPlaying)">
                <parameter type="bool" name="isPlaying" default=""/>
            </function>
            <function name="setLoops" fullname="BaseWindow::setLoops" href="basewindow.html#loops-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="223" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="loops" type="void" signature="void setLoops(bool loops)">
                <parameter type="bool" name="loops" default=""/>
            </function>
            <function name="setMuted" fullname="BaseWindow::setMuted" href="basewindow.html#muted-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="298" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="muted" type="void" signature="void setMuted(bool muted)">
                <parameter type="bool" name="muted" default=""/>
            </function>
            <function name="setOSVersion" fullname="BaseWindow::setOSVersion" href="basewindow.html#OSVersion-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="289" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="OSVersion" type="void" signature="void setOSVersion(QString OSVersion)">
                <parameter type="QString" name="OSVersion" default=""/>
            </function>
            <function name="setPlaybackRate" fullname="BaseWindow::setPlaybackRate" href="basewindow.html#playbackRate-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="250" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="playbackRate" type="void" signature="void setPlaybackRate(float playbackRate)">
                <parameter type="float" name="playbackRate" default=""/>
            </function>
            <function name="setType" fullname="BaseWindow::setType" href="basewindow.html#type-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="262" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void setType(BaseWindow::WallpaperType type)">
                <parameter type="BaseWindow::WallpaperType" name="type" default=""/>
            </function>
            <function name="setVisible" fullname="BaseWindow::setVisible" href="basewindow.html#setVisible" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="206" meta="slot" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void setVisible(bool show)">
                <parameter type="bool" name="show" default=""/>
            </function>
            <function name="setVisualsPaused" fullname="BaseWindow::setVisualsPaused" href="basewindow.html#visualsPaused-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="386" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="visualsPaused" type="void" signature="void setVisualsPaused(bool visualsPaused)">
                <parameter type="bool" name="visualsPaused" default=""/>
            </function>
            <function name="setVolume" fullname="BaseWindow::setVolume" href="basewindow.html#volume-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="231" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="volume" type="void" signature="void setVolume(float volume)">
                <parameter type="float" name="volume" default=""/>
            </function>
            <function name="setWidth" fullname="BaseWindow::setWidth" href="basewindow.html#width-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="350" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="width" type="void" signature="void setWidth(int width)">
                <parameter type="int" name="width" default=""/>
            </function>
            <function name="type" fullname="BaseWindow::type" href="basewindow.html#type-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="109" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="type" type="BaseWindow::WallpaperType" signature="BaseWindow::WallpaperType type() const"/>
            <function name="typeChanged" fullname="BaseWindow::typeChanged" href="basewindow.html#type-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="188" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void typeChanged(BaseWindow::WallpaperType type)">
                <parameter type="BaseWindow::WallpaperType" name="type" default=""/>
            </function>
            <function name="visualsPaused" fullname="BaseWindow::visualsPaused" href="basewindow.html#visualsPaused-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="169" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="visualsPaused" type="bool" signature="bool visualsPaused() const"/>
            <function name="visualsPausedChanged" fullname="BaseWindow::visualsPausedChanged" href="basewindow.html#visualsPaused-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="201" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="visualsPaused" type="void" signature="void visualsPausedChanged(bool visualsPaused)">
                <parameter type="bool" name="visualsPaused" default=""/>
            </function>
            <function name="volume" fullname="BaseWindow::volume" href="basewindow.html#volume-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="94" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="volume" type="float" signature="float volume() const"/>
            <function name="volumeChanged" fullname="BaseWindow::volumeChanged" href="basewindow.html#volume-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="185" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="volume" type="void" signature="void volumeChanged(float volume)">
                <parameter type="float" name="volume" default=""/>
            </function>
            <function name="width" fullname="BaseWindow::width" href="basewindow.html#width-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="149" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="width" type="int" signature="int width() const"/>
            <function name="widthChanged" fullname="BaseWindow::widthChanged" href="basewindow.html#width-prop" status="active" access="public" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="197" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="width" type="void" signature="void widthChanged(int width)">
                <parameter type="int" name="width" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="BaseWindow::QPrivateSignal" href="basewindow-qprivatesignal.html" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="50"/>
            <enum name="WallpaperType" fullname="BaseWindow::WallpaperType" href="basewindow.html#WallpaperType-enum" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="81" scoped="true">
                <value name="Video" value="0"/>
                <value name="Html" value="1"/>
                <value name="Godot" value="2"/>
                <value name="Qml" value="3"/>
            </enum>
            <property name="OSVersion" fullname="BaseWindow::OSVersion" href="basewindow.html#OSVersion-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="79">
                <getter name="OSVersion"/>
                <setter name="setOSVersion"/>
                <notifier name="OSVersionChanged"/>
            </property>
            <property name="activeScreensList" fullname="BaseWindow::activeScreensList" href="basewindow.html#activeScreensList-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="58">
                <getter name="activeScreensList"/>
                <setter name="setActiveScreensList"/>
                <notifier name="activeScreensListChanged"/>
            </property>
            <property name="appID" fullname="BaseWindow::appID" href="basewindow.html#appID-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="60">
                <getter name="appID"/>
                <setter name="setAppID"/>
                <notifier name="appIDChanged"/>
            </property>
            <property name="basePath" fullname="BaseWindow::basePath" href="basewindow.html#basePath-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="61">
                <getter name="basePath"/>
                <setter name="setBasePath"/>
                <notifier name="basePathChanged"/>
            </property>
            <property name="canFade" fullname="BaseWindow::canFade" href="basewindow.html#canFade-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="68">
                <getter name="canFade"/>
                <setter name="setCanFade"/>
                <notifier name="canFadeChanged"/>
            </property>
            <property name="checkWallpaperVisible" fullname="BaseWindow::checkWallpaperVisible" href="basewindow.html#checkWallpaperVisible-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="71">
                <getter name="checkWallpaperVisible"/>
                <setter name="setCheckWallpaperVisible"/>
                <notifier name="checkWallpaperVisibleChanged"/>
            </property>
            <property name="currentTime" fullname="BaseWindow::currentTime" href="basewindow.html#currentTime-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="76">
                <getter name="currentTime"/>
                <setter name="setCurrentTime"/>
                <notifier name="currentTimeChanged"/>
            </property>
            <property name="fillMode" fullname="BaseWindow::fillMode" href="basewindow.html#fillMode-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="63">
                <getter name="fillMode"/>
                <setter name="setFillMode"/>
                <notifier name="fillModeChanged"/>
            </property>
            <property name="fullContentPath" fullname="BaseWindow::fullContentPath" href="basewindow.html#fullContentPath-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="62">
                <getter name="fullContentPath"/>
                <setter name="setFullContentPath"/>
                <notifier name="fullContentPathChanged"/>
            </property>
            <property name="height" fullname="BaseWindow::height" href="basewindow.html#height-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="57">
                <getter name="height"/>
                <setter name="setHeight"/>
                <notifier name="heightChanged"/>
            </property>
            <property name="isPlaying" fullname="BaseWindow::isPlaying" href="basewindow.html#isPlaying-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="66">
                <getter name="isPlaying"/>
                <setter name="setIsPlaying"/>
                <notifier name="isPlayingChanged"/>
            </property>
            <property name="loops" fullname="BaseWindow::loops" href="basewindow.html#loops-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="65">
                <getter name="loops"/>
                <setter name="setLoops"/>
                <notifier name="loopsChanged"/>
            </property>
            <property name="muted" fullname="BaseWindow::muted" href="basewindow.html#muted-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="67">
                <getter name="muted"/>
                <setter name="setMuted"/>
                <notifier name="mutedChanged"/>
            </property>
            <property name="playbackRate" fullname="BaseWindow::playbackRate" href="basewindow.html#playbackRate-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="75">
                <getter name="playbackRate"/>
                <setter name="setPlaybackRate"/>
                <notifier name="playbackRateChanged"/>
            </property>
            <property name="type" fullname="BaseWindow::type" href="basewindow.html#type-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="78">
                <getter name="type"/>
                <setter name="setType"/>
                <notifier name="typeChanged"/>
            </property>
            <property name="visualsPaused" fullname="BaseWindow::visualsPaused" href="basewindow.html#visualsPaused-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="72">
                <getter name="visualsPaused"/>
                <setter name="setVisualsPaused"/>
                <notifier name="visualsPausedChanged"/>
            </property>
            <property name="volume" fullname="BaseWindow::volume" href="basewindow.html#volume-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="74">
                <getter name="volume"/>
                <setter name="setVolume"/>
                <notifier name="volumeChanged"/>
            </property>
            <property name="width" fullname="BaseWindow::width" href="basewindow.html#width-prop" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="56">
                <getter name="width"/>
                <setter name="setWidth"/>
                <notifier name="widthChanged"/>
            </property>
            <variable name="m_OSVersion" fullname="BaseWindow::m_OSVersion" href="basewindow.html#m_OSVersion-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="426" type="QString" static="false"/>
            <variable name="m_activeScreensList" fullname="BaseWindow::m_activeScreensList" href="basewindow.html#m_activeScreensList-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="430" type="QVector&lt;int&gt;" static="false"/>
            <variable name="m_appID" fullname="BaseWindow::m_appID" href="basewindow.html#m_appID-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="423" type="QString" static="false"/>
            <variable name="m_basePath" fullname="BaseWindow::m_basePath" href="basewindow.html#m_basePath-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="433" type="QString" static="false"/>
            <variable name="m_canFade" fullname="BaseWindow::m_canFade" href="basewindow.html#m_canFade-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="416" type="bool" static="false"/>
            <variable name="m_checkWallpaperVisible" fullname="BaseWindow::m_checkWallpaperVisible" href="basewindow.html#m_checkWallpaperVisible-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="410" type="bool" static="false"/>
            <variable name="m_currentTime" fullname="BaseWindow::m_currentTime" href="basewindow.html#m_currentTime-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="420" type="float" static="false"/>
            <variable name="m_fileSystemWatcher" fullname="BaseWindow::m_fileSystemWatcher" href="basewindow.html#m_fileSystemWatcher-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="431" type="QFileSystemWatcher" static="false"/>
            <variable name="m_fillMode" fullname="BaseWindow::m_fillMode" href="basewindow.html#m_fillMode-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="427" type="QString" static="false"/>
            <variable name="m_fullContentPath" fullname="BaseWindow::m_fullContentPath" href="basewindow.html#m_fullContentPath-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="422" type="QString" static="false"/>
            <variable name="m_height" fullname="BaseWindow::m_height" href="basewindow.html#m_height-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="429" type="int" static="false"/>
            <variable name="m_isPlaying" fullname="BaseWindow::m_isPlaying" href="basewindow.html#m_isPlaying-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="414" type="bool" static="false"/>
            <variable name="m_loops" fullname="BaseWindow::m_loops" href="basewindow.html#m_loops-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="413" type="bool" static="false"/>
            <variable name="m_muted" fullname="BaseWindow::m_muted" href="basewindow.html#m_muted-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="415" type="bool" static="false"/>
            <variable name="m_playbackRate" fullname="BaseWindow::m_playbackRate" href="basewindow.html#m_playbackRate-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="419" type="float" static="false"/>
            <variable name="m_sysinfo" fullname="BaseWindow::m_sysinfo" href="basewindow.html#m_sysinfo-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="432" type="QSysInfo" static="false"/>
            <variable name="m_type" fullname="BaseWindow::m_type" href="basewindow.html#m_type-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="425" type="BaseWindow::WallpaperType" static="false"/>
            <variable name="m_visualsPaused" fullname="BaseWindow::m_visualsPaused" href="basewindow.html#m_visualsPaused-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="411" type="bool" static="false"/>
            <variable name="m_volume" fullname="BaseWindow::m_volume" href="basewindow.html#m_volume-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="418" type="float" static="false"/>
            <variable name="m_width" fullname="BaseWindow::m_width" href="basewindow.html#m_width-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="428" type="int" static="false"/>
            <variable name="staticMetaObject" fullname="BaseWindow::staticMetaObject" href="basewindow.html#staticMetaObject-var" status="internal" access="private" location="basewindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/basewindow.h" lineno="50" type="const QMetaObject" static="true"/>
        </class>
        <class name="CPU" href="cpu.html" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="47" bases="QObject">
            <function name="CPU" fullname="CPU::CPU" href="cpu.html#CPU" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="54" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="CPU(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="metaObject" fullname="CPU::metaObject" href="cpu.html#metaObject" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="48" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_metacall" fullname="CPU::qt_metacall" href="cpu.html#qt_metacall" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="48" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="CPU::qt_metacast" href="cpu.html#qt_metacast" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="48" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="CPU::qt_static_metacall" href="cpu.html#qt_static_metacall" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="48" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="setTickRate" fullname="CPU::setTickRate" href="cpu.html#tickRate-prop" status="active" access="public" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="84" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="tickRate" type="void" signature="void setTickRate(int tickRate)">
                <parameter type="int" name="tickRate" default=""/>
            </function>
            <function name="setUsage" fullname="CPU::setUsage" href="cpu.html#setUsage" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="75" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setUsage(float usage)">
                <parameter type="float" name="usage" default=""/>
            </function>
            <function name="tickRate" fullname="CPU::tickRate" href="cpu.html#tickRate-prop" status="active" access="public" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="61" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="tickRate" type="int" signature="int tickRate() const"/>
            <function name="tickRateChanged" fullname="CPU::tickRateChanged" href="cpu.html#tickRate-prop" status="active" access="public" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="70" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="tickRate" type="void" signature="void tickRateChanged(int tickRate)">
                <parameter type="int" name="tickRate" default=""/>
            </function>
            <function name="update" fullname="CPU::update" href="cpu.html#update" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="73" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void update()"/>
            <function name="usage" fullname="CPU::usage" href="cpu.html#usage-prop" status="active" access="public" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="56" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="usage" type="float" signature="float usage() const"/>
            <function name="usageChanged" fullname="CPU::usageChanged" href="cpu.html#usage-prop" status="active" access="public" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="68" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="usage" type="void" signature="void usageChanged(float usage)">
                <parameter type="float" name="usage" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="CPU::QPrivateSignal" href="cpu-qprivatesignal.html" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="48"/>
            <property name="tickRate" fullname="CPU::tickRate" href="cpu.html#tickRate-prop" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="51">
                <getter name="tickRate"/>
                <setter name="setTickRate"/>
                <notifier name="tickRateChanged"/>
            </property>
            <property name="usage" fullname="CPU::usage" href="cpu.html#usage-prop" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="50">
                <getter name="usage"/>
                <notifier name="usageChanged"/>
            </property>
            <variable name="lastIdleTime" fullname="CPU::lastIdleTime" href="cpu.html#lastIdleTime-var" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="98" type="uint64_t" static="false"/>
            <variable name="lastKernelTime" fullname="CPU::lastKernelTime" href="cpu.html#lastKernelTime-var" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="99" type="uint64_t" static="false"/>
            <variable name="lastUserTime" fullname="CPU::lastUserTime" href="cpu.html#lastUserTime-var" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="100" type="uint64_t" static="false"/>
            <variable name="m_tickRate" fullname="CPU::m_tickRate" href="cpu.html#m_tickRate-var" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="102" type="int" static="false"/>
            <variable name="m_updateTimer" fullname="CPU::m_updateTimer" href="cpu.html#m_updateTimer-var" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="103" type="QTimer" static="false"/>
            <variable name="m_usage" fullname="CPU::m_usage" href="cpu.html#m_usage-var" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="96" type="float" static="false"/>
            <variable name="staticMetaObject" fullname="CPU::staticMetaObject" href="cpu.html#staticMetaObject-var" status="internal" access="private" location="cpu.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/cpu.h" lineno="48" type="const QMetaObject" static="true"/>
        </class>
        <qmlclass name="CloseIcon" qml-module-name="CloseIcon" href="qml-closeicon.html" status="active" access="public" documented="true" title="CloseIcon" fulltitle="CloseIcon" subtitle="" brief="A image selector with popup preview">
            <qmlproperty name="color" fullname="CloseIcon::color" href="qml-closeicon.html#color-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="icon" fullname="CloseIcon::icon" href="qml-closeicon.html#icon-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Community" qml-module-name="Community" href="qml-community.html" status="internal" access="private" location="Community.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Community/Community.qml" lineno="9" title="Community" fulltitle="Community" subtitle=""/>
        <qmlclass name="CommunityNavItem" qml-module-name="CommunityNavItem" href="qml-communitynavitem.html" status="internal" access="private" location="CommunityNavItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Community/CommunityNavItem.qml" lineno="6" title="CommunityNavItem" fulltitle="CommunityNavItem" subtitle="">
            <qmlproperty name="openLink" fullname="CommunityNavItem::openLink" href="qml-communitynavitem.html#openLink-prop" status="internal" access="private" location="CommunityNavItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Community/CommunityNavItem.qml" lineno="9" type="url" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Create" qml-module-name="Create" href="qml-create.html" status="internal" access="private" location="Create.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Create.qml" lineno="13" title="Create" fulltitle="Create" subtitle=""/>
        <qmlclass name="CreateContent" qml-module-name="CreateContent" href="qml-createcontent.html" status="internal" access="private" location="CreateContent.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/CreateContent.qml" lineno="6" title="CreateContent" fulltitle="CreateContent" subtitle="">
            <function name="createContent" fullname="CreateContent::createContent" href="qml-createcontent.html#createContent-signal" status="internal" access="private" location="CreateContent.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/CreateContent.qml" lineno="11" meta="qmlsignal"/>
        </qmlclass>
        <qmlclass name="CreateContentButton" qml-module-name="CreateContentButton" href="qml-createcontentbutton.html" status="internal" access="private" location="CreateContentButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/CreateContentButton.qml" lineno="7" title="CreateContentButton" fulltitle="CreateContentButton" subtitle="">
            <function name="clicked" fullname="CreateContentButton::clicked" href="qml-createcontentbutton.html#clicked-signal" status="internal" access="private" location="CreateContentButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/CreateContentButton.qml" lineno="22" meta="qmlsignal"/>
            <qmlproperty name="animOffset" fullname="CreateContentButton::animOffset" href="qml-createcontentbutton.html#animOffset-prop" status="internal" access="private" location="CreateContentButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/CreateContentButton.qml" lineno="17" type="int" attached="false" writable="true"/>
            <qmlproperty name="buttonActive" fullname="CreateContentButton::buttonActive" href="qml-createcontentbutton.html#buttonActive-prop" status="internal" access="private" location="CreateContentButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/CreateContentButton.qml" lineno="19" type="bool" attached="false" writable="true"/>
            <qmlproperty name="imgSource" fullname="CreateContentButton::imgSource" href="qml-createcontentbutton.html#imgSource-prop" status="internal" access="private" location="CreateContentButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/CreateContentButton.qml" lineno="20" type="string" attached="false" writable="true"/>
            <qmlproperty name="text" fullname="CreateContentButton::text" href="qml-createcontentbutton.html#text-prop" status="internal" access="private" location="CreateContentButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/CreateContentButton.qml" lineno="18" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="CreateEmptyHtmlWallpaper" qml-module-name="CreateEmptyHtmlWallpaper" href="qml-createemptyhtmlwallpaper.html" status="internal" access="private" location="CreateEmptyHtmlWallpaper.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateEmptyHtmlWallpaper/CreateEmptyHtmlWallpaper.qml" lineno="13" title="CreateEmptyHtmlWallpaper" fulltitle="CreateEmptyHtmlWallpaper" subtitle=""/>
        <qmlclass name="CreateEmptyWidget" qml-module-name="CreateEmptyWidget" href="qml-createemptywidget.html" status="internal" access="private" location="CreateEmptyWidget.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateEmptyWidget/CreateEmptyWidget.qml" lineno="11" title="CreateEmptyWidget" fulltitle="CreateEmptyWidget" subtitle="">
            <function name="cleanup" fullname="CreateEmptyWidget::cleanup" href="qml-createemptywidget.html#cleanup-method" status="internal" access="private" location="CreateEmptyWidget.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateEmptyWidget/CreateEmptyWidget.qml" lineno="13" meta="qmlmethod"/>
        </qmlclass>
        <qmlclass name="CreateWallpaper" qml-module-name="CreateWallpaper" href="qml-createwallpaper.html" status="internal" access="private" location="CreateWallpaper.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaper.qml" lineno="13" title="CreateWallpaper" fulltitle="CreateWallpaper" subtitle="">
            <function name="next" fullname="CreateWallpaper::next" href="qml-createwallpaper.html#next-signal" status="internal" access="private" location="CreateWallpaper.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaper.qml" lineno="17" meta="qmlsignal"/>
            <qmlproperty name="filePath" fullname="CreateWallpaper::filePath" href="qml-createwallpaper.html#filePath-prop" status="internal" access="private" location="CreateWallpaper.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaper.qml" lineno="15" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="CreateWallpaperCodec" qml-module-name="CreateWallpaperCodec" href="qml-createwallpapercodec.html" status="internal" access="private" location="CreateWallpaperCodec.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperCodec.qml" lineno="14" title="CreateWallpaperCodec" fulltitle="CreateWallpaperCodec" subtitle="">
            <function name="next" fullname="CreateWallpaperCodec::next" href="qml-createwallpapercodec.html#next-signal" status="internal" access="private" location="CreateWallpaperCodec.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperCodec.qml" lineno="19" meta="qmlsignal"/>
            <qmlproperty name="codec" fullname="CreateWallpaperCodec::codec" href="qml-createwallpapercodec.html#codec-prop" status="internal" access="private" location="CreateWallpaperCodec.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperCodec.qml" lineno="17" type="var" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="CreateWallpaperResult" qml-module-name="CreateWallpaperResult" href="qml-createwallpaperresult.html" status="internal" access="private" location="CreateWallpaperResult.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperResult.qml" lineno="11" title="CreateWallpaperResult" fulltitle="CreateWallpaperResult" subtitle="">
            <qmlproperty name="error" fullname="CreateWallpaperResult::error" href="qml-createwallpaperresult.html#error-prop" status="internal" access="private" location="CreateWallpaperResult.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperResult.qml" lineno="14" type="alias" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="CreateWallpaperVideoImportConvert" qml-module-name="CreateWallpaperVideoImportConvert" href="qml-createwallpapervideoimportconvert.html" status="internal" access="private" location="CreateWallpaperVideoImportConvert.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperVideoImportConvert.qml" lineno="13" title="CreateWallpaperVideoImportConvert" fulltitle="CreateWallpaperVideoImportConvert" subtitle="">
            <function name="basename" fullname="CreateWallpaperVideoImportConvert::basename" href="qml-createwallpapervideoimportconvert.html#basename-method" status="internal" access="private" location="CreateWallpaperVideoImportConvert.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperVideoImportConvert.qml" lineno="29" meta="qmlmethod"/>
            <function name="checkCanSave" fullname="CreateWallpaperVideoImportConvert::checkCanSave" href="qml-createwallpapervideoimportconvert.html#checkCanSave-method" status="internal" access="private" location="CreateWallpaperVideoImportConvert.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperVideoImportConvert.qml" lineno="38" meta="qmlmethod"/>
            <function name="cleanup" fullname="CreateWallpaperVideoImportConvert::cleanup" href="qml-createwallpapervideoimportconvert.html#cleanup-method" status="internal" access="private" location="CreateWallpaperVideoImportConvert.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperVideoImportConvert.qml" lineno="25" meta="qmlmethod"/>
            <function name="save" fullname="CreateWallpaperVideoImportConvert::save" href="qml-createwallpapervideoimportconvert.html#save-signal" status="internal" access="private" location="CreateWallpaperVideoImportConvert.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperVideoImportConvert.qml" lineno="36" meta="qmlsignal"/>
            <qmlproperty name="canSave" fullname="CreateWallpaperVideoImportConvert::canSave" href="qml-createwallpapervideoimportconvert.html#canSave-prop" status="internal" access="private" location="CreateWallpaperVideoImportConvert.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperVideoImportConvert.qml" lineno="17" type="bool" attached="false" writable="true"/>
            <qmlproperty name="codec" fullname="CreateWallpaperVideoImportConvert::codec" href="qml-createwallpapervideoimportconvert.html#codec-prop" status="internal" access="private" location="CreateWallpaperVideoImportConvert.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperVideoImportConvert.qml" lineno="18" type="var" attached="false" writable="true"/>
            <qmlproperty name="conversionFinishedSuccessful" fullname="CreateWallpaperVideoImportConvert::conversionFinishedSuccessful" href="qml-createwallpapervideoimportconvert.html#conversionFinishedSuccessful-prop" status="internal" access="private" location="CreateWallpaperVideoImportConvert.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperVideoImportConvert.qml" lineno="16" type="bool" attached="false" writable="true"/>
            <qmlproperty name="filePath" fullname="CreateWallpaperVideoImportConvert::filePath" href="qml-createwallpapervideoimportconvert.html#filePath-prop" status="internal" access="private" location="CreateWallpaperVideoImportConvert.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizards/CreateWallpaper/CreateWallpaperVideoImportConvert.qml" lineno="19" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="DefaultVideoControls" qml-module-name="DefaultVideoControls" href="qml-defaultvideocontrols.html" status="internal" access="private" location="DefaultVideoControls.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/DefaultVideoControls.qml" lineno="12" title="DefaultVideoControls" fulltitle="DefaultVideoControls" subtitle="">
            <function name="indexOfValue" fullname="DefaultVideoControls::indexOfValue" href="qml-defaultvideocontrols.html#indexOfValue-method" status="internal" access="private" location="DefaultVideoControls.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/DefaultVideoControls.qml" lineno="29" meta="qmlmethod"/>
            <qmlproperty name="activeMonitorIndex" fullname="DefaultVideoControls::activeMonitorIndex" href="qml-defaultvideocontrols.html#activeMonitorIndex-prop" status="internal" access="private" location="DefaultVideoControls.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/DefaultVideoControls.qml" lineno="18" type="int" attached="false" writable="true"/>
            <qmlproperty name="wallpaper" fullname="DefaultVideoControls::wallpaper" href="qml-defaultvideocontrols.html#wallpaper-prop" status="internal" access="private" location="DefaultVideoControls.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/DefaultVideoControls.qml" lineno="19" type="ScreenPlayWallpaper" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Footer" qml-module-name="Footer" href="qml-footer.html" status="internal" access="private" location="Footer.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Footer.qml" lineno="13" title="Footer" fulltitle="Footer" subtitle=""/>
        <qmlclass name="Grow" qml-module-name="Grow" href="qml-grow.html" status="internal" access="private" location="Grow.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Grow.qml" lineno="3" title="Grow" fulltitle="Grow" subtitle="">
            <function name="start" fullname="Grow::start" href="qml-grow.html#start-method" status="internal" access="private" location="Grow.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Grow.qml" lineno="6" meta="qmlmethod"/>
            <qmlproperty name="cScale" fullname="Grow::cScale" href="qml-grow.html#cScale-prop" status="internal" access="private" location="Grow.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Grow.qml" lineno="17" type="real" attached="false" writable="true"/>
            <qmlproperty name="centerX" fullname="Grow::centerX" href="qml-grow.html#centerX-prop" status="internal" access="private" location="Grow.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Grow.qml" lineno="18" type="alias" attached="false" writable="true"/>
            <qmlproperty name="centerY" fullname="Grow::centerY" href="qml-grow.html#centerY-prop" status="internal" access="private" location="Grow.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Grow.qml" lineno="19" type="alias" attached="false" writable="true"/>
            <qmlproperty name="grow" fullname="Grow::grow" href="qml-grow.html#grow-prop" status="internal" access="private" location="Grow.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Grow.qml" lineno="21" type="SequentialAnimation" attached="false" writable="true"/>
            <qmlproperty name="loopOffset" fullname="Grow::loopOffset" href="qml-grow.html#loopOffset-prop" status="internal" access="private" location="Grow.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Grow.qml" lineno="15" type="int" attached="false" writable="true"/>
            <qmlproperty name="loops" fullname="Grow::loops" href="qml-grow.html#loops-prop" status="internal" access="private" location="Grow.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Grow.qml" lineno="16" type="int" attached="false" writable="true"/>
            <qmlproperty name="offset" fullname="Grow::offset" href="qml-grow.html#offset-prop" status="internal" access="private" location="Grow.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Grow.qml" lineno="14" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="GrowIconLink" qml-module-name="GrowIconLink" href="qml-growiconlink.html" status="internal" access="private" location="GrowIconLink.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/GrowIconLink.qml" lineno="5" title="GrowIconLink" fulltitle="GrowIconLink" subtitle="">
            <qmlproperty name="color" fullname="GrowIconLink::color" href="qml-growiconlink.html#color-prop" status="internal" access="private" location="GrowIconLink.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/GrowIconLink.qml" lineno="15" type="alias" attached="false" writable="true"/>
            <qmlproperty name="iconSource" fullname="GrowIconLink::iconSource" href="qml-growiconlink.html#iconSource-prop" status="internal" access="private" location="GrowIconLink.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/GrowIconLink.qml" lineno="13" type="alias" attached="false" writable="true"/>
            <qmlproperty name="url" fullname="GrowIconLink::url" href="qml-growiconlink.html#url-prop" status="internal" access="private" location="GrowIconLink.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/GrowIconLink.qml" lineno="14" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Headline" qml-module-name="Headline" href="qml-headline.html" status="internal" access="private" location="Headline.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Headline.qml" lineno="5" title="Headline" fulltitle="Headline" subtitle="">
            <qmlproperty name="text" fullname="Headline::text" href="qml-headline.html#text-prop" status="internal" access="private" location="Headline.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Headline.qml" lineno="10" type="alias" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="ImageSelector" qml-module-name="ImageSelector" href="qml-imageselector.html" status="active" access="public" documented="true" title="ImageSelector" fulltitle="ImageSelector" subtitle="" brief="A image selector with popup preview">
            <contents name="setting-default-text-and-capitalization" title="Setting default text and capitalization" level="1"/>
            <qmlproperty name="imageSource" fullname="ImageSelector::imageSource" href="qml-imageselector.html#imageSource-prop" status="internal" access="private" location="ImageSelector.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/ImageSelector.qml" lineno="33" type="string" attached="false" writable="true"/>
            <qmlproperty name="placeHolderText" fullname="ImageSelector::placeHolderText" href="qml-imageselector.html#placeHolderText-prop" status="internal" access="private" location="ImageSelector.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/ImageSelector.qml" lineno="34" type="alias" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="ImportContent" qml-module-name="ImportContent" href="qml-importcontent.html" status="internal" access="private" location="ImportContent.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/ImportContent.qml" lineno="11" title="ImportContent" fulltitle="ImportContent" subtitle="">
            <function name="projectFileSelected" fullname="ImportContent::projectFileSelected" href="qml-importcontent.html#projectFileSelected-signal" status="internal" access="private" location="ImportContent.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/ImportContent.qml" lineno="18" meta="qmlsignal"/>
            <function name="videoImportConvertFileSelected" fullname="ImportContent::videoImportConvertFileSelected" href="qml-importcontent.html#videoImportConvertFileSelected-signal" status="internal" access="private" location="ImportContent.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/ImportContent.qml" lineno="17" meta="qmlsignal"/>
        </qmlclass>
        <qmlclass name="Installed" qml-module-name="Installed" href="qml-installed.html" status="internal" access="private" location="Installed.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Installed.qml" lineno="12" title="Installed" fulltitle="Installed" subtitle="">
            <function name="checkIsContentInstalled" fullname="Installed::checkIsContentInstalled" href="qml-installed.html#checkIsContentInstalled-method" status="internal" access="private" location="Installed.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Installed.qml" lineno="51" meta="qmlmethod"/>
            <function name="setNavigationItem" fullname="Installed::setNavigationItem" href="qml-installed.html#setNavigationItem-signal" status="internal" access="private" location="Installed.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Installed.qml" lineno="15" meta="qmlsignal"/>
            <function name="setSidebarActive" fullname="Installed::setSidebarActive" href="qml-installed.html#setSidebarActive-signal" status="internal" access="private" location="Installed.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Installed.qml" lineno="16" meta="qmlsignal"/>
            <qmlproperty name="enabled" fullname="Installed::enabled" href="qml-installed.html#enabled-prop" status="internal" access="private" location="Installed.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Installed.qml" lineno="19" type="bool" attached="false" writable="true"/>
            <qmlproperty name="refresh" fullname="Installed::refresh" href="qml-installed.html#refresh-prop" status="internal" access="private" location="Installed.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Installed.qml" lineno="18" type="bool" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="InstalledWelcomeScreen" qml-module-name="InstalledWelcomeScreen" href="qml-installedwelcomescreen.html" status="internal" access="private" location="InstalledWelcomeScreen.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/InstalledWelcomeScreen.qml" lineno="8" title="InstalledWelcomeScreen" fulltitle="InstalledWelcomeScreen" subtitle="">
            <function name="helperButtonPressed" fullname="InstalledWelcomeScreen::helperButtonPressed" href="qml-installedwelcomescreen.html#helperButtonPressed-signal" status="internal" access="private" location="InstalledWelcomeScreen.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/InstalledWelcomeScreen.qml" lineno="10" meta="qmlsignal"/>
        </qmlclass>
        <class name="LinuxWindow" href="linuxwindow.html" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="50" bases="BaseWindow">
            <function name="LinuxWindow" fullname="LinuxWindow::LinuxWindow" href="linuxwindow.html#LinuxWindow" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="53" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="LinuxWindow(QVector&lt;int&gt; activeScreensList, QString projectPath, QString id, QString volume, const QString fillmode, const bool checkWallpaperVisible, QObject *parent)">
                <parameter type="QVector&lt;int&gt;" name="activeScreensList" default=""/>
                <parameter type="QString" name="projectPath" default=""/>
                <parameter type="QString" name="id" default=""/>
                <parameter type="QString" name="volume" default=""/>
                <parameter type="const QString" name="fillmode" default=""/>
                <parameter type="const bool" name="checkWallpaperVisible" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="destroyThis" fullname="LinuxWindow::destroyThis" href="linuxwindow.html#destroyThis" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="59" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void destroyThis() override"/>
            <function name="metaObject" fullname="LinuxWindow::metaObject" href="linuxwindow.html#metaObject" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="51" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_metacall" fullname="LinuxWindow::qt_metacall" href="linuxwindow.html#qt_metacall" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="51" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="LinuxWindow::qt_metacast" href="linuxwindow.html#qt_metacast" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="51" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="LinuxWindow::qt_static_metacall" href="linuxwindow.html#qt_static_metacall" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="51" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="setVisible" fullname="LinuxWindow::setVisible" href="linuxwindow.html#setVisible" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="58" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void setVisible(bool show) override">
                <parameter type="bool" name="show" default=""/>
            </function>
            <function name="setupWallpaperForAllScreens" fullname="LinuxWindow::setupWallpaperForAllScreens" href="linuxwindow.html#setupWallpaperForAllScreens" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="64" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setupWallpaperForAllScreens()"/>
            <function name="setupWallpaperForMultipleScreens" fullname="LinuxWindow::setupWallpaperForMultipleScreens" href="linuxwindow.html#setupWallpaperForMultipleScreens" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="65" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setupWallpaperForMultipleScreens(const QVector&lt;int&gt; &amp;activeScreensList)">
                <parameter type="const QVector&lt;int&gt; &amp;" name="activeScreensList" default=""/>
            </function>
            <function name="setupWallpaperForOneScreen" fullname="LinuxWindow::setupWallpaperForOneScreen" href="linuxwindow.html#setupWallpaperForOneScreen" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="63" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setupWallpaperForOneScreen(int activeScreen)">
                <parameter type="int" name="activeScreen" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="LinuxWindow::QPrivateSignal" href="linuxwindow-qprivatesignal.html" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="51"/>
            <variable name="m_window" fullname="LinuxWindow::m_window" href="linuxwindow.html#m_window-var" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="62" type="QQuickView" static="false"/>
            <variable name="staticMetaObject" fullname="LinuxWindow::staticMetaObject" href="linuxwindow.html#staticMetaObject-var" status="internal" access="private" location="linuxwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/linuxwindow.h" lineno="51" type="const QMetaObject" static="true"/>
        </class>
        <class name="MacBridge" href="macbridge.html" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="39" bases="QObject">
            <function name="MacBridge" fullname="MacBridge::MacBridge" href="macbridge.html#MacBridge" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="44" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="MacBridge()"/>
            <function name="SetBackgroundLevel" fullname="MacBridge::SetBackgroundLevel" href="macbridge.html#SetBackgroundLevel" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="48" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void SetBackgroundLevel(QWindow *window)">
                <parameter type="QWindow *" name="window" default=""/>
            </function>
            <function name="instance" fullname="MacBridge::instance" href="macbridge.html#instance" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="47" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="MacBridge *" signature="MacBridge * instance()"/>
            <function name="metaObject" fullname="MacBridge::metaObject" href="macbridge.html#metaObject" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="40" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_metacall" fullname="MacBridge::qt_metacall" href="macbridge.html#qt_metacall" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="40" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="MacBridge::qt_metacast" href="macbridge.html#qt_metacast" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="40" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="MacBridge::qt_static_metacall" href="macbridge.html#qt_static_metacall" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="40" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="MacBridge::QPrivateSignal" href="macbridge-qprivatesignal.html" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="40"/>
            <variable name="bridge" fullname="MacBridge::bridge" href="macbridge.html#bridge-var" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="43" type="MacBridge *" static="true"/>
            <variable name="staticMetaObject" fullname="MacBridge::staticMetaObject" href="macbridge.html#staticMetaObject-var" status="internal" access="private" location="macbridge.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macbridge.h" lineno="40" type="const QMetaObject" static="true"/>
        </class>
        <class name="MacIntegration" href="macintegration.html" status="internal" access="private" location="macintegration.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macintegration.h" lineno="39" bases="QObject">
            <function name="MacIntegration" fullname="MacIntegration::MacIntegration" href="macintegration.html#MacIntegration" status="internal" access="private" location="macintegration.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macintegration.h" lineno="42" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="MacIntegration(QObject *parent)">
                <parameter type="QObject *" name="parent" default=""/>
            </function>
            <function name="SetBackgroundLevel" fullname="MacIntegration::SetBackgroundLevel" href="macintegration.html#SetBackgroundLevel" status="internal" access="private" location="macintegration.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macintegration.h" lineno="43" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void SetBackgroundLevel(QWindow *window)">
                <parameter type="QWindow *" name="window" default=""/>
            </function>
            <function name="metaObject" fullname="MacIntegration::metaObject" href="macintegration.html#metaObject" status="internal" access="private" location="macintegration.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macintegration.h" lineno="40" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_metacall" fullname="MacIntegration::qt_metacall" href="macintegration.html#qt_metacall" status="internal" access="private" location="macintegration.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macintegration.h" lineno="40" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="MacIntegration::qt_metacast" href="macintegration.html#qt_metacast" status="internal" access="private" location="macintegration.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macintegration.h" lineno="40" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="MacIntegration::qt_static_metacall" href="macintegration.html#qt_static_metacall" status="internal" access="private" location="macintegration.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macintegration.h" lineno="40" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="MacIntegration::QPrivateSignal" href="macintegration-qprivatesignal.html" status="internal" access="private" location="macintegration.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macintegration.h" lineno="40"/>
            <variable name="staticMetaObject" fullname="MacIntegration::staticMetaObject" href="macintegration.html#staticMetaObject-var" status="internal" access="private" location="macintegration.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macintegration.h" lineno="40" type="const QMetaObject" static="true"/>
        </class>
        <class name="MacWindow" href="macwindow.html" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="51" bases="BaseWindow">
            <function name="MacWindow" fullname="MacWindow::MacWindow" href="macwindow.html#MacWindow" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="54" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="MacWindow(const QVector&lt;int&gt; &amp;activeScreensList, const QString &amp;projectPath, const QString &amp;id, const QString &amp;volume, const QString &amp;fillmode)">
                <parameter type="const QVector&lt;int&gt; &amp;" name="activeScreensList" default=""/>
                <parameter type="const QString &amp;" name="projectPath" default=""/>
                <parameter type="const QString &amp;" name="id" default=""/>
                <parameter type="const QString &amp;" name="volume" default=""/>
                <parameter type="const QString &amp;" name="fillmode" default=""/>
            </function>
            <function name="destroyThis" fullname="MacWindow::destroyThis" href="macwindow.html#destroyThis" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="65" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void destroyThis() override"/>
            <function name="metaObject" fullname="MacWindow::metaObject" href="macwindow.html#metaObject" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="52" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_metacall" fullname="MacWindow::qt_metacall" href="macwindow.html#qt_metacall" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="52" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="MacWindow::qt_metacast" href="macwindow.html#qt_metacast" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="52" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="MacWindow::qt_static_metacall" href="macwindow.html#qt_static_metacall" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="52" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="setVisible" fullname="MacWindow::setVisible" href="macwindow.html#setVisible" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="64" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void setVisible(bool show) override">
                <parameter type="bool" name="show" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="MacWindow::QPrivateSignal" href="macwindow-qprivatesignal.html" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="52"/>
            <variable name="m_window" fullname="MacWindow::m_window" href="macwindow.html#m_window-var" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="68" type="QQuickView" static="false"/>
            <variable name="staticMetaObject" fullname="MacWindow::staticMetaObject" href="macwindow.html#staticMetaObject-var" status="internal" access="private" location="macwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/macwindow.h" lineno="52" type="const QMetaObject" static="true"/>
        </class>
        <class name="MainWindow" href="mainwindow.html" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="58" bases="QQuickView">
            <function name="MainWindow" fullname="MainWindow::MainWindow" href="mainwindow.html#MainWindow" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="62" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="MainWindow(int screenAt, QString projectPath, QString id, QString decoder, QString volume, QString fillmode, QWindow *parent)">
                <parameter type="int" name="screenAt" default=""/>
                <parameter type="QString" name="projectPath" default=""/>
                <parameter type="QString" name="id" default=""/>
                <parameter type="QString" name="decoder" default=""/>
                <parameter type="QString" name="volume" default=""/>
                <parameter type="QString" name="fillmode" default=""/>
                <parameter type="QWindow *" name="parent" default="nullptr"/>
            </function>
            <function name="decoder" fullname="MainWindow::decoder" href="mainwindow.html#decoder-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="126" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="decoder" type="QString" signature="QString decoder() const"/>
            <function name="decoderChanged" fullname="MainWindow::decoderChanged" href="mainwindow.html#decoder-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="261" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="decoder" type="void" signature="void decoderChanged(QString decoder)">
                <parameter type="QString" name="decoder" default=""/>
            </function>
            <function name="destroyThis" fullname="MainWindow::destroyThis" href="mainwindow.html#destroyThis" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="137" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void destroyThis()"/>
            <function name="fillMode" fullname="MainWindow::fillMode" href="mainwindow.html#fillMode-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="97" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="fillMode" type="QString" signature="QString fillMode() const"/>
            <function name="fillModeChanged" fullname="MainWindow::fillModeChanged" href="mainwindow.html#fillMode-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="254" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="fillMode" type="void" signature="void fillModeChanged(QString fillMode)">
                <parameter type="QString" name="fillMode" default=""/>
            </function>
            <function name="fullContentPath" fullname="MainWindow::fullContentPath" href="mainwindow.html#fullContentPath-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="112" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="fullContentPath" type="QString" signature="QString fullContentPath() const"/>
            <function name="fullContentPathChanged" fullname="MainWindow::fullContentPathChanged" href="mainwindow.html#fullContentPath-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="257" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="fullContentPath" type="void" signature="void fullContentPathChanged(QString fullContentPath)">
                <parameter type="QString" name="fullContentPath" default=""/>
            </function>
            <function name="getApplicationPath" fullname="MainWindow::getApplicationPath" href="mainwindow.html#getApplicationPath" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="141" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="QString" signature="QString getApplicationPath()"/>
            <function name="init" fullname="MainWindow::init" href="mainwindow.html#init" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="138" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void init()"/>
            <function name="isPlaying" fullname="MainWindow::isPlaying" href="mainwindow.html#isPlaying-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="117" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="isPlaying" type="bool" signature="bool isPlaying() const"/>
            <function name="isPlayingChanged" fullname="MainWindow::isPlayingChanged" href="mainwindow.html#isPlaying-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="258" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="isPlaying" type="void" signature="void isPlayingChanged(bool isPlaying)">
                <parameter type="bool" name="isPlaying" default=""/>
            </function>
            <function name="loops" fullname="MainWindow::loops" href="mainwindow.html#loops-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="102" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="loops" type="bool" signature="bool loops() const"/>
            <function name="loopsChanged" fullname="MainWindow::loopsChanged" href="mainwindow.html#loops-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="255" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="loops" type="void" signature="void loopsChanged(bool loops)">
                <parameter type="bool" name="loops" default=""/>
            </function>
            <function name="messageReceived" fullname="MainWindow::messageReceived" href="mainwindow.html#messageReceived" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="139" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void messageReceived(QString key, QString value)">
                <parameter type="QString" name="key" default=""/>
                <parameter type="QString" name="value" default=""/>
            </function>
            <function name="metaObject" fullname="MainWindow::metaObject" href="mainwindow.html#metaObject" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="59" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="name" fullname="MainWindow::name" href="mainwindow.html#appID-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="82" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="appID" type="QString" signature="QString name() const"/>
            <function name="nameChanged" fullname="MainWindow::nameChanged" href="mainwindow.html#appID-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="251" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void nameChanged(QString appID)">
                <parameter type="QString" name="appID" default=""/>
            </function>
            <function name="playQmlScene" fullname="MainWindow::playQmlScene" href="mainwindow.html#playQmlScene" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="249" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void playQmlScene(QString file)">
                <parameter type="QString" name="file" default=""/>
            </function>
            <function name="playVideo" fullname="MainWindow::playVideo" href="mainwindow.html#playVideo" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="248" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void playVideo(QString path)">
                <parameter type="QString" name="path" default=""/>
            </function>
            <function name="playbackRate" fullname="MainWindow::playbackRate" href="mainwindow.html#playbackRate-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="121" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="playbackRate" type="float" signature="float playbackRate() const"/>
            <function name="playbackRateChanged" fullname="MainWindow::playbackRateChanged" href="mainwindow.html#playbackRate-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="259" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="playbackRate" type="void" signature="void playbackRateChanged(float playbackRate)">
                <parameter type="float" name="playbackRate" default=""/>
            </function>
            <function name="projectConfig" fullname="MainWindow::projectConfig" href="mainwindow.html#projectConfig-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="77" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="projectConfig" type="QString" signature="QString projectConfig() const"/>
            <function name="projectConfigChanged" fullname="MainWindow::projectConfigChanged" href="mainwindow.html#projectConfig-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="250" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="projectConfig" type="void" signature="void projectConfigChanged(QString projectConfig)">
                <parameter type="QString" name="projectConfig" default=""/>
            </function>
            <function name="projectPath" fullname="MainWindow::projectPath" href="mainwindow.html#projectPath" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="92" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QUrl" signature="QUrl projectPath() const"/>
            <function name="qmlExit" fullname="MainWindow::qmlExit" href="mainwindow.html#qmlExit" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="262" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qmlExit()"/>
            <function name="qmlSceneValueReceived" fullname="MainWindow::qmlSceneValueReceived" href="mainwindow.html#qmlSceneValueReceived" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="260" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qmlSceneValueReceived(QString key, QString value)">
                <parameter type="QString" name="key" default=""/>
                <parameter type="QString" name="value" default=""/>
            </function>
            <function name="qt_metacall" fullname="MainWindow::qt_metacall" href="mainwindow.html#qt_metacall" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="59" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="MainWindow::qt_metacast" href="mainwindow.html#qt_metacast" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="59" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="MainWindow::qt_static_metacall" href="mainwindow.html#qt_static_metacall" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="59" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="screenNumber" fullname="MainWindow::screenNumber" href="mainwindow.html#screenNumber-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="87" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="screenNumber" type="QVector&lt;int&gt;" signature="QVector&lt;int&gt; screenNumber() const"/>
            <function name="screenNumberChanged" fullname="MainWindow::screenNumberChanged" href="mainwindow.html#screenNumber-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="252" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="screenNumber" type="void" signature="void screenNumberChanged(QVector&lt;int&gt; screenNumber)">
                <parameter type="QVector&lt;int&gt;" name="screenNumber" default=""/>
            </function>
            <function name="setDecoder" fullname="MainWindow::setDecoder" href="mainwindow.html#decoder-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="229" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="decoder" type="void" signature="void setDecoder(QString decoder)">
                <parameter type="QString" name="decoder" default=""/>
            </function>
            <function name="setFillMode" fullname="MainWindow::setFillMode" href="mainwindow.html#fillMode-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="164" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="fillMode" type="void" signature="void setFillMode(QString fillMode)">
                <parameter type="QString" name="fillMode" default=""/>
            </function>
            <function name="setFullContentPath" fullname="MainWindow::setFullContentPath" href="mainwindow.html#fullContentPath-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="201" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="fullContentPath" type="void" signature="void setFullContentPath(QString fullContentPath)">
                <parameter type="QString" name="fullContentPath" default=""/>
            </function>
            <function name="setIsPlaying" fullname="MainWindow::setIsPlaying" href="mainwindow.html#isPlaying-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="210" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="isPlaying" type="void" signature="void setIsPlaying(bool isPlaying)">
                <parameter type="bool" name="isPlaying" default=""/>
            </function>
            <function name="setLoops" fullname="MainWindow::setLoops" href="mainwindow.html#loops-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="173" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="loops" type="void" signature="void setLoops(bool loops)">
                <parameter type="bool" name="loops" default=""/>
            </function>
            <function name="setPlaybackRate" fullname="MainWindow::setPlaybackRate" href="mainwindow.html#playbackRate-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="219" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="playbackRate" type="void" signature="void setPlaybackRate(float playbackRate)">
                <parameter type="float" name="playbackRate" default=""/>
            </function>
            <function name="setProjectConfig" fullname="MainWindow::setProjectConfig" href="mainwindow.html#projectConfig-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="146" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="projectConfig" type="void" signature="void setProjectConfig(QString projectConfig)">
                <parameter type="QString" name="projectConfig" default=""/>
            </function>
            <function name="setProjectPath" fullname="MainWindow::setProjectPath" href="mainwindow.html#setProjectPath" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="191" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setProjectPath(const QUrl &amp;projectPath)">
                <parameter type="const QUrl &amp;" name="projectPath" default=""/>
            </function>
            <function name="setScreenNumber" fullname="MainWindow::setScreenNumber" href="mainwindow.html#screenNumber-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="196" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="screenNumber" type="void" signature="void setScreenNumber(const QVector&lt;int&gt; &amp;screenNumber)">
                <parameter type="const QVector&lt;int&gt; &amp;" name="screenNumber" default=""/>
            </function>
            <function name="setVolume" fullname="MainWindow::setVolume" href="mainwindow.html#volume-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="182" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="volume" type="void" signature="void setVolume(float volume)">
                <parameter type="float" name="volume" default=""/>
            </function>
            <function name="setWallpaperType" fullname="MainWindow::setWallpaperType" href="mainwindow.html#wallpaperType-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="238" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="wallpaperType" type="void" signature="void setWallpaperType(QString wallpaperType)">
                <parameter type="QString" name="wallpaperType" default=""/>
            </function>
            <function name="setname" fullname="MainWindow::setname" href="mainwindow.html#appID-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="155" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void setname(QString appID)">
                <parameter type="QString" name="appID" default=""/>
            </function>
            <function name="volume" fullname="MainWindow::volume" href="mainwindow.html#volume-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="107" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="volume" type="float" signature="float volume() const"/>
            <function name="volumeChanged" fullname="MainWindow::volumeChanged" href="mainwindow.html#volume-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="256" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="volume" type="void" signature="void volumeChanged(float volume)">
                <parameter type="float" name="volume" default=""/>
            </function>
            <function name="wallpaperType" fullname="MainWindow::wallpaperType" href="mainwindow.html#wallpaperType-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="131" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="wallpaperType" type="QString" signature="QString wallpaperType() const"/>
            <function name="wallpaperTypeChanged" fullname="MainWindow::wallpaperTypeChanged" href="mainwindow.html#wallpaperType-prop" status="active" access="public" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="264" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="wallpaperType" type="void" signature="void wallpaperTypeChanged(QString wallpaperType)">
                <parameter type="QString" name="wallpaperType" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="MainWindow::QPrivateSignal" href="mainwindow-qprivatesignal.html" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="59"/>
            <property name="appID" fullname="MainWindow::appID" href="mainwindow.html#appID-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="66">
                <getter name="name"/>
                <setter name="setname"/>
                <notifier name="nameChanged"/>
            </property>
            <property name="decoder" fullname="MainWindow::decoder" href="mainwindow.html#decoder-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="75">
                <getter name="decoder"/>
                <setter name="setDecoder"/>
                <notifier name="decoderChanged"/>
            </property>
            <property name="fillMode" fullname="MainWindow::fillMode" href="mainwindow.html#fillMode-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="70">
                <getter name="fillMode"/>
                <setter name="setFillMode"/>
                <notifier name="fillModeChanged"/>
            </property>
            <property name="fullContentPath" fullname="MainWindow::fullContentPath" href="mainwindow.html#fullContentPath-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="68">
                <getter name="fullContentPath"/>
                <setter name="setFullContentPath"/>
                <notifier name="fullContentPathChanged"/>
            </property>
            <property name="isPlaying" fullname="MainWindow::isPlaying" href="mainwindow.html#isPlaying-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="73">
                <getter name="isPlaying"/>
                <setter name="setIsPlaying"/>
                <notifier name="isPlayingChanged"/>
            </property>
            <property name="loops" fullname="MainWindow::loops" href="mainwindow.html#loops-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="71">
                <getter name="loops"/>
                <setter name="setLoops"/>
                <notifier name="loopsChanged"/>
            </property>
            <property name="playbackRate" fullname="MainWindow::playbackRate" href="mainwindow.html#playbackRate-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="74">
                <getter name="playbackRate"/>
                <setter name="setPlaybackRate"/>
                <notifier name="playbackRateChanged"/>
            </property>
            <property name="projectConfig" fullname="MainWindow::projectConfig" href="mainwindow.html#projectConfig-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="65">
                <getter name="projectConfig"/>
                <setter name="setProjectConfig"/>
                <notifier name="projectConfigChanged"/>
            </property>
            <property name="screenNumber" fullname="MainWindow::screenNumber" href="mainwindow.html#screenNumber-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="64">
                <getter name="screenNumber"/>
                <setter name="setScreenNumber"/>
                <notifier name="screenNumberChanged"/>
            </property>
            <property name="volume" fullname="MainWindow::volume" href="mainwindow.html#volume-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="72">
                <getter name="volume"/>
                <setter name="setVolume"/>
                <notifier name="volumeChanged"/>
            </property>
            <property name="wallpaperType" fullname="MainWindow::wallpaperType" href="mainwindow.html#wallpaperType-prop" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="69">
                <getter name="wallpaperType"/>
                <setter name="setWallpaperType"/>
                <notifier name="wallpaperTypeChanged"/>
            </property>
            <variable name="m_appID" fullname="MainWindow::m_appID" href="mainwindow.html#m_appID-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="277" type="QString" static="false"/>
            <variable name="m_decoder" fullname="MainWindow::m_decoder" href="mainwindow.html#m_decoder-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="286" type="QString" static="false"/>
            <variable name="m_fillMode" fullname="MainWindow::m_fillMode" href="mainwindow.html#m_fillMode-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="280" type="QString" static="false"/>
            <variable name="m_fullContentPath" fullname="MainWindow::m_fullContentPath" href="mainwindow.html#m_fullContentPath-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="283" type="QString" static="false"/>
            <variable name="m_hwnd" fullname="MainWindow::m_hwnd" href="mainwindow.html#m_hwnd-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="268" type="HWND" static="false"/>
            <variable name="m_isPlaying" fullname="MainWindow::m_isPlaying" href="mainwindow.html#m_isPlaying-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="284" type="bool" static="false"/>
            <variable name="m_loops" fullname="MainWindow::m_loops" href="mainwindow.html#m_loops-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="281" type="bool" static="false"/>
            <variable name="m_playbackRate" fullname="MainWindow::m_playbackRate" href="mainwindow.html#m_playbackRate-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="285" type="float" static="false"/>
            <variable name="m_project" fullname="MainWindow::m_project" href="mainwindow.html#m_project-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="274" type="QJsonObject" static="false"/>
            <variable name="m_projectConfig" fullname="MainWindow::m_projectConfig" href="mainwindow.html#m_projectConfig-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="275" type="QString" static="false"/>
            <variable name="m_projectFile" fullname="MainWindow::m_projectFile" href="mainwindow.html#m_projectFile-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="273" type="QString" static="false"/>
            <variable name="m_projectPath" fullname="MainWindow::m_projectPath" href="mainwindow.html#m_projectPath-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="272" type="QUrl" static="false"/>
            <variable name="m_screenNumber" fullname="MainWindow::m_screenNumber" href="mainwindow.html#m_screenNumber-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="278" type="QVector&lt;int&gt;" static="false"/>
            <variable name="m_volume" fullname="MainWindow::m_volume" href="mainwindow.html#m_volume-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="282" type="float" static="false"/>
            <variable name="m_wallpaperType" fullname="MainWindow::m_wallpaperType" href="mainwindow.html#m_wallpaperType-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="287" type="QString" static="false"/>
            <variable name="m_worker_hwnd" fullname="MainWindow::m_worker_hwnd" href="mainwindow.html#m_worker_hwnd-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="269" type="HWND" static="false"/>
            <variable name="staticMetaObject" fullname="MainWindow::staticMetaObject" href="mainwindow.html#staticMetaObject-var" status="internal" access="private" location="SPWmainwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/SPWmainwindow.h" lineno="59" type="const QMetaObject" static="true"/>
        </class>
        <qmlclass name="MonitorConfiguration" qml-module-name="MonitorConfiguration" href="qml-monitorconfiguration.html" status="internal" access="private" location="MonitorConfiguration.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Dialogs/MonitorConfiguration.qml" lineno="7" title="MonitorConfiguration" fulltitle="MonitorConfiguration" subtitle=""/>
        <qmlclass name="MonitorSelection" qml-module-name="MonitorSelection" href="qml-monitorselection.html" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="8" title="MonitorSelection" fulltitle="MonitorSelection" subtitle="">
            <function name="getActiveMonitors" fullname="MonitorSelection::getActiveMonitors" href="qml-monitorselection.html#getActiveMonitors-method" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="72" meta="qmlmethod"/>
            <function name="requestProjectSettings" fullname="MonitorSelection::requestProjectSettings" href="qml-monitorselection.html#requestProjectSettings-signal" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="40" meta="qmlsignal"/>
            <function name="reset" fullname="MonitorSelection::reset" href="qml-monitorselection.html#reset-method" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="64" meta="qmlmethod"/>
            <function name="resize" fullname="MonitorSelection::resize" href="qml-monitorselection.html#resize-method" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="99" meta="qmlmethod"/>
            <function name="selectMonitorAt" fullname="MonitorSelection::selectMonitorAt" href="qml-monitorselection.html#selectMonitorAt-method" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="85" meta="qmlmethod"/>
            <function name="selectOnly" fullname="MonitorSelection::selectOnly" href="qml-monitorselection.html#selectOnly-method" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="53" meta="qmlmethod"/>
            <qmlproperty name="activeMonitors" fullname="MonitorSelection::activeMonitors" href="qml-monitorselection.html#activeMonitors-prop" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="35" type="var" attached="false" writable="true"/>
            <qmlproperty name="availableHeight" fullname="MonitorSelection::availableHeight" href="qml-monitorselection.html#availableHeight-prop" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="28" type="real" attached="false" writable="true"/>
            <qmlproperty name="availableWidth" fullname="MonitorSelection::availableWidth" href="qml-monitorselection.html#availableWidth-prop" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="27" type="real" attached="false" writable="true"/>
            <qmlproperty name="background" fullname="MonitorSelection::background" href="qml-monitorselection.html#background-prop" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="37" type="alias" attached="false" writable="true"/>
            <qmlproperty name="fontSize" fullname="MonitorSelection::fontSize" href="qml-monitorselection.html#fontSize-prop" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="29" type="int" attached="false" writable="true"/>
            <qmlproperty name="monitorWithoutContentSelectable" fullname="MonitorSelection::monitorWithoutContentSelectable" href="qml-monitorselection.html#monitorWithoutContentSelectable-prop" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="31" type="bool" attached="false" writable="true"/>
            <qmlproperty name="multipleMonitorsSelectable" fullname="MonitorSelection::multipleMonitorsSelectable" href="qml-monitorselection.html#multipleMonitorsSelectable-prop" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="32" type="bool" attached="false" writable="true"/>
            <qmlproperty name="radius" fullname="MonitorSelection::radius" href="qml-monitorselection.html#radius-prop" status="internal" access="private" location="MonitorSelection.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelection.qml" lineno="38" type="alias" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="MonitorSelectionItem" qml-module-name="MonitorSelectionItem" href="qml-monitorselectionitem.html" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="8" title="MonitorSelectionItem" fulltitle="MonitorSelectionItem" subtitle="">
            <function name="monitorSelected" fullname="MonitorSelectionItem::monitorSelected" href="qml-monitorselectionitem.html#monitorSelected-signal" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="36" meta="qmlsignal"/>
            <qmlproperty name="appID" fullname="MonitorSelectionItem::appID" href="qml-monitorselectionitem.html#appID-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="17" type="string" attached="false" writable="true"/>
            <qmlproperty name="fontSize" fullname="MonitorSelectionItem::fontSize" href="qml-monitorselectionitem.html#fontSize-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="31" type="int" attached="false" writable="true"/>
            <qmlproperty name="hasContent" fullname="MonitorSelectionItem::hasContent" href="qml-monitorselectionitem.html#hasContent-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="20" type="bool" attached="false" writable="true"/>
            <qmlproperty name="index" fullname="MonitorSelectionItem::index" href="qml-monitorselectionitem.html#index-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="32" type="int" attached="false" writable="true"/>
            <qmlproperty name="installedType" fullname="MonitorSelectionItem::installedType" href="qml-monitorselectionitem.html#installedType-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="18" type="var" attached="false" writable="true"/>
            <qmlproperty name="isSelected" fullname="MonitorSelectionItem::isSelected" href="qml-monitorselectionitem.html#isSelected-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="33" type="bool" attached="false" writable="true"/>
            <qmlproperty name="monitorID" fullname="MonitorSelectionItem::monitorID" href="qml-monitorselectionitem.html#monitorID-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="15" type="string" attached="false" writable="true"/>
            <qmlproperty name="monitorManufacturer" fullname="MonitorSelectionItem::monitorManufacturer" href="qml-monitorselectionitem.html#monitorManufacturer-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="13" type="string" attached="false" writable="true"/>
            <qmlproperty name="monitorModel" fullname="MonitorSelectionItem::monitorModel" href="qml-monitorselectionitem.html#monitorModel-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="12" type="string" attached="false" writable="true"/>
            <qmlproperty name="monitorName" fullname="MonitorSelectionItem::monitorName" href="qml-monitorselectionitem.html#monitorName-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="14" type="string" attached="false" writable="true"/>
            <qmlproperty name="monitorSize" fullname="MonitorSelectionItem::monitorSize" href="qml-monitorselectionitem.html#monitorSize-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="11" type="rect" attached="false" writable="true"/>
            <qmlproperty name="monitorWithoutContentSelectable" fullname="MonitorSelectionItem::monitorWithoutContentSelectable" href="qml-monitorselectionitem.html#monitorWithoutContentSelectable-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="19" type="bool" attached="false" writable="true"/>
            <qmlproperty name="previewImage" fullname="MonitorSelectionItem::previewImage" href="qml-monitorselectionitem.html#previewImage-prop" status="internal" access="private" location="MonitorSelectionItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorSelectionItem.qml" lineno="16" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Monitors" qml-module-name="Monitors" href="qml-monitors.html" status="internal" access="private" location="Monitors.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/Monitors.qml" lineno="14" title="Monitors" fulltitle="Monitors" subtitle="">
            <qmlproperty name="activeMonitorIndex" fullname="Monitors::activeMonitorIndex" href="qml-monitors.html#activeMonitorIndex-prop" status="internal" access="private" location="Monitors.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/Monitors.qml" lineno="34" type="int" attached="false" writable="true"/>
            <qmlproperty name="activeMonitorName" fullname="Monitors::activeMonitorName" href="qml-monitors.html#activeMonitorName-prop" status="internal" access="private" location="Monitors.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/Monitors.qml" lineno="33" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="MonitorsProjectSettingItem" qml-module-name="MonitorsProjectSettingItem" href="qml-monitorsprojectsettingitem.html" status="internal" access="private" location="MonitorsProjectSettingItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorsProjectSettingItem.qml" lineno="10" title="MonitorsProjectSettingItem" fulltitle="MonitorsProjectSettingItem" subtitle="">
            <qmlproperty name="isHeadline" fullname="MonitorsProjectSettingItem::isHeadline" href="qml-monitorsprojectsettingitem.html#isHeadline-prop" status="internal" access="private" location="MonitorsProjectSettingItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorsProjectSettingItem.qml" lineno="17" type="bool" attached="false" writable="true"/>
            <qmlproperty name="itemIndex" fullname="MonitorsProjectSettingItem::itemIndex" href="qml-monitorsprojectsettingitem.html#itemIndex-prop" status="internal" access="private" location="MonitorsProjectSettingItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorsProjectSettingItem.qml" lineno="18" type="int" attached="false" writable="true"/>
            <qmlproperty name="name" fullname="MonitorsProjectSettingItem::name" href="qml-monitorsprojectsettingitem.html#name-prop" status="internal" access="private" location="MonitorsProjectSettingItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorsProjectSettingItem.qml" lineno="15" type="string" attached="false" writable="true"/>
            <qmlproperty name="projectSettingsListmodelRef" fullname="MonitorsProjectSettingItem::projectSettingsListmodelRef" href="qml-monitorsprojectsettingitem.html#projectSettingsListmodelRef-prop" status="internal" access="private" location="MonitorsProjectSettingItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorsProjectSettingItem.qml" lineno="19" type="var" attached="false" writable="true"/>
            <qmlproperty name="selectedMonitor" fullname="MonitorsProjectSettingItem::selectedMonitor" href="qml-monitorsprojectsettingitem.html#selectedMonitor-prop" status="internal" access="private" location="MonitorsProjectSettingItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorsProjectSettingItem.qml" lineno="14" type="int" attached="false" writable="true"/>
            <qmlproperty name="value" fullname="MonitorsProjectSettingItem::value" href="qml-monitorsprojectsettingitem.html#value-prop" status="internal" access="private" location="MonitorsProjectSettingItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/MonitorsProjectSettingItem.qml" lineno="16" type="var" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="MouseHoverBlocker" qml-module-name="MouseHoverBlocker" href="qml-mousehoverblocker.html" status="internal" access="private" location="MouseHoverBlocker.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/MouseHoverBlocker.qml" lineno="4" title="MouseHoverBlocker" fulltitle="MouseHoverBlocker" subtitle=""/>
        <qmlclass name="Navigation" qml-module-name="Navigation" href="qml-navigation.html" status="internal" access="private" location="Navigation.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Navigation.qml" lineno="13" title="Navigation" fulltitle="Navigation" subtitle="">
            <function name="changePage" fullname="Navigation::changePage" href="qml-navigation.html#changePage-signal" status="internal" access="private" location="Navigation.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/Navigation.qml" lineno="25" meta="qmlsignal"/>
            <function name="onPageChanged" fullname="Navigation::onPageChanged" href="qml-navigation.html#onPageChanged-method" status="internal" access="private" location="Navigation.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/Navigation.qml" lineno="49" meta="qmlmethod"/>
            <function name="setActive" fullname="Navigation::setActive" href="qml-navigation.html#setActive-method" status="internal" access="private" location="Navigation.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/Navigation.qml" lineno="40" meta="qmlmethod"/>
            <function name="uploadPressed" fullname="Navigation::uploadPressed" href="qml-navigation.html#uploadPressed-signal" status="internal" access="private" location="Navigation.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Navigation.qml" lineno="18" meta="qmlsignal"/>
            <qmlproperty name="navActive" fullname="Navigation::navActive" href="qml-navigation.html#navActive-prop" status="internal" access="private" location="Navigation.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/Navigation.qml" lineno="28" type="bool" attached="false" writable="true"/>
            <qmlproperty name="navArray" fullname="Navigation::navArray" href="qml-navigation.html#navArray-prop" status="internal" access="private" location="Navigation.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/Navigation.qml" lineno="27" type="var" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="NavigationItem" qml-module-name="NavigationItem" href="qml-navigationitem.html" status="internal" access="private" location="NavigationItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/NavigationItem.qml" lineno="6" title="NavigationItem" fulltitle="NavigationItem" subtitle="">
            <function name="pageClicked" fullname="NavigationItem::pageClicked" href="qml-navigationitem.html#pageClicked-signal" status="internal" access="private" location="NavigationItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/NavigationItem.qml" lineno="30" meta="qmlsignal"/>
            <function name="setActive" fullname="NavigationItem::setActive" href="qml-navigationitem.html#setActive-method" status="internal" access="private" location="NavigationItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/NavigationItem.qml" lineno="32" meta="qmlmethod"/>
            <qmlproperty name="amount" fullname="NavigationItem::amount" href="qml-navigationitem.html#amount-prop" status="internal" access="private" location="NavigationItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/NavigationItem.qml" lineno="20" type="alias" attached="false" writable="true"/>
            <qmlproperty name="enabled" fullname="NavigationItem::enabled" href="qml-navigationitem.html#enabled-prop" status="internal" access="private" location="NavigationItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/NavigationItem.qml" lineno="22" type="bool" attached="false" writable="true"/>
            <qmlproperty name="iconSource" fullname="NavigationItem::iconSource" href="qml-navigationitem.html#iconSource-prop" status="internal" access="private" location="NavigationItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/NavigationItem.qml" lineno="18" type="string" attached="false" writable="true"/>
            <qmlproperty name="name" fullname="NavigationItem::name" href="qml-navigationitem.html#name-prop" status="internal" access="private" location="NavigationItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/NavigationItem.qml" lineno="19" type="alias" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="NavigationWallpaperConfiguration" qml-module-name="NavigationWallpaperConfiguration" href="qml-navigationwallpaperconfiguration.html" status="internal" access="private" location="NavigationWallpaperConfiguration.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Navigation/NavigationWallpaperConfiguration.qml" lineno="10" title="NavigationWallpaperConfiguration" fulltitle="NavigationWallpaperConfiguration" subtitle=""/>
        <qmlclass name="PopupOffline" qml-module-name="PopupOffline" href="qml-popupoffline.html" status="internal" access="private" location="PopupOffline.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/PopupOffline.qml" lineno="9" title="PopupOffline" fulltitle="PopupOffline" subtitle=""/>
        <qmlclass name="PopupSteamWorkshopAgreement" qml-module-name="PopupSteamWorkshopAgreement" href="qml-popupsteamworkshopagreement.html" status="internal" access="private" location="PopupSteamWorkshopAgreement.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/PopupSteamWorkshopAgreement.qml" lineno="9" title="PopupSteamWorkshopAgreement" fulltitle="PopupSteamWorkshopAgreement" subtitle=""/>
        <struct name="QMetaTypeId" href="qmetatypeid.html" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="164">
            <function name="qt_metatype_id" fullname="QMetaTypeId::qt_metatype_id" href="qmetatypeid.html#qt_metatype_id" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="164" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="int" signature="int qt_metatype_id()"/>
            <enum name="anonymous" fullname="QMetaTypeId::anonymous" href="qmetatypeid.html#anonymous-enum" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="164">
                <value name="Defined" value="Q_DECLARE_METATYPE(ScreenPlay::CreateImportVideo::ImportVideoState)"/>
            </enum>
        </struct>
        <class name="RAM" href="ram.html" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="47" bases="QObject">
            <function name="RAM" fullname="RAM::RAM" href="ram.html#RAM" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="62" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="RAM(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="metaObject" fullname="RAM::metaObject" href="ram.html#metaObject" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="48" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_metacall" fullname="RAM::qt_metacall" href="ram.html#qt_metacall" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="48" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="RAM::qt_metacast" href="ram.html#qt_metacast" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="48" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="RAM::qt_static_metacall" href="ram.html#qt_static_metacall" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="48" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="setTotalPagingMemory" fullname="RAM::setTotalPagingMemory" href="ram.html#setTotalPagingMemory" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="179" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setTotalPagingMemory(unsigned long long totalPagingMemory)">
                <parameter type="unsigned long long" name="totalPagingMemory" default=""/>
            </function>
            <function name="setTotalPhysicalMemory" fullname="RAM::setTotalPhysicalMemory" href="ram.html#setTotalPhysicalMemory" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="143" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setTotalPhysicalMemory(unsigned long long totalPhysicalMemory)">
                <parameter type="unsigned long long" name="totalPhysicalMemory" default=""/>
            </function>
            <function name="setTotalVirtualMemory" fullname="RAM::setTotalVirtualMemory" href="ram.html#setTotalVirtualMemory" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="161" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setTotalVirtualMemory(unsigned long long totalVirtualMemory)">
                <parameter type="unsigned long long" name="totalVirtualMemory" default=""/>
            </function>
            <function name="setUsage" fullname="RAM::setUsage" href="ram.html#setUsage" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="125" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setUsage(float usage)">
                <parameter type="float" name="usage" default=""/>
            </function>
            <function name="setUsedPagingMemory" fullname="RAM::setUsedPagingMemory" href="ram.html#setUsedPagingMemory" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="170" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setUsedPagingMemory(unsigned long long usedPagingMemory)">
                <parameter type="unsigned long long" name="usedPagingMemory" default=""/>
            </function>
            <function name="setUsedPhysicalMemory" fullname="RAM::setUsedPhysicalMemory" href="ram.html#setUsedPhysicalMemory" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="134" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setUsedPhysicalMemory(unsigned long long usedPhysicalMemory)">
                <parameter type="unsigned long long" name="usedPhysicalMemory" default=""/>
            </function>
            <function name="setUsedVirtualMemory" fullname="RAM::setUsedVirtualMemory" href="ram.html#setUsedVirtualMemory" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="152" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setUsedVirtualMemory(unsigned long long usedVirtualMemory)">
                <parameter type="unsigned long long" name="usedVirtualMemory" default=""/>
            </function>
            <function name="totalPagingMemory" fullname="RAM::totalPagingMemory" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="101" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="long" type="unsigned long long" signature="unsigned long long totalPagingMemory() const"/>
            <function name="totalPagingMemoryChanged" fullname="RAM::totalPagingMemoryChanged" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="120" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="long" type="void" signature="void totalPagingMemoryChanged(unsigned long long totalPagingMemory)">
                <parameter type="unsigned long long" name="totalPagingMemory" default=""/>
            </function>
            <function name="totalPhysicalMemory" fullname="RAM::totalPhysicalMemory" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="77" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="long" type="unsigned long long" signature="unsigned long long totalPhysicalMemory() const"/>
            <function name="totalPhysicalMemoryChanged" fullname="RAM::totalPhysicalMemoryChanged" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="116" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="long" type="void" signature="void totalPhysicalMemoryChanged(unsigned long long totalPhysicalMemory)">
                <parameter type="unsigned long long" name="totalPhysicalMemory" default=""/>
            </function>
            <function name="totalVirtualMemory" fullname="RAM::totalVirtualMemory" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="83" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="long" type="unsigned long long" signature="unsigned long long totalVirtualMemory() const"/>
            <function name="totalVirtualMemoryChanged" fullname="RAM::totalVirtualMemoryChanged" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="118" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="long" type="void" signature="void totalVirtualMemoryChanged(unsigned long long totalVirtualMemory)">
                <parameter type="unsigned long long" name="totalVirtualMemory" default=""/>
            </function>
            <function name="update" fullname="RAM::update" href="ram.html#update" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="123" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void update()"/>
            <function name="usage" fullname="RAM::usage" href="ram.html#usage-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="65" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="usage" type="float" signature="float usage() const"/>
            <function name="usageChanged" fullname="RAM::usageChanged" href="ram.html#usage-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="108" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="usage" type="void" signature="void usageChanged(float usage)">
                <parameter type="float" name="usage" default=""/>
            </function>
            <function name="usedPagingMemory" fullname="RAM::usedPagingMemory" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="95" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="long" type="unsigned long long" signature="unsigned long long usedPagingMemory() const"/>
            <function name="usedPagingMemoryChanged" fullname="RAM::usedPagingMemoryChanged" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="114" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="long" type="void" signature="void usedPagingMemoryChanged(unsigned long long usedPagingMemory)">
                <parameter type="unsigned long long" name="usedPagingMemory" default=""/>
            </function>
            <function name="usedPhysicalMemory" fullname="RAM::usedPhysicalMemory" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="71" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="long" type="unsigned long long" signature="unsigned long long usedPhysicalMemory() const"/>
            <function name="usedPhysicalMemoryChanged" fullname="RAM::usedPhysicalMemoryChanged" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="110" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="long" type="void" signature="void usedPhysicalMemoryChanged(unsigned long long usedPhysicalMemory)">
                <parameter type="unsigned long long" name="usedPhysicalMemory" default=""/>
            </function>
            <function name="usedVirtualMemory" fullname="RAM::usedVirtualMemory" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="89" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="long" type="unsigned long long" signature="unsigned long long usedVirtualMemory() const"/>
            <function name="usedVirtualMemoryChanged" fullname="RAM::usedVirtualMemoryChanged" href="ram.html#long-prop" status="active" access="public" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="112" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="long" type="void" signature="void usedVirtualMemoryChanged(unsigned long long usedVirtualMemory)">
                <parameter type="unsigned long long" name="usedVirtualMemory" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="RAM::QPrivateSignal" href="ram-qprivatesignal.html" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="48"/>
            <property name="long" fullname="RAM::long" href="ram.html#long-prop" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="59">
                <getter name="totalPagingMemory"/>
                <notifier name="totalPagingMemoryChanged"/>
            </property>
            <property name="long" fullname="RAM::long" href="ram.html#long-prop" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="58">
                <getter name="usedPagingMemory"/>
                <notifier name="usedPagingMemoryChanged"/>
            </property>
            <property name="long" fullname="RAM::long" href="ram.html#long-prop" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="56">
                <getter name="totalVirtualMemory"/>
                <notifier name="totalVirtualMemoryChanged"/>
            </property>
            <property name="long" fullname="RAM::long" href="ram.html#long-prop" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="55">
                <getter name="usedVirtualMemory"/>
                <notifier name="usedVirtualMemoryChanged"/>
            </property>
            <property name="long" fullname="RAM::long" href="ram.html#long-prop" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="53">
                <getter name="totalPhysicalMemory"/>
                <notifier name="totalPhysicalMemoryChanged"/>
            </property>
            <property name="long" fullname="RAM::long" href="ram.html#long-prop" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="52">
                <getter name="usedPhysicalMemory"/>
                <notifier name="usedPhysicalMemoryChanged"/>
            </property>
            <property name="usage" fullname="RAM::usage" href="ram.html#usage-prop" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="50">
                <getter name="usage"/>
                <notifier name="usageChanged"/>
            </property>
            <variable name="m_tickRate" fullname="RAM::m_tickRate" href="ram.html#m_tickRate-var" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="198" type="int" static="false"/>
            <variable name="m_totalPagingMemory" fullname="RAM::m_totalPagingMemory" href="ram.html#m_totalPagingMemory-var" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="195" type="unsigned long long" static="false"/>
            <variable name="m_totalPhysicalMemory" fullname="RAM::m_totalPhysicalMemory" href="ram.html#m_totalPhysicalMemory-var" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="192" type="unsigned long long" static="false"/>
            <variable name="m_totalVirtualMemory" fullname="RAM::m_totalVirtualMemory" href="ram.html#m_totalVirtualMemory-var" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="191" type="unsigned long long" static="false"/>
            <variable name="m_updateTimer" fullname="RAM::m_updateTimer" href="ram.html#m_updateTimer-var" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="197" type="QTimer" static="false"/>
            <variable name="m_usage" fullname="RAM::m_usage" href="ram.html#m_usage-var" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="189" type="float" static="false"/>
            <variable name="m_usedPagingMemory" fullname="RAM::m_usedPagingMemory" href="ram.html#m_usedPagingMemory-var" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="194" type="unsigned long long" static="false"/>
            <variable name="m_usedPhysicalMemory" fullname="RAM::m_usedPhysicalMemory" href="ram.html#m_usedPhysicalMemory-var" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="190" type="unsigned long long" static="false"/>
            <variable name="m_usedVirtualMemory" fullname="RAM::m_usedVirtualMemory" href="ram.html#m_usedVirtualMemory-var" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="193" type="unsigned long long" static="false"/>
            <variable name="staticMetaObject" fullname="RAM::staticMetaObject" href="ram.html#staticMetaObject-var" status="internal" access="private" location="ram.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/ram.h" lineno="48" type="const QMetaObject" static="true"/>
        </class>
        <qmlclass name="RippleEffect" qml-module-name="RippleEffect" href="qml-rippleeffect.html" status="internal" access="private" location="RippleEffect.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/RippleEffect.qml" lineno="11" title="RippleEffect" fulltitle="RippleEffect" subtitle="">
            <function name="distance" fullname="RippleEffect::distance" href="qml-rippleeffect.html#distance-method" status="internal" access="private" location="RippleEffect.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/RippleEffect.qml" lineno="104" meta="qmlmethod"/>
            <function name="furthestDistance" fullname="RippleEffect::furthestDistance" href="qml-rippleeffect.html#furthestDistance-method" status="internal" access="private" location="RippleEffect.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/RippleEffect.qml" lineno="108" meta="qmlmethod"/>
            <function name="trigger" fullname="RippleEffect::trigger" href="qml-rippleeffect.html#trigger-method" status="internal" access="private" location="RippleEffect.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/RippleEffect.qml" lineno="20" meta="qmlmethod"/>
            <qmlproperty name="color" fullname="RippleEffect::color" href="qml-rippleeffect.html#color-prop" status="internal" access="private" location="RippleEffect.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/RippleEffect.qml" lineno="16" type="color" attached="false" writable="true"/>
            <qmlproperty name="duration" fullname="RippleEffect::duration" href="qml-rippleeffect.html#duration-prop" status="internal" access="private" location="RippleEffect.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/RippleEffect.qml" lineno="18" type="int" attached="false" writable="true"/>
            <qmlproperty name="radius" fullname="RippleEffect::radius" href="qml-rippleeffect.html#radius-prop" status="internal" access="private" location="RippleEffect.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/RippleEffect.qml" lineno="15" type="alias" attached="false" writable="true"/>
            <qmlproperty name="target" fullname="RippleEffect::target" href="qml-rippleeffect.html#target-prop" status="internal" access="private" location="RippleEffect.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/RippleEffect.qml" lineno="17" type="var" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="SaveNotification" qml-module-name="SaveNotification" href="qml-savenotification.html" status="internal" access="private" location="SaveNotification.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/SaveNotification.qml" lineno="8" title="SaveNotification" fulltitle="SaveNotification" subtitle="">
            <function name="close" fullname="SaveNotification::close" href="qml-savenotification.html#close-method" status="internal" access="private" location="SaveNotification.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/SaveNotification.qml" lineno="29" meta="qmlmethod"/>
            <function name="open" fullname="SaveNotification::open" href="qml-savenotification.html#open-method" status="internal" access="private" location="SaveNotification.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Monitors/SaveNotification.qml" lineno="25" meta="qmlmethod"/>
        </qmlclass>
        <namespace name="ScreenPlay" href="screenplay.html" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="44" documented="true" module="ScreenPlay" brief="Namespace for ScreenPlay">
            <function name="QStringToEnum" fullname="ScreenPlay::QStringToEnum" href="screenplay.html#QStringToEnum" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="65" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="T" signature="T QStringToEnum(const QString &amp;key, const T defaultValue)">
                <parameter type="const QString &amp;" name="key" default=""/>
                <parameter type="const T" name="defaultValue" default=""/>
            </function>
            <class name="App" fullname="ScreenPlay::App" href="screenplay-app.html" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="71" documented="true" bases="QObject" module="ScreenPlay" brief="Contains all members for ScreenPlay">
                <function name="App" fullname="ScreenPlay::App::App" href="screenplay-app.html#App" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="87" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="App()"/>
                <function name="create" fullname="ScreenPlay::App::create" href="screenplay-app.html#create-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="102" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="create" type="ScreenPlay::Create *" signature="ScreenPlay::Create * create() const"/>
                <function name="createChanged" fullname="ScreenPlay::App::createChanged" href="screenplay-app.html#create-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="145" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="create" type="void" signature="void createChanged(ScreenPlay::Create *create)">
                    <parameter type="ScreenPlay::Create *" name="create" default=""/>
                </function>
                <function name="exit" fullname="ScreenPlay::App::exit" href="screenplay-app.html#exit" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="156" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Tries to send the telemetry quit event before we call quit ourself" signature="void exit()"/>
                <function name="globalVariables" fullname="ScreenPlay::App::globalVariables" href="screenplay-app.html#globalVariables-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="92" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="globalVariables" type="ScreenPlay::GlobalVariables *" signature="ScreenPlay::GlobalVariables * globalVariables() const"/>
                <function name="globalVariablesChanged" fullname="ScreenPlay::App::globalVariablesChanged" href="screenplay-app.html#globalVariables-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="143" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="globalVariables" type="void" signature="void globalVariablesChanged(ScreenPlay::GlobalVariables *globalVariables)">
                    <parameter type="ScreenPlay::GlobalVariables *" name="globalVariables" default=""/>
                </function>
                <function name="init" fullname="ScreenPlay::App::init" href="screenplay-app.html#init" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="89" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Used for initialization after the constructor. The sole purpose is to check if another ScreenPlay instance is running and then quit early. This is also because we cannot call QApplication::quit(); in the SDKConnector before the app.exec(); ( the Qt main event loop ) has started" signature="void init()"/>
                <function name="installedListFilter" fullname="ScreenPlay::App::installedListFilter" href="screenplay-app.html#installedListFilter-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="132" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="installedListFilter" type="ScreenPlay::InstalledListFilter *" signature="ScreenPlay::InstalledListFilter * installedListFilter() const"/>
                <function name="installedListFilterChanged" fullname="ScreenPlay::App::installedListFilterChanged" href="screenplay-app.html#installedListFilter-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="151" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="installedListFilter" type="void" signature="void installedListFilterChanged(ScreenPlay::InstalledListFilter *installedListFilter)">
                    <parameter type="ScreenPlay::InstalledListFilter *" name="installedListFilter" default=""/>
                </function>
                <function name="installedListModel" fullname="ScreenPlay::App::installedListModel" href="screenplay-app.html#installedListModel-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="117" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="installedListModel" type="ScreenPlay::InstalledListModel *" signature="ScreenPlay::InstalledListModel * installedListModel() const"/>
                <function name="installedListModelChanged" fullname="ScreenPlay::App::installedListModelChanged" href="screenplay-app.html#installedListModel-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="148" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="installedListModel" type="void" signature="void installedListModelChanged(ScreenPlay::InstalledListModel *installedListModel)">
                    <parameter type="ScreenPlay::InstalledListModel *" name="installedListModel" default=""/>
                </function>
                <function name="loadSteamPlugin" fullname="ScreenPlay::App::loadSteamPlugin" href="screenplay-app.html#loadSteamPlugin" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="157" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" signature="bool loadSteamPlugin()"/>
                <function name="mainWindowEngine" fullname="ScreenPlay::App::mainWindowEngine" href="screenplay-app.html#mainWindowEngine-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="137" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="mainWindowEngine" type="QQmlApplicationEngine *" signature="QQmlApplicationEngine * mainWindowEngine() const"/>
                <function name="mainWindowEngineChanged" fullname="ScreenPlay::App::mainWindowEngineChanged" href="screenplay-app.html#mainWindowEngine-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="152" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="mainWindowEngine" type="void" signature="void mainWindowEngineChanged(QQmlApplicationEngine *mainWindowEngine)">
                    <parameter type="QQmlApplicationEngine *" name="mainWindowEngine" default=""/>
                </function>
                <function name="metaObject" fullname="ScreenPlay::App::metaObject" href="screenplay-app.html#metaObject" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="72" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="monitorListModel" fullname="ScreenPlay::App::monitorListModel" href="screenplay-app.html#monitorListModel-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="122" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="monitorListModel" type="ScreenPlay::MonitorListModel *" signature="ScreenPlay::MonitorListModel * monitorListModel() const"/>
                <function name="monitorListModelChanged" fullname="ScreenPlay::App::monitorListModelChanged" href="screenplay-app.html#monitorListModel-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="149" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="monitorListModel" type="void" signature="void monitorListModelChanged(ScreenPlay::MonitorListModel *monitorListModel)">
                    <parameter type="ScreenPlay::MonitorListModel *" name="monitorListModel" default=""/>
                </function>
                <function name="profileListModel" fullname="ScreenPlay::App::profileListModel" href="screenplay-app.html#profileListModel-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="127" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="profileListModel" type="ScreenPlay::ProfileListModel *" signature="ScreenPlay::ProfileListModel * profileListModel() const"/>
                <function name="profileListModelChanged" fullname="ScreenPlay::App::profileListModelChanged" href="screenplay-app.html#profileListModel-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="150" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="profileListModel" type="void" signature="void profileListModelChanged(ScreenPlay::ProfileListModel *profileListModel)">
                    <parameter type="ScreenPlay::ProfileListModel *" name="profileListModel" default=""/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::App::qt_metacall" href="screenplay-app.html#qt_metacall" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="72" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::App::qt_metacast" href="screenplay-app.html#qt_metacast" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="72" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::App::qt_static_metacall" href="screenplay-app.html#qt_static_metacall" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="72" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="screenPlayManager" fullname="ScreenPlay::App::screenPlayManager" href="screenplay-app.html#screenPlayManager-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="97" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="screenPlayManager" type="ScreenPlay::ScreenPlayManager *" signature="ScreenPlay::ScreenPlayManager * screenPlayManager() const"/>
                <function name="screenPlayManagerChanged" fullname="ScreenPlay::App::screenPlayManagerChanged" href="screenplay-app.html#screenPlayManager-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="144" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="screenPlayManager" type="void" signature="void screenPlayManagerChanged(ScreenPlay::ScreenPlayManager *screenPlayManager)">
                    <parameter type="ScreenPlay::ScreenPlayManager *" name="screenPlayManager" default=""/>
                </function>
                <function name="setCreate" fullname="ScreenPlay::App::setCreate" href="screenplay-app.html#create-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="182" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="create" type="void" signature="void setCreate(ScreenPlay::Create *create)">
                    <parameter type="ScreenPlay::Create *" name="create" default=""/>
                </function>
                <function name="setGlobalVariables" fullname="ScreenPlay::App::setGlobalVariables" href="screenplay-app.html#globalVariables-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="165" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="globalVariables" type="void" signature="void setGlobalVariables(ScreenPlay::GlobalVariables *globalVariables)">
                    <parameter type="ScreenPlay::GlobalVariables *" name="globalVariables" default=""/>
                </function>
                <function name="setInstalledListFilter" fullname="ScreenPlay::App::setInstalledListFilter" href="screenplay-app.html#installedListFilter-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="235" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="installedListFilter" type="void" signature="void setInstalledListFilter(ScreenPlay::InstalledListFilter *installedListFilter)">
                    <parameter type="ScreenPlay::InstalledListFilter *" name="installedListFilter" default=""/>
                </function>
                <function name="setInstalledListModel" fullname="ScreenPlay::App::setInstalledListModel" href="screenplay-app.html#installedListModel-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="209" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="installedListModel" type="void" signature="void setInstalledListModel(ScreenPlay::InstalledListModel *installedListModel)">
                    <parameter type="ScreenPlay::InstalledListModel *" name="installedListModel" default=""/>
                </function>
                <function name="setMainWindowEngine" fullname="ScreenPlay::App::setMainWindowEngine" href="screenplay-app.html#mainWindowEngine-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="244" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="mainWindowEngine" type="void" signature="void setMainWindowEngine(QQmlApplicationEngine *mainWindowEngine)">
                    <parameter type="QQmlApplicationEngine *" name="mainWindowEngine" default=""/>
                </function>
                <function name="setMonitorListModel" fullname="ScreenPlay::App::setMonitorListModel" href="screenplay-app.html#monitorListModel-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="217" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="monitorListModel" type="void" signature="void setMonitorListModel(ScreenPlay::MonitorListModel *monitorListModel)">
                    <parameter type="ScreenPlay::MonitorListModel *" name="monitorListModel" default=""/>
                </function>
                <function name="setProfileListModel" fullname="ScreenPlay::App::setProfileListModel" href="screenplay-app.html#profileListModel-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="226" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="profileListModel" type="void" signature="void setProfileListModel(ScreenPlay::ProfileListModel *profileListModel)">
                    <parameter type="ScreenPlay::ProfileListModel *" name="profileListModel" default=""/>
                </function>
                <function name="setScreenPlayManager" fullname="ScreenPlay::App::setScreenPlayManager" href="screenplay-app.html#screenPlayManager-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="173" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="screenPlayManager" type="void" signature="void setScreenPlayManager(ScreenPlay::ScreenPlayManager *screenPlayManager)">
                    <parameter type="ScreenPlay::ScreenPlayManager *" name="screenPlayManager" default=""/>
                </function>
                <function name="setSettings" fullname="ScreenPlay::App::setSettings" href="screenplay-app.html#settings-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="200" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="settings" type="void" signature="void setSettings(ScreenPlay::Settings *settings)">
                    <parameter type="ScreenPlay::Settings *" name="settings" default=""/>
                </function>
                <function name="setTrackerSendEvent" fullname="ScreenPlay::App::setTrackerSendEvent" href="screenplay-app.html#setTrackerSendEvent" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="158" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setTrackerSendEvent(const QString &amp;category, const QString &amp;page)">
                    <parameter type="const QString &amp;" name="category" default=""/>
                    <parameter type="const QString &amp;" name="page" default=""/>
                </function>
                <function name="setUtil" fullname="ScreenPlay::App::setUtil" href="screenplay-app.html#util-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="191" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="util" type="void" signature="void setUtil(ScreenPlay::Util *util)">
                    <parameter type="ScreenPlay::Util *" name="util" default=""/>
                </function>
                <function name="settings" fullname="ScreenPlay::App::settings" href="screenplay-app.html#settings-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="112" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="settings" type="ScreenPlay::Settings *" signature="ScreenPlay::Settings * settings() const"/>
                <function name="settingsChanged" fullname="ScreenPlay::App::settingsChanged" href="screenplay-app.html#settings-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="147" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="settings" type="void" signature="void settingsChanged(ScreenPlay::Settings *settings)">
                    <parameter type="ScreenPlay::Settings *" name="settings" default=""/>
                </function>
                <function name="util" fullname="ScreenPlay::App::util" href="screenplay-app.html#util-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="107" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="util" type="ScreenPlay::Util *" signature="ScreenPlay::Util * util() const"/>
                <function name="utilChanged" fullname="ScreenPlay::App::utilChanged" href="screenplay-app.html#util-prop" status="active" access="public" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="146" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="util" type="void" signature="void utilChanged(ScreenPlay::Util *util)">
                    <parameter type="ScreenPlay::Util *" name="util" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::App::QPrivateSignal" href="screenplay-app-qprivatesignal.html" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="72"/>
                <property name="create" fullname="ScreenPlay::App::create" href="screenplay-app.html#create-prop" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="77">
                    <getter name="create"/>
                    <setter name="setCreate"/>
                    <notifier name="createChanged"/>
                </property>
                <property name="globalVariables" fullname="ScreenPlay::App::globalVariables" href="screenplay-app.html#globalVariables-prop" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="75">
                    <getter name="globalVariables"/>
                    <setter name="setGlobalVariables"/>
                    <notifier name="globalVariablesChanged"/>
                </property>
                <property name="installedListFilter" fullname="ScreenPlay::App::installedListFilter" href="screenplay-app.html#installedListFilter-prop" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="82">
                    <getter name="installedListFilter"/>
                    <setter name="setInstalledListFilter"/>
                    <notifier name="installedListFilterChanged"/>
                </property>
                <property name="installedListModel" fullname="ScreenPlay::App::installedListModel" href="screenplay-app.html#installedListModel-prop" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="81">
                    <getter name="installedListModel"/>
                    <setter name="setInstalledListModel"/>
                    <notifier name="installedListModelChanged"/>
                </property>
                <property name="mainWindowEngine" fullname="ScreenPlay::App::mainWindowEngine" href="screenplay-app.html#mainWindowEngine-prop" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="74">
                    <getter name="mainWindowEngine"/>
                    <setter name="setMainWindowEngine"/>
                    <notifier name="mainWindowEngineChanged"/>
                </property>
                <property name="monitorListModel" fullname="ScreenPlay::App::monitorListModel" href="screenplay-app.html#monitorListModel-prop" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="83">
                    <getter name="monitorListModel"/>
                    <setter name="setMonitorListModel"/>
                    <notifier name="monitorListModelChanged"/>
                </property>
                <property name="profileListModel" fullname="ScreenPlay::App::profileListModel" href="screenplay-app.html#profileListModel-prop" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="84">
                    <getter name="profileListModel"/>
                    <setter name="setProfileListModel"/>
                    <notifier name="profileListModelChanged"/>
                </property>
                <property name="screenPlayManager" fullname="ScreenPlay::App::screenPlayManager" href="screenplay-app.html#screenPlayManager-prop" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="76">
                    <getter name="screenPlayManager"/>
                    <setter name="setScreenPlayManager"/>
                    <notifier name="screenPlayManagerChanged"/>
                </property>
                <property name="settings" fullname="ScreenPlay::App::settings" href="screenplay-app.html#settings-prop" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="79">
                    <getter name="settings"/>
                    <setter name="setSettings"/>
                    <notifier name="settingsChanged"/>
                </property>
                <property name="util" fullname="ScreenPlay::App::util" href="screenplay-app.html#util-prop" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="78">
                    <getter name="util"/>
                    <setter name="setUtil"/>
                    <notifier name="utilChanged"/>
                </property>
                <variable name="m_continuousIntegrationMetricsTimer" fullname="ScreenPlay::App::m_continuousIntegrationMetricsTimer" href="screenplay-app.html#m_continuousIntegrationMetricsTimer-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="256" type="QElapsedTimer" static="false"/>
                <variable name="m_create" fullname="ScreenPlay::App::m_create" href="screenplay-app.html#m_create-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="259" type="std::unique_ptr&lt;Create&gt;" static="false"/>
                <variable name="m_globalVariables" fullname="ScreenPlay::App::m_globalVariables" href="screenplay-app.html#m_globalVariables-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="264" type="std::shared_ptr&lt;GlobalVariables&gt;" static="false"/>
                <variable name="m_installedListFilter" fullname="ScreenPlay::App::m_installedListFilter" href="screenplay-app.html#m_installedListFilter-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="270" type="std::shared_ptr&lt;InstalledListFilter&gt;" static="false"/>
                <variable name="m_installedListModel" fullname="ScreenPlay::App::m_installedListModel" href="screenplay-app.html#m_installedListModel-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="267" type="std::shared_ptr&lt;InstalledListModel&gt;" static="false"/>
                <variable name="m_isAnotherScreenPlayInstanceRunning" fullname="ScreenPlay::App::m_isAnotherScreenPlayInstanceRunning" href="screenplay-app.html#m_isAnotherScreenPlayInstanceRunning-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="90" type="bool" static="false"/>
                <variable name="m_mainWindowEngine" fullname="ScreenPlay::App::m_mainWindowEngine" href="screenplay-app.html#m_mainWindowEngine-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="257" type="std::unique_ptr&lt;QQmlApplicationEngine&gt;" static="false"/>
                <variable name="m_monitorListModel" fullname="ScreenPlay::App::m_monitorListModel" href="screenplay-app.html#m_monitorListModel-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="268" type="std::shared_ptr&lt;MonitorListModel&gt;" static="false"/>
                <variable name="m_networkAccessManager" fullname="ScreenPlay::App::m_networkAccessManager" href="screenplay-app.html#m_networkAccessManager-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="255" type="QNetworkAccessManager" static="false"/>
                <variable name="m_profileListModel" fullname="ScreenPlay::App::m_profileListModel" href="screenplay-app.html#m_profileListModel-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="269" type="std::shared_ptr&lt;ProfileListModel&gt;" static="false"/>
                <variable name="m_screenPlayManager" fullname="ScreenPlay::App::m_screenPlayManager" href="screenplay-app.html#m_screenPlayManager-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="260" type="std::unique_ptr&lt;ScreenPlayManager&gt;" static="false"/>
                <variable name="m_settings" fullname="ScreenPlay::App::m_settings" href="screenplay-app.html#m_settings-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="265" type="std::shared_ptr&lt;Settings&gt;" static="false"/>
                <variable name="m_telemetry" fullname="ScreenPlay::App::m_telemetry" href="screenplay-app.html#m_telemetry-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="263" type="int" static="false"/>
                <variable name="m_util" fullname="ScreenPlay::App::m_util" href="screenplay-app.html#m_util-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="261" type="std::unique_ptr&lt;Util&gt;" static="false"/>
                <variable name="m_workshopPlugin" fullname="ScreenPlay::App::m_workshopPlugin" href="screenplay-app.html#m_workshopPlugin-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="254" type="QPluginLoader" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::App::staticMetaObject" href="screenplay-app.html#staticMetaObject-var" status="internal" access="private" location="app.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/app.h" lineno="72" type="const QMetaObject" static="true"/>
            </class>
            <struct name="CheckBoxItem" fullname="ScreenPlay::CheckBoxItem" href="screenplay-checkboxitem.html" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="93" bases="ScreenPlay::IListItem">
                <function name="getItemSettings" fullname="ScreenPlay::CheckBoxItem::getItemSettings" href="screenplay-checkboxitem.html#getItemSettings" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="97" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="QJsonObject" signature="QJsonObject getItemSettings() override"/>
                <function name="qt_check_for_QGADGET_macro" fullname="ScreenPlay::CheckBoxItem::qt_check_for_QGADGET_macro" href="screenplay-checkboxitem.html#qt_check_for_QGADGET_macro" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="94" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qt_check_for_QGADGET_macro()"/>
                <function name="qt_static_metacall" fullname="ScreenPlay::CheckBoxItem::qt_static_metacall" href="screenplay-checkboxitem.html#qt_static_metacall" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="94" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="setData" fullname="ScreenPlay::CheckBoxItem::setData" href="screenplay-checkboxitem.html#setData" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="100" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void setData(const QJsonObject &amp;obj) override">
                    <parameter type="const QJsonObject &amp;" name="obj" default=""/>
                </function>
                <typedef name="QtGadgetHelper" fullname="ScreenPlay::CheckBoxItem::QtGadgetHelper" href="screenplay-checkboxitem.html#QtGadgetHelper-typedef" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="94"/>
                <property name="checked" fullname="ScreenPlay::CheckBoxItem::checked" href="screenplay-checkboxitem.html#checked-prop" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="95"/>
                <variable name="m_checked" fullname="ScreenPlay::CheckBoxItem::m_checked" href="screenplay-checkboxitem.html#m_checked-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="98" type="bool" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::CheckBoxItem::staticMetaObject" href="screenplay-checkboxitem.html#staticMetaObject-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="94" type="const QMetaObject" static="true"/>
            </struct>
            <struct name="ColorItem" fullname="ScreenPlay::ColorItem" href="screenplay-coloritem.html" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="83" bases="ScreenPlay::IListItem">
                <function name="getItemSettings" fullname="ScreenPlay::ColorItem::getItemSettings" href="screenplay-coloritem.html#getItemSettings" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="87" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="QJsonObject" signature="QJsonObject getItemSettings() override"/>
                <function name="qt_check_for_QGADGET_macro" fullname="ScreenPlay::ColorItem::qt_check_for_QGADGET_macro" href="screenplay-coloritem.html#qt_check_for_QGADGET_macro" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="84" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qt_check_for_QGADGET_macro()"/>
                <function name="qt_static_metacall" fullname="ScreenPlay::ColorItem::qt_static_metacall" href="screenplay-coloritem.html#qt_static_metacall" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="84" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="setData" fullname="ScreenPlay::ColorItem::setData" href="screenplay-coloritem.html#setData" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="90" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void setData(const QJsonObject &amp;obj) override">
                    <parameter type="const QJsonObject &amp;" name="obj" default=""/>
                </function>
                <typedef name="QtGadgetHelper" fullname="ScreenPlay::ColorItem::QtGadgetHelper" href="screenplay-coloritem.html#QtGadgetHelper-typedef" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="84"/>
                <property name="color" fullname="ScreenPlay::ColorItem::color" href="screenplay-coloritem.html#color-prop" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="85"/>
                <variable name="m_color" fullname="ScreenPlay::ColorItem::m_color" href="screenplay-coloritem.html#m_color-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="88" type="QColor" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::ColorItem::staticMetaObject" href="screenplay-coloritem.html#staticMetaObject-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="84" type="const QMetaObject" static="true"/>
            </struct>
            <class name="Create" fullname="ScreenPlay::Create" href="screenplay-create.html" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="65" documented="true" bases="QObject" module="ScreenPlay" brief="Baseclass for creating wallapers, widgets and the corresponding wizards">
                <function name="Create" fullname="ScreenPlay::Create::Create" href="screenplay-create.html#Create" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="73" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="Create(const std::shared_ptr&lt;GlobalVariables&gt; &amp;globalVariables, QObject *parent)">
                    <parameter type="const std::shared_ptr&lt;GlobalVariables&gt; &amp;" name="globalVariables" default=""/>
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="Create" fullname="ScreenPlay::Create::Create" href="screenplay-create.html#Create-1" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="76" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" signature="Create()"/>
                <function name="abortAndCleanup" fullname="ScreenPlay::Create::abortAndCleanup" href="screenplay-create.html#abortAndCleanup" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="135" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void abortAndCleanup()"/>
                <function name="abortCreateWallpaper" fullname="ScreenPlay::Create::abortCreateWallpaper" href="screenplay-create.html#abortCreateWallpaper" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="102" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void abortCreateWallpaper()"/>
                <function name="appendFfmpegOutput" fullname="ScreenPlay::Create::appendFfmpegOutput" href="screenplay-create.html#ffmpegOutput-prop" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="155" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="ffmpegOutput" type="void" signature="void appendFfmpegOutput(QString ffmpegOutput)">
                    <parameter type="QString" name="ffmpegOutput" default=""/>
                </function>
                <function name="clearFfmpegOutput" fullname="ScreenPlay::Create::clearFfmpegOutput" href="screenplay-create.html#clearFfmpegOutput" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="161" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void clearFfmpegOutput()"/>
                <function name="createHTMLWallpaper" fullname="ScreenPlay::Create::createHTMLWallpaper" href="screenplay-create.html#createHTMLWallpaper" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="120" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Creates a HTML wallpaper" signature="void createHTMLWallpaper(const QString &amp;localStoragePath, const QString &amp;title, const QString &amp;previewThumbnail, const QString &amp;license, const QVector&lt;QString&gt; &amp;tags)">
                    <parameter type="const QString &amp;" name="localStoragePath" default=""/>
                    <parameter type="const QString &amp;" name="title" default=""/>
                    <parameter type="const QString &amp;" name="previewThumbnail" default=""/>
                    <parameter type="const QString &amp;" name="license" default=""/>
                    <parameter type="const QVector&lt;QString&gt; &amp;" name="tags" default=""/>
                </function>
                <function name="createWallpaperStart" fullname="ScreenPlay::Create::createWallpaperStart" href="screenplay-create.html#createWallpaperStart" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="109" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Starts the process" signature="void createWallpaperStart(QString videoPath, Create::VideoCodec codec)">
                    <parameter type="QString" name="videoPath" default=""/>
                    <parameter type="Create::VideoCodec" name="codec" default=""/>
                </function>
                <function name="createWallpaperStateChanged" fullname="ScreenPlay::Create::createWallpaperStateChanged" href="screenplay-create.html#createWallpaperStateChanged" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="100" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void createWallpaperStateChanged(CreateImportVideo::ImportVideoState state)">
                    <parameter type="CreateImportVideo::ImportVideoState" name="state" default=""/>
                </function>
                <function name="createWidget" fullname="ScreenPlay::Create::createWidget" href="screenplay-create.html#createWidget" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="111" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Creates a new widget" signature="void createWidget(const QString &amp;localStoragePath, const QString &amp;title, const QString &amp;previewThumbnail, const QString &amp;createdBy, const QString &amp;license, const QString &amp;type, const QVector&lt;QString&gt; &amp;tags)">
                    <parameter type="const QString &amp;" name="localStoragePath" default=""/>
                    <parameter type="const QString &amp;" name="title" default=""/>
                    <parameter type="const QString &amp;" name="previewThumbnail" default=""/>
                    <parameter type="const QString &amp;" name="createdBy" default=""/>
                    <parameter type="const QString &amp;" name="license" default=""/>
                    <parameter type="const QString &amp;" name="type" default=""/>
                    <parameter type="const QVector&lt;QString&gt; &amp;" name="tags" default=""/>
                </function>
                <function name="ffmpegOutput" fullname="ScreenPlay::Create::ffmpegOutput" href="screenplay-create.html#ffmpegOutput-prop" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="94" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="ffmpegOutput" type="QString" signature="QString ffmpegOutput() const"/>
                <function name="ffmpegOutputChanged" fullname="ScreenPlay::Create::ffmpegOutputChanged" href="screenplay-create.html#ffmpegOutput-prop" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="104" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="ffmpegOutput" type="void" signature="void ffmpegOutputChanged(QString ffmpegOutput)">
                    <parameter type="QString" name="ffmpegOutput" default=""/>
                </function>
                <function name="htmlWallpaperCreatedSuccessful" fullname="ScreenPlay::Create::htmlWallpaperCreatedSuccessful" href="screenplay-create.html#htmlWallpaperCreatedSuccessful" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="106" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void htmlWallpaperCreatedSuccessful(QString path)">
                    <parameter type="QString" name="path" default=""/>
                </function>
                <function name="metaObject" fullname="ScreenPlay::Create::metaObject" href="screenplay-create.html#metaObject" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="66" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="progress" fullname="ScreenPlay::Create::progress" href="screenplay-create.html#progress-prop" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="84" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="progress" type="float" signature="float progress() const"/>
                <function name="progressChanged" fullname="ScreenPlay::Create::progressChanged" href="screenplay-create.html#progress-prop" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="101" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="progress" type="void" signature="void progressChanged(float progress)">
                    <parameter type="float" name="progress" default=""/>
                </function>
                <function name="qt_getEnumMetaObject" href="screenplay-create.html#qt_getEnumMetaObject" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="82" related="2" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(ScreenPlay::Create::VideoCodec)">
                    <parameter type="ScreenPlay::Create::VideoCodec" name="" default=""/>
                </function>
                <function name="qt_getEnumName" href="screenplay-create.html#qt_getEnumName" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="82" related="3" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(ScreenPlay::Create::VideoCodec)">
                    <parameter type="ScreenPlay::Create::VideoCodec" name="" default=""/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::Create::qt_metacall" href="screenplay-create.html#qt_metacall" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="66" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::Create::qt_metacast" href="screenplay-create.html#qt_metacast" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="66" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::Create::qt_static_metacall" href="screenplay-create.html#qt_static_metacall" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="66" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="saveWallpaper" fullname="ScreenPlay::Create::saveWallpaper" href="screenplay-create.html#saveWallpaper" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="127" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="When converting of the wallpaper steps where successful" signature="void saveWallpaper(QString title, QString description, QString filePath, QString previewImagePath, QString youtube, ScreenPlay::Create::VideoCodec codec, QVector&lt;QString&gt; tags)">
                    <parameter type="QString" name="title" default=""/>
                    <parameter type="QString" name="description" default=""/>
                    <parameter type="QString" name="filePath" default=""/>
                    <parameter type="QString" name="previewImagePath" default=""/>
                    <parameter type="QString" name="youtube" default=""/>
                    <parameter type="ScreenPlay::Create::VideoCodec" name="codec" default=""/>
                    <parameter type="QVector&lt;QString&gt;" name="tags" default=""/>
                </function>
                <function name="setProgress" fullname="ScreenPlay::Create::setProgress" href="screenplay-create.html#progress-prop" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="137" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="progress" type="void" signature="void setProgress(float progress)">
                    <parameter type="float" name="progress" default=""/>
                </function>
                <function name="setWorkingDir" fullname="ScreenPlay::Create::setWorkingDir" href="screenplay-create.html#workingDir-prop" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="146" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="workingDir" type="void" signature="void setWorkingDir(const QString &amp;workingDir)">
                    <parameter type="const QString &amp;" name="workingDir" default=""/>
                </function>
                <function name="widgetCreatedSuccessful" fullname="ScreenPlay::Create::widgetCreatedSuccessful" href="screenplay-create.html#widgetCreatedSuccessful" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="105" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void widgetCreatedSuccessful(QString path)">
                    <parameter type="QString" name="path" default=""/>
                </function>
                <function name="workingDir" fullname="ScreenPlay::Create::workingDir" href="screenplay-create.html#workingDir-prop" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="89" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="workingDir" type="QString" signature="QString workingDir() const"/>
                <function name="workingDirChanged" fullname="ScreenPlay::Create::workingDirChanged" href="screenplay-create.html#workingDir-prop" status="active" access="public" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="103" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="workingDir" type="void" signature="void workingDirChanged(QString workingDir)">
                    <parameter type="QString" name="workingDir" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::Create::QPrivateSignal" href="screenplay-create-qprivatesignal.html" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="66"/>
                <enum name="VideoCodec" fullname="ScreenPlay::Create::VideoCodec" href="screenplay-create.html#VideoCodec-enum" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="78" scoped="true">
                    <value name="VP8" value="0"/>
                    <value name="VP9" value="1"/>
                </enum>
                <property name="ffmpegOutput" fullname="ScreenPlay::Create::ffmpegOutput" href="screenplay-create.html#ffmpegOutput-prop" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="70">
                    <getter name="ffmpegOutput"/>
                    <setter name="appendFfmpegOutput"/>
                    <notifier name="ffmpegOutputChanged"/>
                </property>
                <property name="progress" fullname="ScreenPlay::Create::progress" href="screenplay-create.html#progress-prop" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="69">
                    <getter name="progress"/>
                    <setter name="setProgress"/>
                    <notifier name="progressChanged"/>
                </property>
                <property name="workingDir" fullname="ScreenPlay::Create::workingDir" href="screenplay-create.html#workingDir-prop" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="68">
                    <getter name="workingDir"/>
                    <setter name="setWorkingDir"/>
                    <notifier name="workingDirChanged"/>
                </property>
                <variable name="m_createImportVideo" fullname="ScreenPlay::Create::m_createImportVideo" href="screenplay-create.html#m_createImportVideo-var" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="168" type="ScreenPlay::CreateImportVideo *" static="false"/>
                <variable name="m_createImportVideoThread" fullname="ScreenPlay::Create::m_createImportVideoThread" href="screenplay-create.html#m_createImportVideoThread-var" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="169" type="QThread *" static="false"/>
                <variable name="m_ffmpegOutput" fullname="ScreenPlay::Create::m_ffmpegOutput" href="screenplay-create.html#m_ffmpegOutput-var" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="175" type="QString" static="false"/>
                <variable name="m_globalVariables" fullname="ScreenPlay::Create::m_globalVariables" href="screenplay-create.html#m_globalVariables-var" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="171" type="const std::shared_ptr&lt;GlobalVariables&gt;" static="false"/>
                <variable name="m_progress" fullname="ScreenPlay::Create::m_progress" href="screenplay-create.html#m_progress-var" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="173" type="float" static="false"/>
                <variable name="m_workingDir" fullname="ScreenPlay::Create::m_workingDir" href="screenplay-create.html#m_workingDir-var" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="174" type="QString" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::Create::staticMetaObject" href="screenplay-create.html#staticMetaObject-var" status="internal" access="private" location="create.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/create.h" lineno="66" type="const QMetaObject" static="true"/>
            </class>
            <class name="CreateImportVideo" fullname="ScreenPlay::CreateImportVideo" href="screenplay-createimportvideo.html" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="57" documented="true" bases="QObject" module="ScreenPlay" brief="This class imports (copies) and creates wallaper previews">
                <function name="CreateImportVideo" fullname="ScreenPlay::CreateImportVideo::CreateImportVideo" href="screenplay-createimportvideo.html#CreateImportVideo" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="62" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="CreateImportVideo()"/>
                <function name="CreateImportVideo" fullname="ScreenPlay::CreateImportVideo::CreateImportVideo" href="screenplay-createimportvideo.html#CreateImportVideo-1" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="63" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" brief="This constructor is only needed for calling qRegisterMetaType on CreateImportVideo to register the enums" signature="CreateImportVideo(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="CreateImportVideo" fullname="ScreenPlay::CreateImportVideo::CreateImportVideo" href="screenplay-createimportvideo.html#CreateImportVideo-2" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="64" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="2" type="" brief="Creates a CreateImportVideo object to be used in a different thread. A videoPath and a exportPath are needed for convertion" signature="CreateImportVideo(const QString &amp;videoPath, const QString &amp;exportPath, const QStringList &amp;codecs, QObject *parent)">
                    <parameter type="const QString &amp;" name="videoPath" default=""/>
                    <parameter type="const QString &amp;" name="exportPath" default=""/>
                    <parameter type="const QStringList &amp;" name="codecs" default=""/>
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="abortAndCleanup" fullname="ScreenPlay::CreateImportVideo::abortAndCleanup" href="screenplay-createimportvideo.html#abortAndCleanup" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="131" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void abortAndCleanup()"/>
                <function name="createWallpaperGifPreview" fullname="ScreenPlay::CreateImportVideo::createWallpaperGifPreview" href="screenplay-createimportvideo.html#createWallpaperGifPreview" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="139" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" brief="Starts ffmpeg and tries to covert the given video to a 5 second preview gif" signature="bool createWallpaperGifPreview()"/>
                <function name="createWallpaperImagePreview" fullname="ScreenPlay::CreateImportVideo::createWallpaperImagePreview" href="screenplay-createimportvideo.html#createWallpaperImagePreview" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="140" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" signature="bool createWallpaperImagePreview()"/>
                <function name="createWallpaperImageThumbnailPreview" fullname="ScreenPlay::CreateImportVideo::createWallpaperImageThumbnailPreview" href="screenplay-createimportvideo.html#createWallpaperImageThumbnailPreview" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="143" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" brief="Starts ffmpeg and tries to covert the given video to a image preview. Returns false if :" signature="bool createWallpaperImageThumbnailPreview()"/>
                <function name="createWallpaperInfo" fullname="ScreenPlay::CreateImportVideo::createWallpaperInfo" href="screenplay-createimportvideo.html#createWallpaperInfo" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="137" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" brief="Starts ffprobe and tries to parse the resulting json. Returns false if :" signature="bool createWallpaperInfo()"/>
                <function name="createWallpaperStateChanged" fullname="ScreenPlay::CreateImportVideo::createWallpaperStateChanged" href="screenplay-createimportvideo.html#createWallpaperStateChanged" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="128" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void createWallpaperStateChanged(CreateImportVideo::ImportVideoState state)">
                    <parameter type="CreateImportVideo::ImportVideoState" name="state" default=""/>
                </function>
                <function name="createWallpaperVideo" fullname="ScreenPlay::CreateImportVideo::createWallpaperVideo" href="screenplay-createimportvideo.html#createWallpaperVideo" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="141" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" brief="Starts ffmpeg and tries to covert the given video to a webm video" signature="bool createWallpaperVideo(const QString &amp;codec)">
                    <parameter type="const QString &amp;" name="codec" default=""/>
                </function>
                <function name="createWallpaperVideoPreview" fullname="ScreenPlay::CreateImportVideo::createWallpaperVideoPreview" href="screenplay-createimportvideo.html#createWallpaperVideoPreview" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="138" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" brief="Starts ffmpeg and tries to covert the given video to a five second preview" signature="bool createWallpaperVideoPreview()"/>
                <function name="extractWallpaperAudio" fullname="ScreenPlay::CreateImportVideo::extractWallpaperAudio" href="screenplay-createimportvideo.html#extractWallpaperAudio" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="142" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" brief="Starts ffmpeg and tries to covert the given audio into a seperate mp3" signature="bool extractWallpaperAudio()"/>
                <function name="finished" fullname="ScreenPlay::CreateImportVideo::finished" href="screenplay-createimportvideo.html#finished" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="130" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void finished()"/>
                <function name="metaObject" fullname="ScreenPlay::CreateImportVideo::metaObject" href="screenplay-createimportvideo.html#metaObject" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="58" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="process" fullname="ScreenPlay::CreateImportVideo::process" href="screenplay-createimportvideo.html#process" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="135" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Processes the multiple steps of creating a wallpaper" signature="void process()"/>
                <function name="processOutput" fullname="ScreenPlay::CreateImportVideo::processOutput" href="screenplay-createimportvideo.html#processOutput" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="129" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void processOutput(QString text)">
                    <parameter type="QString" name="text" default=""/>
                </function>
                <function name="progress" fullname="ScreenPlay::CreateImportVideo::progress" href="screenplay-createimportvideo.html#progress-prop" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="103" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="progress" type="float" signature="float progress() const"/>
                <function name="progressChanged" fullname="ScreenPlay::CreateImportVideo::progressChanged" href="screenplay-createimportvideo.html#progress-prop" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="132" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="progress" type="void" signature="void progressChanged(float progress)">
                    <parameter type="float" name="progress" default=""/>
                </function>
                <function name="qt_getEnumMetaObject" href="screenplay-createimportvideo.html#qt_getEnumMetaObject" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="101" related="4" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(ScreenPlay::CreateImportVideo::ImportVideoState)">
                    <parameter type="ScreenPlay::CreateImportVideo::ImportVideoState" name="" default=""/>
                </function>
                <function name="qt_getEnumName" href="screenplay-createimportvideo.html#qt_getEnumName" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="101" related="5" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(ScreenPlay::CreateImportVideo::ImportVideoState)">
                    <parameter type="ScreenPlay::CreateImportVideo::ImportVideoState" name="" default=""/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::CreateImportVideo::qt_metacall" href="screenplay-createimportvideo.html#qt_metacall" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="58" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::CreateImportVideo::qt_metacast" href="screenplay-createimportvideo.html#qt_metacast" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="58" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::CreateImportVideo::qt_static_metacall" href="screenplay-createimportvideo.html#qt_static_metacall" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="58" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="setProgress" fullname="ScreenPlay::CreateImportVideo::setProgress" href="screenplay-createimportvideo.html#progress-prop" status="active" access="public" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="145" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="progress" type="void" signature="void setProgress(float progress)">
                    <parameter type="float" name="progress" default=""/>
                </function>
                <function name="waitForFinished" fullname="ScreenPlay::CreateImportVideo::waitForFinished" href="screenplay-createimportvideo.html#waitForFinished" status="active" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="158" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void waitForFinished(std::shared_ptr&lt;QProcess&gt; &amp;process)">
                    <parameter type="std::shared_ptr&lt;QProcess&gt; &amp;" name="process" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::CreateImportVideo::QPrivateSignal" href="screenplay-createimportvideo-qprivatesignal.html" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="58"/>
                <enum name="ImportVideoState" fullname="ScreenPlay::CreateImportVideo::ImportVideoState" href="screenplay-createimportvideo.html#ImportVideoState-enum" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="66" scoped="true">
                    <value name="Idle" value="0"/>
                    <value name="Started" value="1"/>
                    <value name="AnalyseVideo" value="2"/>
                    <value name="AnalyseVideoFinished" value="3"/>
                    <value name="AnalyseVideoError" value="4"/>
                    <value name="AnalyseVideoHasNoVideoStreamError" value="5"/>
                    <value name="ConvertingPreviewVideo" value="6"/>
                    <value name="ConvertingPreviewVideoFinished" value="7"/>
                    <value name="ConvertingPreviewVideoError" value="8"/>
                    <value name="ConvertingPreviewGif" value="9"/>
                    <value name="ConvertingPreviewGifFinished" value="10"/>
                    <value name="ConvertingPreviewGifError" value="11"/>
                    <value name="ConvertingPreviewImage" value="12"/>
                    <value name="ConvertingPreviewImageFinished" value="13"/>
                    <value name="ConvertingPreviewImageError" value="14"/>
                    <value name="ConvertingPreviewImageThumbnail" value="15"/>
                    <value name="ConvertingPreviewImageThumbnailFinished" value="16"/>
                    <value name="ConvertingPreviewImageThumbnailError" value="17"/>
                    <value name="ConvertingAudio" value="18"/>
                    <value name="ConvertingAudioFinished" value="19"/>
                    <value name="ConvertingAudioError" value="20"/>
                    <value name="ConvertingVideo" value="21"/>
                    <value name="ConvertingVideoFinished" value="22"/>
                    <value name="ConvertingVideoError" value="23"/>
                    <value name="CopyFiles" value="24"/>
                    <value name="CopyFilesFinished" value="25"/>
                    <value name="CopyFilesError" value="26"/>
                    <value name="CreateProjectFile" value="27"/>
                    <value name="CreateProjectFileFinished" value="28"/>
                    <value name="CreateProjectFileError" value="29"/>
                    <value name="AbortCleanupError" value="30"/>
                    <value name="CreateTmpFolderError" value="31"/>
                    <value name="Finished" value="32"/>
                </enum>
                <property name="progress" fullname="ScreenPlay::CreateImportVideo::progress" href="screenplay-createimportvideo.html#progress-prop" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="59">
                    <getter name="progress"/>
                    <setter name="setProgress"/>
                    <notifier name="progressChanged"/>
                </property>
                <variable name="m_codecs" fullname="ScreenPlay::CreateImportVideo::m_codecs" href="screenplay-createimportvideo.html#m_codecs-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="121" type="QStringList" static="false"/>
                <variable name="m_exportPath" fullname="ScreenPlay::CreateImportVideo::m_exportPath" href="screenplay-createimportvideo.html#m_exportPath-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="119" type="QString" static="false"/>
                <variable name="m_ffmpegExecutable" fullname="ScreenPlay::CreateImportVideo::m_ffmpegExecutable" href="screenplay-createimportvideo.html#m_ffmpegExecutable-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="161" type="QString" static="false"/>
                <variable name="m_ffprobeExecutable" fullname="ScreenPlay::CreateImportVideo::m_ffprobeExecutable" href="screenplay-createimportvideo.html#m_ffprobeExecutable-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="160" type="QString" static="false"/>
                <variable name="m_format" fullname="ScreenPlay::CreateImportVideo::m_format" href="screenplay-createimportvideo.html#m_format-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="120" type="QString" static="false"/>
                <variable name="m_framerate" fullname="ScreenPlay::CreateImportVideo::m_framerate" href="screenplay-createimportvideo.html#m_framerate-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="125" type="int" static="false"/>
                <variable name="m_isMatroska" fullname="ScreenPlay::CreateImportVideo::m_isMatroska" href="screenplay-createimportvideo.html#m_isMatroska-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="114" type="bool" static="false"/>
                <variable name="m_length" fullname="ScreenPlay::CreateImportVideo::m_length" href="screenplay-createimportvideo.html#m_length-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="124" type="int" static="false"/>
                <variable name="m_numberOfFrames" fullname="ScreenPlay::CreateImportVideo::m_numberOfFrames" href="screenplay-createimportvideo.html#m_numberOfFrames-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="123" type="int" static="false"/>
                <variable name="m_progress" fullname="ScreenPlay::CreateImportVideo::m_progress" href="screenplay-createimportvideo.html#m_progress-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="116" type="float" static="false"/>
                <variable name="m_skipAudio" fullname="ScreenPlay::CreateImportVideo::m_skipAudio" href="screenplay-createimportvideo.html#m_skipAudio-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="108" type="bool" static="false"/>
                <variable name="m_smallVideo" fullname="ScreenPlay::CreateImportVideo::m_smallVideo" href="screenplay-createimportvideo.html#m_smallVideo-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="111" type="bool" static="false"/>
                <variable name="m_videoPath" fullname="ScreenPlay::CreateImportVideo::m_videoPath" href="screenplay-createimportvideo.html#m_videoPath-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="118" type="QString" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::CreateImportVideo::staticMetaObject" href="screenplay-createimportvideo.html#staticMetaObject-var" status="internal" access="private" location="createimportvideo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/createimportvideo.h" lineno="58" type="const QMetaObject" static="true"/>
            </class>
            <struct name="FileItem" fullname="ScreenPlay::FileItem" href="screenplay-fileitem.html" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="103" bases="ScreenPlay::IListItem">
                <function name="getItemSettings" fullname="ScreenPlay::FileItem::getItemSettings" href="screenplay-fileitem.html#getItemSettings" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="108" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="QJsonObject" signature="QJsonObject getItemSettings() override"/>
                <function name="qt_check_for_QGADGET_macro" fullname="ScreenPlay::FileItem::qt_check_for_QGADGET_macro" href="screenplay-fileitem.html#qt_check_for_QGADGET_macro" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="104" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qt_check_for_QGADGET_macro()"/>
                <function name="qt_static_metacall" fullname="ScreenPlay::FileItem::qt_static_metacall" href="screenplay-fileitem.html#qt_static_metacall" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="104" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="setData" fullname="ScreenPlay::FileItem::setData" href="screenplay-fileitem.html#setData" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="112" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void setData(const QJsonObject &amp;obj) override">
                    <parameter type="const QJsonObject &amp;" name="obj" default=""/>
                </function>
                <typedef name="QtGadgetHelper" fullname="ScreenPlay::FileItem::QtGadgetHelper" href="screenplay-fileitem.html#QtGadgetHelper-typedef" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="104"/>
                <property name="file" fullname="ScreenPlay::FileItem::file" href="screenplay-fileitem.html#file-prop" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="105"/>
                <property name="formats" fullname="ScreenPlay::FileItem::formats" href="screenplay-fileitem.html#formats-prop" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="106"/>
                <variable name="m_file" fullname="ScreenPlay::FileItem::m_file" href="screenplay-fileitem.html#m_file-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="109" type="QUrl" static="false"/>
                <variable name="m_formats" fullname="ScreenPlay::FileItem::m_formats" href="screenplay-fileitem.html#m_formats-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="110" type="QString" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::FileItem::staticMetaObject" href="screenplay-fileitem.html#staticMetaObject-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="104" type="const QMetaObject" static="true"/>
            </struct>
            <namespace name="FillMode" fullname="ScreenPlay::FillMode" href="screenplay-fillmode-sub-screenplay.html" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="87">
                <function name="qt_getEnumMetaObject" fullname="ScreenPlay::FillMode::qt_getEnumMetaObject" href="screenplay-fillmode-sub-screenplay.html#qt_getEnumMetaObject" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="97" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(ScreenPlay::FillMode::FillMode)">
                    <parameter type="ScreenPlay::FillMode::FillMode" name="" default=""/>
                </function>
                <function name="qt_getEnumName" fullname="ScreenPlay::FillMode::qt_getEnumName" href="screenplay-fillmode-sub-screenplay.html#qt_getEnumName" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="97" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(ScreenPlay::FillMode::FillMode)">
                    <parameter type="ScreenPlay::FillMode::FillMode" name="" default=""/>
                </function>
                <enum name="FillMode" fullname="ScreenPlay::FillMode::FillMode" href="screenplay-fillmode-sub-screenplay.html#FillMode-enum" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="90" scoped="true">
                    <value name="Stretch" value="0"/>
                    <value name="Fill" value="1"/>
                    <value name="Contain" value="2"/>
                    <value name="Cover" value="3"/>
                    <value name="Scale_Down" value="4"/>
                </enum>
                <variable name="staticMetaObject" fullname="ScreenPlay::FillMode::staticMetaObject" href="screenplay-fillmode-sub-screenplay.html#staticMetaObject-var" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="88" type="const QMetaObject" static="false"/>
            </namespace>
            <class name="GlobalVariables" fullname="ScreenPlay::GlobalVariables" href="screenplay-globalvariables.html" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="101" bases="QObject">
                <function name="GlobalVariables" fullname="ScreenPlay::GlobalVariables::GlobalVariables" href="screenplay-globalvariables.html#GlobalVariables" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="111" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="GlobalVariables(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="getAvailableTypes" fullname="ScreenPlay::GlobalVariables::getAvailableTypes" href="screenplay-globalvariables.html#getAvailableTypes" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="171" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QStringList" signature="QStringList getAvailableTypes()"/>
                <function name="getAvailableWallpaper" fullname="ScreenPlay::GlobalVariables::getAvailableWallpaper" href="screenplay-globalvariables.html#getAvailableWallpaper" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="154" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QStringList" signature="QStringList getAvailableWallpaper()"/>
                <function name="getAvailableWidgets" fullname="ScreenPlay::GlobalVariables::getAvailableWidgets" href="screenplay-globalvariables.html#getAvailableWidgets" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="163" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="QStringList" signature="QStringList getAvailableWidgets()"/>
                <function name="localSettingsPath" fullname="ScreenPlay::GlobalVariables::localSettingsPath" href="screenplay-globalvariables.html#localSettingsPath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="125" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="localSettingsPath" type="QUrl" signature="QUrl localSettingsPath() const"/>
                <function name="localSettingsPathChanged" fullname="ScreenPlay::GlobalVariables::localSettingsPathChanged" href="screenplay-globalvariables.html#localSettingsPath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="178" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="localSettingsPath" type="void" signature="void localSettingsPathChanged(QUrl localSettingsPath)">
                    <parameter type="QUrl" name="localSettingsPath" default=""/>
                </function>
                <function name="localStoragePath" fullname="ScreenPlay::GlobalVariables::localStoragePath" href="screenplay-globalvariables.html#localStoragePath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="117" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="localStoragePath" type="QUrl" signature="QUrl localStoragePath() const"/>
                <function name="localStoragePathChanged" fullname="ScreenPlay::GlobalVariables::localStoragePathChanged" href="screenplay-globalvariables.html#localStoragePath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="177" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="localStoragePath" type="void" signature="void localStoragePathChanged(QUrl localStoragePath)">
                    <parameter type="QUrl" name="localStoragePath" default=""/>
                </function>
                <function name="metaObject" fullname="ScreenPlay::GlobalVariables::metaObject" href="screenplay-globalvariables.html#metaObject" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="102" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="qt_metacall" fullname="ScreenPlay::GlobalVariables::qt_metacall" href="screenplay-globalvariables.html#qt_metacall" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="102" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::GlobalVariables::qt_metacast" href="screenplay-globalvariables.html#qt_metacast" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="102" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::GlobalVariables::qt_static_metacall" href="screenplay-globalvariables.html#qt_static_metacall" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="102" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="setLocalSettingsPath" fullname="ScreenPlay::GlobalVariables::setLocalSettingsPath" href="screenplay-globalvariables.html#localSettingsPath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="193" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="localSettingsPath" type="void" signature="void setLocalSettingsPath(QUrl localSettingsPath)">
                    <parameter type="QUrl" name="localSettingsPath" default=""/>
                </function>
                <function name="setLocalStoragePath" fullname="ScreenPlay::GlobalVariables::setLocalStoragePath" href="screenplay-globalvariables.html#localStoragePath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="184" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="localStoragePath" type="void" signature="void setLocalStoragePath(QUrl localStoragePath)">
                    <parameter type="QUrl" name="localStoragePath" default=""/>
                </function>
                <function name="setWallpaperExecutablePath" fullname="ScreenPlay::GlobalVariables::setWallpaperExecutablePath" href="screenplay-globalvariables.html#wallpaperExecutablePath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="202" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="wallpaperExecutablePath" type="void" signature="void setWallpaperExecutablePath(QUrl wallpaperExecutablePath)">
                    <parameter type="QUrl" name="wallpaperExecutablePath" default=""/>
                </function>
                <function name="setWidgetExecutablePath" fullname="ScreenPlay::GlobalVariables::setWidgetExecutablePath" href="screenplay-globalvariables.html#widgetExecutablePath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="211" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="widgetExecutablePath" type="void" signature="void setWidgetExecutablePath(QUrl widgetExecutablePath)">
                    <parameter type="QUrl" name="widgetExecutablePath" default=""/>
                </function>
                <function name="version" fullname="ScreenPlay::GlobalVariables::version" href="screenplay-globalvariables.html#version-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="149" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="version" type="QVersionNumber" signature="QVersionNumber version() const"/>
                <function name="wallpaperExecutablePath" fullname="ScreenPlay::GlobalVariables::wallpaperExecutablePath" href="screenplay-globalvariables.html#wallpaperExecutablePath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="133" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="wallpaperExecutablePath" type="QUrl" signature="QUrl wallpaperExecutablePath() const"/>
                <function name="wallpaperExecutablePathChanged" fullname="ScreenPlay::GlobalVariables::wallpaperExecutablePathChanged" href="screenplay-globalvariables.html#wallpaperExecutablePath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="179" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="wallpaperExecutablePath" type="void" signature="void wallpaperExecutablePathChanged(QUrl wallpaperExecutablePath)">
                    <parameter type="QUrl" name="wallpaperExecutablePath" default=""/>
                </function>
                <function name="widgetExecutablePath" fullname="ScreenPlay::GlobalVariables::widgetExecutablePath" href="screenplay-globalvariables.html#widgetExecutablePath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="141" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="widgetExecutablePath" type="QUrl" signature="QUrl widgetExecutablePath() const"/>
                <function name="widgetExecutablePathChanged" fullname="ScreenPlay::GlobalVariables::widgetExecutablePathChanged" href="screenplay-globalvariables.html#widgetExecutablePath-prop" status="active" access="public" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="180" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="widgetExecutablePath" type="void" signature="void widgetExecutablePathChanged(QUrl widgetExecutablePath)">
                    <parameter type="QUrl" name="widgetExecutablePath" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::GlobalVariables::QPrivateSignal" href="screenplay-globalvariables-qprivatesignal.html" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="102"/>
                <property name="localSettingsPath" fullname="ScreenPlay::GlobalVariables::localSettingsPath" href="screenplay-globalvariables.html#localSettingsPath-prop" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="106">
                    <getter name="localSettingsPath"/>
                    <setter name="setLocalSettingsPath"/>
                    <notifier name="localSettingsPathChanged"/>
                </property>
                <property name="localStoragePath" fullname="ScreenPlay::GlobalVariables::localStoragePath" href="screenplay-globalvariables.html#localStoragePath-prop" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="105">
                    <getter name="localStoragePath"/>
                    <setter name="setLocalStoragePath"/>
                    <notifier name="localStoragePathChanged"/>
                </property>
                <property name="version" fullname="ScreenPlay::GlobalVariables::version" href="screenplay-globalvariables.html#version-prop" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="104">
                    <getter name="version"/>
                </property>
                <property name="wallpaperExecutablePath" fullname="ScreenPlay::GlobalVariables::wallpaperExecutablePath" href="screenplay-globalvariables.html#wallpaperExecutablePath-prop" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="107">
                    <getter name="wallpaperExecutablePath"/>
                    <setter name="setWallpaperExecutablePath"/>
                    <notifier name="wallpaperExecutablePathChanged"/>
                </property>
                <property name="widgetExecutablePath" fullname="ScreenPlay::GlobalVariables::widgetExecutablePath" href="screenplay-globalvariables.html#widgetExecutablePath-prop" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="108">
                    <getter name="widgetExecutablePath"/>
                    <setter name="setWidgetExecutablePath"/>
                    <notifier name="widgetExecutablePathChanged"/>
                </property>
                <variable name="m_localSettingsPath" fullname="ScreenPlay::GlobalVariables::m_localSettingsPath" href="screenplay-globalvariables.html#m_localSettingsPath-var" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="222" type="QUrl" static="false"/>
                <variable name="m_localStoragePath" fullname="ScreenPlay::GlobalVariables::m_localStoragePath" href="screenplay-globalvariables.html#m_localStoragePath-var" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="221" type="QUrl" static="false"/>
                <variable name="m_version" fullname="ScreenPlay::GlobalVariables::m_version" href="screenplay-globalvariables.html#m_version-var" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="225" type="QVersionNumber" static="false"/>
                <variable name="m_wallpaperExecutablePath" fullname="ScreenPlay::GlobalVariables::m_wallpaperExecutablePath" href="screenplay-globalvariables.html#m_wallpaperExecutablePath-var" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="223" type="QUrl" static="false"/>
                <variable name="m_widgetExecutablePath" fullname="ScreenPlay::GlobalVariables::m_widgetExecutablePath" href="screenplay-globalvariables.html#m_widgetExecutablePath-var" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="224" type="QUrl" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::GlobalVariables::staticMetaObject" href="screenplay-globalvariables.html#staticMetaObject-var" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="102" type="const QMetaObject" static="true"/>
            </class>
            <struct name="IListItem" fullname="ScreenPlay::IListItem" href="screenplay-ilistitem.html" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="57">
                <function name="getItemSettings" fullname="ScreenPlay::IListItem::getItemSettings" href="screenplay-ilistitem.html#getItemSettings" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="61" meta="plain" virtual="pure" const="false" static="false" final="false" override="false" type="QJsonObject" signature="QJsonObject getItemSettings() = 0"/>
                <function name="qt_check_for_QGADGET_macro" fullname="ScreenPlay::IListItem::qt_check_for_QGADGET_macro" href="screenplay-ilistitem.html#qt_check_for_QGADGET_macro" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="58" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qt_check_for_QGADGET_macro()"/>
                <function name="qt_static_metacall" fullname="ScreenPlay::IListItem::qt_static_metacall" href="screenplay-ilistitem.html#qt_static_metacall" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="58" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="setData" fullname="ScreenPlay::IListItem::setData" href="screenplay-ilistitem.html#setData" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="63" meta="slot" virtual="virtual" const="false" static="false" final="false" override="false" type="void" signature="void setData(const QJsonObject &amp;obj)">
                    <parameter type="const QJsonObject &amp;" name="obj" default=""/>
                </function>
                <typedef name="QtGadgetHelper" fullname="ScreenPlay::IListItem::QtGadgetHelper" href="screenplay-ilistitem.html#QtGadgetHelper-typedef" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="58"/>
                <variable name="m_value" fullname="ScreenPlay::IListItem::m_value" href="screenplay-ilistitem.html#m_value-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="60" type="QVariant" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::IListItem::staticMetaObject" href="screenplay-ilistitem.html#staticMetaObject-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="58" type="const QMetaObject" static="true"/>
            </struct>
            <class name="InstalledListFilter" fullname="ScreenPlay::InstalledListFilter" href="screenplay-installedlistfilter.html" status="active" access="public" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="46" documented="true" bases="QSortFilterProxyModel" module="ScreenPlay" brief="Proxy between Installed List Model and QML view to filter items">
                <function name="InstalledListFilter" fullname="ScreenPlay::InstalledListFilter::InstalledListFilter" href="screenplay-installedlistfilter.html#InstalledListFilter" status="active" access="public" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="50" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" brief="Sets the default role type to &quot;All&quot; to display all available content. Needs a given ilm (InstalledListModel)" signature="InstalledListFilter(const std::shared_ptr&lt;InstalledListModel&gt; &amp;ilm)">
                    <parameter type="const std::shared_ptr&lt;InstalledListModel&gt; &amp;" name="ilm" default=""/>
                </function>
                <function name="metaObject" fullname="ScreenPlay::InstalledListFilter::metaObject" href="screenplay-installedlistfilter.html#metaObject" status="internal" access="private" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="47" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="qt_metacall" fullname="ScreenPlay::InstalledListFilter::qt_metacall" href="screenplay-installedlistfilter.html#qt_metacall" status="internal" access="private" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="47" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::InstalledListFilter::qt_metacast" href="screenplay-installedlistfilter.html#qt_metacast" status="internal" access="private" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="47" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::InstalledListFilter::qt_static_metacall" href="screenplay-installedlistfilter.html#qt_static_metacall" status="internal" access="private" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="47" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="resetFilter" fullname="ScreenPlay::InstalledListFilter::resetFilter" href="screenplay-installedlistfilter.html#resetFilter" status="active" access="public" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="55" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Resets the filter and sorts by title" signature="void resetFilter()"/>
                <function name="sortByName" fullname="ScreenPlay::InstalledListFilter::sortByName" href="screenplay-installedlistfilter.html#sortByName" status="active" access="public" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="54" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Invoked when the user uses the quicksearch at the top right of the installed page. Uses the name to sort by name. This name is saved in the project.json title" signature="void sortByName(const QString &amp;name)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                </function>
                <function name="sortBySearchType" fullname="ScreenPlay::InstalledListFilter::sortBySearchType" href="screenplay-installedlistfilter.html#sortBySearchType" status="internal" access="private" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="53" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void sortBySearchType(const ScreenPlay::SearchType::SearchType searchType)">
                    <parameter type="const ScreenPlay::SearchType::SearchType" name="searchType" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::InstalledListFilter::QPrivateSignal" href="screenplay-installedlistfilter-qprivatesignal.html" status="internal" access="private" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="47"/>
                <variable name="m_ilm" fullname="ScreenPlay::InstalledListFilter::m_ilm" href="screenplay-installedlistfilter.html#m_ilm-var" status="internal" access="private" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="58" type="const std::shared_ptr&lt;InstalledListModel&gt;" static="false"/>
                <variable name="m_searchType" fullname="ScreenPlay::InstalledListFilter::m_searchType" href="screenplay-installedlistfilter.html#m_searchType-var" status="internal" access="private" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="59" type="ScreenPlay::SearchType::SearchType" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::InstalledListFilter::staticMetaObject" href="screenplay-installedlistfilter.html#staticMetaObject-var" status="internal" access="private" location="installedlistfilter.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistfilter.h" lineno="47" type="const QMetaObject" static="true"/>
            </class>
            <class name="InstalledListModel" fullname="ScreenPlay::InstalledListModel" href="screenplay-installedlistmodel.html" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="65" documented="true" bases="QAbstractListModel" module="ScreenPlay" brief="Lists all installed wallpapers, widgets etc. from a given Path">
                <function name="InstalledListModel" fullname="ScreenPlay::InstalledListModel::InstalledListModel" href="screenplay-installedlistmodel.html#InstalledListModel" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="71" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" brief="Constructor" signature="InstalledListModel(const std::shared_ptr&lt;GlobalVariables&gt; &amp;globalVariables, QObject *parent)">
                    <parameter type="const std::shared_ptr&lt;GlobalVariables&gt; &amp;" name="globalVariables" default=""/>
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="addInstalledItem" fullname="ScreenPlay::InstalledListModel::addInstalledItem" href="screenplay-installedlistmodel.html#addInstalledItem" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="117" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void addInstalledItem(const QJsonObject, const QString)">
                    <parameter type="const QJsonObject" name="" default=""/>
                    <parameter type="const QString" name="" default=""/>
                </function>
                <function name="append" fullname="ScreenPlay::InstalledListModel::append" href="screenplay-installedlistmodel.html#append" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="102" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void append(const QJsonObject &amp;obj, const QString &amp;folderName)">
                    <parameter type="const QJsonObject &amp;" name="obj" default=""/>
                    <parameter type="const QString &amp;" name="folderName" default=""/>
                </function>
                <function name="count" fullname="ScreenPlay::InstalledListModel::count" href="screenplay-installedlistmodel.html#count-prop" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="93" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="count" type="int" signature="int count() const"/>
                <function name="countChanged" fullname="ScreenPlay::InstalledListModel::countChanged" href="screenplay-installedlistmodel.html#count-prop" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="119" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="count" type="void" signature="void countChanged(int count)">
                    <parameter type="int" name="count" default=""/>
                </function>
                <function name="data" fullname="ScreenPlay::InstalledListModel::data" href="screenplay-installedlistmodel.html#data" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="76" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QVariant" brief="Retruns the data member of the ProjectFile" signature="QVariant data(const QModelIndex &amp;index, int role) const override">
                    <parameter type="const QModelIndex &amp;" name="index" default=""/>
                    <parameter type="int" name="role" default="Qt::DisplayRole"/>
                </function>
                <function name="deinstallItemAt" fullname="ScreenPlay::InstalledListModel::deinstallItemAt" href="screenplay-installedlistmodel.html#deinstallItemAt" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="105" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" signature="bool deinstallItemAt(const int index)">
                    <parameter type="const int" name="index" default=""/>
                </function>
                <function name="get" fullname="ScreenPlay::InstalledListModel::get" href="screenplay-installedlistmodel.html#get" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="99" meta="slot" virtual="non" const="true" static="false" final="false" override="false" type="QVariantMap" signature="QVariantMap get(const QString &amp;folderId) const">
                    <parameter type="const QString &amp;" name="folderId" default=""/>
                </function>
                <function name="init" fullname="ScreenPlay::InstalledListModel::init" href="screenplay-installedlistmodel.html#init" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="104" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Init function that needs to be called after the constructor because we need the GlobalVariables to finish loading" signature="void init()"/>
                <function name="installedLoadingFinished" fullname="ScreenPlay::InstalledListModel::installedLoadingFinished" href="screenplay-installedlistmodel.html#installedLoadingFinished" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="118" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void installedLoadingFinished()"/>
                <function name="loadInstalledContent" fullname="ScreenPlay::InstalledListModel::loadInstalledContent" href="screenplay-installedlistmodel.html#loadInstalledContent" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="101" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void loadInstalledContent()"/>
                <function name="metaObject" fullname="ScreenPlay::InstalledListModel::metaObject" href="screenplay-installedlistmodel.html#metaObject" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="66" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="qt_getEnumMetaObject" href="screenplay-installedlistmodel.html#qt_getEnumMetaObject" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="91" related="6" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(ScreenPlay::InstalledListModel::ScreenPlayItem)">
                    <parameter type="ScreenPlay::InstalledListModel::ScreenPlayItem" name="" default=""/>
                </function>
                <function name="qt_getEnumName" href="screenplay-installedlistmodel.html#qt_getEnumName" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="91" related="7" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(ScreenPlay::InstalledListModel::ScreenPlayItem)">
                    <parameter type="ScreenPlay::InstalledListModel::ScreenPlayItem" name="" default=""/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::InstalledListModel::qt_metacall" href="screenplay-installedlistmodel.html#qt_metacall" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="66" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::InstalledListModel::qt_metacast" href="screenplay-installedlistmodel.html#qt_metacast" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="66" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::InstalledListModel::qt_static_metacall" href="screenplay-installedlistmodel.html#qt_static_metacall" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="66" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="reset" fullname="ScreenPlay::InstalledListModel::reset" href="screenplay-installedlistmodel.html#reset" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="103" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void reset()"/>
                <function name="roleNames" fullname="ScreenPlay::InstalledListModel::roleNames" href="screenplay-installedlistmodel.html#roleNames" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="77" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QHash&lt;int, QByteArray&gt;" brief="Returns the variable names for QML" signature="QHash&lt;int, QByteArray&gt; roleNames() const override"/>
                <function name="rowCount" fullname="ScreenPlay::InstalledListModel::rowCount" href="screenplay-installedlistmodel.html#rowCount" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="75" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="int" brief="Returns the length of the installed items" signature="int rowCount(const QModelIndex &amp;parent) const override">
                    <parameter type="const QModelIndex &amp;" name="parent" default="QModelIndex()"/>
                </function>
                <function name="setCount" fullname="ScreenPlay::InstalledListModel::setCount" href="screenplay-installedlistmodel.html#count-prop" status="active" access="public" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="107" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="count" type="void" signature="void setCount(int count)">
                    <parameter type="int" name="count" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::InstalledListModel::QPrivateSignal" href="screenplay-installedlistmodel-qprivatesignal.html" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="66"/>
                <enum name="ScreenPlayItem" fullname="ScreenPlay::InstalledListModel::ScreenPlayItem" href="screenplay-installedlistmodel.html#ScreenPlayItem-enum" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="79" scoped="true">
                    <value name="Title" value="Qt::UserRole"/>
                    <value name="Type" value="257"/>
                    <value name="Preview" value="258"/>
                    <value name="PreviewGIF" value="259"/>
                    <value name="FolderId" value="260"/>
                    <value name="FileId" value="261"/>
                    <value name="AbsoluteStoragePath" value="262"/>
                    <value name="WorkshopID" value="263"/>
                    <value name="Tags" value="264"/>
                    <value name="SearchType" value="265"/>
                </enum>
                <property name="count" fullname="ScreenPlay::InstalledListModel::count" href="screenplay-installedlistmodel.html#count-prop" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="68">
                    <getter name="count"/>
                    <setter name="setCount"/>
                    <notifier name="countChanged"/>
                </property>
                <variable name="m_count" fullname="ScreenPlay::InstalledListModel::m_count" href="screenplay-installedlistmodel.html#m_count-var" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="124" type="int" static="false"/>
                <variable name="m_fileSystemWatcher" fullname="ScreenPlay::InstalledListModel::m_fileSystemWatcher" href="screenplay-installedlistmodel.html#m_fileSystemWatcher-var" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="122" type="QFileSystemWatcher" static="false"/>
                <variable name="m_globalVariables" fullname="ScreenPlay::InstalledListModel::m_globalVariables" href="screenplay-installedlistmodel.html#m_globalVariables-var" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="126" type="const std::shared_ptr&lt;GlobalVariables&gt; &amp;" static="false"/>
                <variable name="m_screenPlayFiles" fullname="ScreenPlay::InstalledListModel::m_screenPlayFiles" href="screenplay-installedlistmodel.html#m_screenPlayFiles-var" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="123" type="QVector&lt;ScreenPlay::ProjectFile&gt;" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::InstalledListModel::staticMetaObject" href="screenplay-installedlistmodel.html#staticMetaObject-var" status="internal" access="private" location="installedlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/installedlistmodel.h" lineno="66" type="const QMetaObject" static="true"/>
            </class>
            <namespace name="InstalledType" fullname="ScreenPlay::InstalledType" href="screenplay-installedtype-sub-screenplay.html" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="55">
                <function name="qt_getEnumMetaObject" fullname="ScreenPlay::InstalledType::qt_getEnumMetaObject" href="screenplay-installedtype-sub-screenplay.html#qt_getEnumMetaObject" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="69" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(ScreenPlay::InstalledType::InstalledType)">
                    <parameter type="ScreenPlay::InstalledType::InstalledType" name="" default=""/>
                </function>
                <function name="qt_getEnumName" fullname="ScreenPlay::InstalledType::qt_getEnumName" href="screenplay-installedtype-sub-screenplay.html#qt_getEnumName" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="69" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(ScreenPlay::InstalledType::InstalledType)">
                    <parameter type="ScreenPlay::InstalledType::InstalledType" name="" default=""/>
                </function>
                <enum name="InstalledType" fullname="ScreenPlay::InstalledType::InstalledType" href="screenplay-installedtype-sub-screenplay.html#InstalledType-enum" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="58" scoped="true">
                    <value name="Unknown" value="0"/>
                    <value name="VideoWallpaper" value="1"/>
                    <value name="QMLWallpaper" value="2"/>
                    <value name="HTMLWallpaper" value="3"/>
                    <value name="GodotWallpaper" value="4"/>
                    <value name="QMLWidget" value="5"/>
                    <value name="HTMLWidget" value="6"/>
                </enum>
                <variable name="staticMetaObject" fullname="ScreenPlay::InstalledType::staticMetaObject" href="screenplay-installedtype-sub-screenplay.html#staticMetaObject-var" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="56" type="const QMetaObject" static="false"/>
            </namespace>
            <struct name="Monitor" fullname="ScreenPlay::Monitor" href="screenplay-monitor.html" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="58">
                <function name="Monitor" fullname="ScreenPlay::Monitor::Monitor" href="screenplay-monitor.html#Monitor" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="60" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="Monitor(const int number, const QRect &amp;availableGeometry, QScreen *screen)">
                    <parameter type="const int" name="number" default=""/>
                    <parameter type="const QRect &amp;" name="availableGeometry" default=""/>
                    <parameter type="QScreen *" name="screen" default=""/>
                </function>
                <variable name="m_activeWallpaper" fullname="ScreenPlay::Monitor::m_activeWallpaper" href="screenplay-monitor.html#m_activeWallpaper-var" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="73" type="std::shared_ptr&lt;ScreenPlayWallpaper&gt;" static="false"/>
                <variable name="m_availableGeometry" fullname="ScreenPlay::Monitor::m_availableGeometry" href="screenplay-monitor.html#m_availableGeometry-var" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="70" type="QRect" static="false"/>
                <variable name="m_number" fullname="ScreenPlay::Monitor::m_number" href="screenplay-monitor.html#m_number-var" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="71" type="int" static="false"/>
                <variable name="m_screen" fullname="ScreenPlay::Monitor::m_screen" href="screenplay-monitor.html#m_screen-var" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="72" type="QScreen *" static="false"/>
            </struct>
            <class name="MonitorListModel" fullname="ScreenPlay::MonitorListModel" href="screenplay-monitorlistmodel.html" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="76" documented="true" bases="QAbstractListModel" module="ScreenPlay" brief="MonitorListModel">
                <function name="MonitorListModel" fullname="ScreenPlay::MonitorListModel::MonitorListModel" href="screenplay-monitorlistmodel.html#MonitorListModel" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="80" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" brief="Constructor" signature="MonitorListModel(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="clearActiveWallpaper" fullname="ScreenPlay::MonitorListModel::clearActiveWallpaper" href="screenplay-monitorlistmodel.html#clearActiveWallpaper" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="114" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Clears the listmodel" signature="void clearActiveWallpaper()"/>
                <function name="closeWallpaper" fullname="ScreenPlay::MonitorListModel::closeWallpaper" href="screenplay-monitorlistmodel.html#closeWallpaper" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="115" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Removes the preview image and appID inside an monitor item" signature="void closeWallpaper(const QString &amp;appID)">
                    <parameter type="const QString &amp;" name="appID" default=""/>
                </function>
                <function name="data" fullname="ScreenPlay::MonitorListModel::data" href="screenplay-monitorlistmodel.html#data" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="100" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QVariant" brief="Retruns the data member of the Monitor" signature="QVariant data(const QModelIndex &amp;index, int role) const override">
                    <parameter type="const QModelIndex &amp;" name="index" default=""/>
                    <parameter type="int" name="role" default="Qt::DisplayRole"/>
                </function>
                <function name="getAbsoluteDesktopSize" fullname="ScreenPlay::MonitorListModel::getAbsoluteDesktopSize" href="screenplay-monitorlistmodel.html#getAbsoluteDesktopSize" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="116" documented="true" meta="slot" virtual="non" const="true" static="false" final="false" override="false" type="QRect" brief="MonitorListModel::getAbsoluteDesktopSize " signature="QRect getAbsoluteDesktopSize() const"/>
                <function name="getAppIDByMonitorIndex" fullname="ScreenPlay::MonitorListModel::getAppIDByMonitorIndex" href="screenplay-monitorlistmodel.html#getAppIDByMonitorIndex" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="105" documented="true" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="std::optional&lt;QString&gt;" brief="If successful this function returns an AppID. Otherwhise std::nullopt" signature="std::optional&lt;QString&gt; getAppIDByMonitorIndex(const int index) const">
                    <parameter type="const int" name="index" default=""/>
                </function>
                <function name="loadMonitors" fullname="ScreenPlay::MonitorListModel::loadMonitors" href="screenplay-monitorlistmodel.html#loadMonitors" status="active" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="130" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Reloads the listmodel of monitors" signature="void loadMonitors()"/>
                <function name="metaObject" fullname="ScreenPlay::MonitorListModel::metaObject" href="screenplay-monitorlistmodel.html#metaObject" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="77" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="monitorConfigurationChanged" fullname="ScreenPlay::MonitorListModel::monitorConfigurationChanged" href="screenplay-monitorlistmodel.html#monitorConfigurationChanged" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="110" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void monitorConfigurationChanged()"/>
                <function name="monitorReloadCompleted" fullname="ScreenPlay::MonitorListModel::monitorReloadCompleted" href="screenplay-monitorlistmodel.html#monitorReloadCompleted" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="108" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void monitorReloadCompleted()"/>
                <function name="qt_getEnumMetaObject" href="screenplay-monitorlistmodel.html#qt_getEnumMetaObject" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="96" related="8" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(ScreenPlay::MonitorListModel::MonitorRole)">
                    <parameter type="ScreenPlay::MonitorListModel::MonitorRole" name="" default=""/>
                </function>
                <function name="qt_getEnumName" href="screenplay-monitorlistmodel.html#qt_getEnumName" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="96" related="9" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(ScreenPlay::MonitorListModel::MonitorRole)">
                    <parameter type="ScreenPlay::MonitorListModel::MonitorRole" name="" default=""/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::MonitorListModel::qt_metacall" href="screenplay-monitorlistmodel.html#qt_metacall" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="77" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::MonitorListModel::qt_metacast" href="screenplay-monitorlistmodel.html#qt_metacast" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="77" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::MonitorListModel::qt_static_metacall" href="screenplay-monitorlistmodel.html#qt_static_metacall" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="77" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="reset" fullname="ScreenPlay::MonitorListModel::reset" href="screenplay-monitorlistmodel.html#reset" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="113" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Removes all items and loads them vida loadMonitors() again" signature="void reset()"/>
                <function name="roleNames" fullname="ScreenPlay::MonitorListModel::roleNames" href="screenplay-monitorlistmodel.html#roleNames" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="98" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QHash&lt;int, QByteArray&gt;" brief="Returns the variable names for QML" signature="QHash&lt;int, QByteArray&gt; roleNames() const override"/>
                <function name="rowCount" fullname="ScreenPlay::MonitorListModel::rowCount" href="screenplay-monitorlistmodel.html#rowCount" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="99" documented="true" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="int" brief="Returns the amount of active monitors" signature="int rowCount(const QModelIndex &amp;parent) const override">
                    <parameter type="const QModelIndex &amp;" name="parent" default="QModelIndex()"/>
                </function>
                <function name="screenAdded" fullname="ScreenPlay::MonitorListModel::screenAdded" href="screenplay-monitorlistmodel.html#screenAdded" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="118" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void screenAdded(QScreen *screen)">
                    <parameter type="QScreen *" name="screen" default=""/>
                </function>
                <function name="screenRemoved" fullname="ScreenPlay::MonitorListModel::screenRemoved" href="screenplay-monitorlistmodel.html#screenRemoved" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="123" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void screenRemoved(QScreen *screen)">
                    <parameter type="QScreen *" name="screen" default=""/>
                </function>
                <function name="setNewActiveMonitor" fullname="ScreenPlay::MonitorListModel::setNewActiveMonitor" href="screenplay-monitorlistmodel.html#setNewActiveMonitor" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="109" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setNewActiveMonitor(int index, QString path)">
                    <parameter type="int" name="index" default=""/>
                    <parameter type="QString" name="path" default=""/>
                </function>
                <function name="setWallpaperActiveMonitor" fullname="ScreenPlay::MonitorListModel::setWallpaperActiveMonitor" href="screenplay-monitorlistmodel.html#setWallpaperActiveMonitor" status="active" access="public" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="102" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Sets the previewImage and appID for a list item" signature="void setWallpaperActiveMonitor(const std::shared_ptr&lt;ScreenPlayWallpaper&gt; &amp;wallpaper, const QVector&lt;int&gt; monitors)">
                    <parameter type="const std::shared_ptr&lt;ScreenPlayWallpaper&gt; &amp;" name="wallpaper" default=""/>
                    <parameter type="const QVector&lt;int&gt;" name="monitors" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::MonitorListModel::QPrivateSignal" href="screenplay-monitorlistmodel-qprivatesignal.html" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="77"/>
                <enum name="MonitorRole" fullname="ScreenPlay::MonitorListModel::MonitorRole" href="screenplay-monitorlistmodel.html#MonitorRole-enum" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="82" scoped="true">
                    <value name="AppID" value="Qt::UserRole"/>
                    <value name="MonitorID" value="257"/>
                    <value name="Name" value="258"/>
                    <value name="Size" value="259"/>
                    <value name="AvailableGeometry" value="260"/>
                    <value name="AvailableVirtualGeometry" value="261"/>
                    <value name="Number" value="262"/>
                    <value name="Geometry" value="263"/>
                    <value name="Model" value="264"/>
                    <value name="Manufacturer" value="265"/>
                    <value name="PreviewImage" value="266"/>
                    <value name="InstalledType" value="267"/>
                </enum>
                <variable name="m_monitorList" fullname="ScreenPlay::MonitorListModel::m_monitorList" href="screenplay-monitorlistmodel.html#m_monitorList-var" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="133" type="QVector&lt;ScreenPlay::Monitor&gt;" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::MonitorListModel::staticMetaObject" href="screenplay-monitorlistmodel.html#staticMetaObject-var" status="internal" access="private" location="monitorlistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/monitorlistmodel.h" lineno="77" type="const QMetaObject" static="true"/>
            </class>
            <struct name="Profile" fullname="ScreenPlay::Profile" href="screenplay-profile.html" status="internal" access="private" location="profile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profile.h" lineno="49">
                <function name="Profile" fullname="ScreenPlay::Profile::Profile" href="screenplay-profile.html#Profile" status="internal" access="private" location="profile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profile.h" lineno="51" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="Profile()"/>
                <function name="Profile" fullname="ScreenPlay::Profile::Profile" href="screenplay-profile.html#Profile-1" status="internal" access="private" location="profile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profile.h" lineno="52" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" signature="Profile(const QUrl &amp;absolutePath, const QString &amp;id, const QString &amp;version, const QString &amp;wallpaperId, const QRect &amp;rect, const bool isLooping)">
                    <parameter type="const QUrl &amp;" name="absolutePath" default=""/>
                    <parameter type="const QString &amp;" name="id" default=""/>
                    <parameter type="const QString &amp;" name="version" default=""/>
                    <parameter type="const QString &amp;" name="wallpaperId" default=""/>
                    <parameter type="const QRect &amp;" name="rect" default=""/>
                    <parameter type="const bool" name="isLooping" default=""/>
                </function>
                <variable name="m_absolutePath" fullname="ScreenPlay::Profile::m_absolutePath" href="screenplay-profile.html#m_absolutePath-var" status="internal" access="private" location="profile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profile.h" lineno="67" type="QUrl" static="false"/>
                <variable name="m_id" fullname="ScreenPlay::Profile::m_id" href="screenplay-profile.html#m_id-var" status="internal" access="private" location="profile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profile.h" lineno="68" type="QString" static="false"/>
                <variable name="m_isLooping" fullname="ScreenPlay::Profile::m_isLooping" href="screenplay-profile.html#m_isLooping-var" status="internal" access="private" location="profile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profile.h" lineno="72" type="bool" static="false"/>
                <variable name="m_monitorList" fullname="ScreenPlay::Profile::m_monitorList" href="screenplay-profile.html#m_monitorList-var" status="internal" access="private" location="profile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profile.h" lineno="73" type="QVector&lt;QString&gt;" static="false"/>
                <variable name="m_rect" fullname="ScreenPlay::Profile::m_rect" href="screenplay-profile.html#m_rect-var" status="internal" access="private" location="profile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profile.h" lineno="71" type="QRect" static="false"/>
                <variable name="m_version" fullname="ScreenPlay::Profile::m_version" href="screenplay-profile.html#m_version-var" status="internal" access="private" location="profile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profile.h" lineno="69" type="QString" static="false"/>
                <variable name="m_wallpaperId" fullname="ScreenPlay::Profile::m_wallpaperId" href="screenplay-profile.html#m_wallpaperId-var" status="internal" access="private" location="profile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profile.h" lineno="70" type="QString" static="false"/>
            </struct>
            <class name="ProfileListModel" fullname="ScreenPlay::ProfileListModel" href="screenplay-profilelistmodel.html" status="active" access="public" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="55" documented="true" bases="QAbstractListModel" module="ScreenPlay" brief="Used to save all active wallpapers and widgets position and configurations after a restart">
                <function name="ProfileListModel" fullname="ScreenPlay::ProfileListModel::ProfileListModel" href="screenplay-profilelistmodel.html#ProfileListModel" status="active" access="public" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="59" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="ProfileListModel(const std::shared_ptr&lt;GlobalVariables&gt; &amp;globalVariables, QObject *parent)">
                    <parameter type="const std::shared_ptr&lt;GlobalVariables&gt; &amp;" name="globalVariables" default=""/>
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="append" fullname="ScreenPlay::ProfileListModel::append" href="screenplay-profilelistmodel.html#append" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="72" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void append(const ScreenPlay::Profile &amp;profile)">
                    <parameter type="const ScreenPlay::Profile &amp;" name="profile" default=""/>
                </function>
                <function name="data" fullname="ScreenPlay::ProfileListModel::data" href="screenplay-profilelistmodel.html#data" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="69" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QVariant" signature="QVariant data(const QModelIndex &amp;index, int role) const override">
                    <parameter type="const QModelIndex &amp;" name="index" default=""/>
                    <parameter type="int" name="role" default="Qt::DisplayRole"/>
                </function>
                <function name="getProfileByName" fullname="ScreenPlay::ProfileListModel::getProfileByName" href="screenplay-profilelistmodel.html#getProfileByName" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="71" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="bool" signature="bool getProfileByName(QString id, ScreenPlay::Profile *profile)">
                    <parameter type="QString" name="id" default=""/>
                    <parameter type="ScreenPlay::Profile *" name="profile" default=""/>
                </function>
                <function name="metaObject" fullname="ScreenPlay::ProfileListModel::metaObject" href="screenplay-profilelistmodel.html#metaObject" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="56" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="qt_metacall" fullname="ScreenPlay::ProfileListModel::qt_metacall" href="screenplay-profilelistmodel.html#qt_metacall" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="56" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::ProfileListModel::qt_metacast" href="screenplay-profilelistmodel.html#qt_metacast" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="56" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::ProfileListModel::qt_static_metacall" href="screenplay-profilelistmodel.html#qt_static_metacall" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="56" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="roleNames" fullname="ScreenPlay::ProfileListModel::roleNames" href="screenplay-profilelistmodel.html#roleNames" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="70" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QHash&lt;int, QByteArray&gt;" signature="QHash&lt;int, QByteArray&gt; roleNames() const override"/>
                <function name="rowCount" fullname="ScreenPlay::ProfileListModel::rowCount" href="screenplay-profilelistmodel.html#rowCount" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="68" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="int" signature="int rowCount(const QModelIndex &amp;parent) const override">
                    <parameter type="const QModelIndex &amp;" name="parent" default="QModelIndex()"/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::ProfileListModel::QPrivateSignal" href="screenplay-profilelistmodel-qprivatesignal.html" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="56"/>
                <enum name="RoleNames" fullname="ScreenPlay::ProfileListModel::RoleNames" href="screenplay-profilelistmodel.html#RoleNames-enum" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="63">
                    <value name="NameRole" value="Qt::UserRole"/>
                    <value name="NumberRole" value="257"/>
                </enum>
                <variable name="m_globalVariables" fullname="ScreenPlay::ProfileListModel::m_globalVariables" href="screenplay-profilelistmodel.html#m_globalVariables-var" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="76" type="const std::shared_ptr&lt;GlobalVariables&gt; &amp;" static="false"/>
                <variable name="m_profileList" fullname="ScreenPlay::ProfileListModel::m_profileList" href="screenplay-profilelistmodel.html#m_profileList-var" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="75" type="QVector&lt;ScreenPlay::Profile&gt;" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::ProfileListModel::staticMetaObject" href="screenplay-profilelistmodel.html#staticMetaObject-var" status="internal" access="private" location="profilelistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/profilelistmodel.h" lineno="56" type="const QMetaObject" static="true"/>
            </class>
            <struct name="ProjectFile" fullname="ScreenPlay::ProjectFile" href="screenplay-projectfile.html" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="56">
                <function name="ProjectFile" fullname="ScreenPlay::ProjectFile::ProjectFile" href="screenplay-projectfile.html#ProjectFile" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="58" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="ProjectFile(const QJsonObject &amp;obj, const QString &amp;folderName, const QUrl &amp;absolutePath)">
                    <parameter type="const QJsonObject &amp;" name="obj" default=""/>
                    <parameter type="const QString &amp;" name="folderName" default=""/>
                    <parameter type="const QUrl &amp;" name="absolutePath" default=""/>
                </function>
                <function name="ProjectFile" fullname="ScreenPlay::ProjectFile::ProjectFile" href="screenplay-projectfile.html#ProjectFile-1" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="116" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" signature="ProjectFile()"/>
                <variable name="m_absoluteStoragePath" fullname="ScreenPlay::ProjectFile::m_absoluteStoragePath" href="screenplay-projectfile.html#m_absoluteStoragePath-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="125" type="QUrl" static="false"/>
                <variable name="m_description" fullname="ScreenPlay::ProjectFile::m_description" href="screenplay-projectfile.html#m_description-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="119" type="QString" static="false"/>
                <variable name="m_file" fullname="ScreenPlay::ProjectFile::m_file" href="screenplay-projectfile.html#m_file-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="121" type="QString" static="false"/>
                <variable name="m_folderId" fullname="ScreenPlay::ProjectFile::m_folderId" href="screenplay-projectfile.html#m_folderId-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="127" type="QString" static="false"/>
                <variable name="m_preview" fullname="ScreenPlay::ProjectFile::m_preview" href="screenplay-projectfile.html#m_preview-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="122" type="QString" static="false"/>
                <variable name="m_previewGIF" fullname="ScreenPlay::ProjectFile::m_previewGIF" href="screenplay-projectfile.html#m_previewGIF-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="123" type="QString" static="false"/>
                <variable name="m_searchType" fullname="ScreenPlay::ProjectFile::m_searchType" href="screenplay-projectfile.html#m_searchType-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="133" type="SearchType::SearchType" static="false"/>
                <variable name="m_tags" fullname="ScreenPlay::ProjectFile::m_tags" href="screenplay-projectfile.html#m_tags-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="130" type="QStringList" static="false"/>
                <variable name="m_title" fullname="ScreenPlay::ProjectFile::m_title" href="screenplay-projectfile.html#m_title-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="118" type="QString" static="false"/>
                <variable name="m_type" fullname="ScreenPlay::ProjectFile::m_type" href="screenplay-projectfile.html#m_type-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="132" type="InstalledType::InstalledType" static="false"/>
                <variable name="m_workshopID" fullname="ScreenPlay::ProjectFile::m_workshopID" href="screenplay-projectfile.html#m_workshopID-var" status="internal" access="private" location="projectfile.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectfile.h" lineno="129" type="int" static="false"/>
            </struct>
            <struct name="ProjectSettingsListItem" fullname="ScreenPlay::ProjectSettingsListItem" href="screenplay-projectsettingslistitem.html" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="115">
                <function name="ProjectSettingsListItem" fullname="ScreenPlay::ProjectSettingsListItem::ProjectSettingsListItem" href="screenplay-projectsettingslistitem.html#ProjectSettingsListItem" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="118" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="ProjectSettingsListItem(const QString &amp;headline)">
                    <parameter type="const QString &amp;" name="headline" default=""/>
                </function>
                <function name="ProjectSettingsListItem" fullname="ScreenPlay::ProjectSettingsListItem::ProjectSettingsListItem" href="screenplay-projectsettingslistitem.html#ProjectSettingsListItem-1" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="121" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" signature="ProjectSettingsListItem(const QString &amp;key, const QJsonObject &amp;obj)">
                    <parameter type="const QString &amp;" name="key" default=""/>
                    <parameter type="const QJsonObject &amp;" name="obj" default=""/>
                </function>
                <function name="qt_check_for_QGADGET_macro" fullname="ScreenPlay::ProjectSettingsListItem::qt_check_for_QGADGET_macro" href="screenplay-projectsettingslistitem.html#qt_check_for_QGADGET_macro" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="116" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qt_check_for_QGADGET_macro()"/>
                <function name="qt_static_metacall" fullname="ScreenPlay::ProjectSettingsListItem::qt_static_metacall" href="screenplay-projectsettingslistitem.html#qt_static_metacall" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="116" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <typedef name="QtGadgetHelper" fullname="ScreenPlay::ProjectSettingsListItem::QtGadgetHelper" href="screenplay-projectsettingslistitem.html#QtGadgetHelper-typedef" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="116"/>
                <variable name="m_isHeadline" fullname="ScreenPlay::ProjectSettingsListItem::m_isHeadline" href="screenplay-projectsettingslistitem.html#m_isHeadline-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="126" type="bool" static="false"/>
                <variable name="m_item" fullname="ScreenPlay::ProjectSettingsListItem::m_item" href="screenplay-projectsettingslistitem.html#m_item-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="127" type="std::shared_ptr&lt;IListItem&gt;" static="false"/>
                <variable name="m_key" fullname="ScreenPlay::ProjectSettingsListItem::m_key" href="screenplay-projectsettingslistitem.html#m_key-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="125" type="QString" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::ProjectSettingsListItem::staticMetaObject" href="screenplay-projectsettingslistitem.html#staticMetaObject-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="116" type="const QMetaObject" static="true"/>
            </struct>
            <class name="ProjectSettingsListModel" fullname="ScreenPlay::ProjectSettingsListModel" href="screenplay-projectsettingslistmodel.html" status="active" access="public" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="78" documented="true" bases="QAbstractListModel" module="ScreenPlay" brief="Used for the dynamic loading of the properties json object inside a project.json">
                <function name="append" fullname="ScreenPlay::ProjectSettingsListModel::append" href="screenplay-projectsettingslistmodel.html#append" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="95" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void append(const ScreenPlay::SettingsItem &amp;&amp;item)">
                    <parameter type="const ScreenPlay::SettingsItem &amp;&amp;" name="item" default=""/>
                </function>
                <function name="data" fullname="ScreenPlay::ProjectSettingsListModel::data" href="screenplay-projectsettingslistmodel.html#data" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="83" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QVariant" signature="QVariant data(const QModelIndex &amp;index, int role) const override">
                    <parameter type="const QModelIndex &amp;" name="index" default=""/>
                    <parameter type="int" name="role" default="Qt::DisplayRole"/>
                </function>
                <function name="getActiveSettingsJson" fullname="ScreenPlay::ProjectSettingsListModel::getActiveSettingsJson" href="screenplay-projectsettingslistmodel.html#getActiveSettingsJson" status="active" access="public" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="93" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="QJsonObject" brief="ProjectSettingsListModel::getActiveSettingsJson " signature="QJsonObject getActiveSettingsJson()"/>
                <function name="init" fullname="ScreenPlay::ProjectSettingsListModel::init" href="screenplay-projectsettingslistmodel.html#init" status="active" access="public" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="94" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void init(const InstalledType::InstalledType &amp;type, const QJsonObject &amp;properties)">
                    <parameter type="const InstalledType::InstalledType &amp;" name="type" default=""/>
                    <parameter type="const QJsonObject &amp;" name="properties" default=""/>
                </function>
                <function name="metaObject" fullname="ScreenPlay::ProjectSettingsListModel::metaObject" href="screenplay-projectsettingslistmodel.html#metaObject" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="79" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="qt_getEnumMetaObject" href="screenplay-projectsettingslistmodel.html#qt_getEnumMetaObject" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="91" related="10" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(ScreenPlay::ProjectSettingsListModel::ProjectSettingsRole)">
                    <parameter type="ScreenPlay::ProjectSettingsListModel::ProjectSettingsRole" name="" default=""/>
                </function>
                <function name="qt_getEnumName" href="screenplay-projectsettingslistmodel.html#qt_getEnumName" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="91" related="11" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(ScreenPlay::ProjectSettingsListModel::ProjectSettingsRole)">
                    <parameter type="ScreenPlay::ProjectSettingsListModel::ProjectSettingsRole" name="" default=""/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::ProjectSettingsListModel::qt_metacall" href="screenplay-projectsettingslistmodel.html#qt_metacall" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="79" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::ProjectSettingsListModel::qt_metacast" href="screenplay-projectsettingslistmodel.html#qt_metacast" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="79" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::ProjectSettingsListModel::qt_static_metacall" href="screenplay-projectsettingslistmodel.html#qt_static_metacall" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="79" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="roleNames" fullname="ScreenPlay::ProjectSettingsListModel::roleNames" href="screenplay-projectsettingslistmodel.html#roleNames" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="84" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QHash&lt;int, QByteArray&gt;" signature="QHash&lt;int, QByteArray&gt; roleNames() const override"/>
                <function name="rowCount" fullname="ScreenPlay::ProjectSettingsListModel::rowCount" href="screenplay-projectsettingslistmodel.html#rowCount" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="82" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="int" signature="int rowCount(const QModelIndex &amp;parent) const override">
                    <parameter type="const QModelIndex &amp;" name="parent" default="QModelIndex()"/>
                </function>
                <function name="setValueAtIndex" fullname="ScreenPlay::ProjectSettingsListModel::setValueAtIndex" href="screenplay-projectsettingslistmodel.html#setValueAtIndex" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="98" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setValueAtIndex(const int row, const QString &amp;key, const QJsonObject &amp;value)">
                    <parameter type="const int" name="row" default=""/>
                    <parameter type="const QString &amp;" name="key" default=""/>
                    <parameter type="const QJsonObject &amp;" name="value" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::ProjectSettingsListModel::QPrivateSignal" href="screenplay-projectsettingslistmodel-qprivatesignal.html" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="79"/>
                <enum name="ProjectSettingsRole" fullname="ScreenPlay::ProjectSettingsListModel::ProjectSettingsRole" href="screenplay-projectsettingslistmodel.html#ProjectSettingsRole-enum" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="86">
                    <value name="NameRole" value="Qt::UserRole"/>
                    <value name="IsHeadlineRole" value="257"/>
                    <value name="ValueRole" value="258"/>
                </enum>
                <variable name="m_projectSettings" fullname="ScreenPlay::ProjectSettingsListModel::m_projectSettings" href="screenplay-projectsettingslistmodel.html#m_projectSettings-var" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="101" type="QVector&lt;ScreenPlay::SettingsItem&gt;" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::ProjectSettingsListModel::staticMetaObject" href="screenplay-projectsettingslistmodel.html#staticMetaObject-var" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="79" type="const QMetaObject" static="true"/>
            </class>
            <class name="SDKConnection" fullname="ScreenPlay::SDKConnection" href="screenplay-sdkconnection.html" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="62" bases="QObject">
                <function name="SDKConnection" fullname="ScreenPlay::SDKConnection::SDKConnection" href="screenplay-sdkconnection.html#SDKConnection" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="72" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="SDKConnection(QLocalSocket *socket, QObject *parent)">
                    <parameter type="QLocalSocket *" name="socket" default=""/>
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="appConnected" fullname="ScreenPlay::SDKConnection::appConnected" href="screenplay-sdkconnection.html#appConnected" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="101" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void appConnected(const ScreenPlay::SDKConnection *connection)">
                    <parameter type="const ScreenPlay::SDKConnection *" name="connection" default=""/>
                </function>
                <function name="appID" fullname="ScreenPlay::SDKConnection::appID" href="screenplay-sdkconnection.html#appID-prop" status="active" access="public" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="74" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="appID" type="QString" signature="QString appID() const"/>
                <function name="appIDChanged" fullname="ScreenPlay::SDKConnection::appIDChanged" href="screenplay-sdkconnection.html#appID-prop" status="active" access="public" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="96" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void appIDChanged(QString appID)">
                    <parameter type="QString" name="appID" default=""/>
                </function>
                <function name="close" fullname="ScreenPlay::SDKConnection::close" href="screenplay-sdkconnection.html#close" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="108" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void close()"/>
                <function name="jsonMessageReceived" fullname="ScreenPlay::SDKConnection::jsonMessageReceived" href="screenplay-sdkconnection.html#jsonMessageReceived" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="102" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void jsonMessageReceived(const QJsonObject obj)">
                    <parameter type="const QJsonObject" name="obj" default=""/>
                </function>
                <function name="metaObject" fullname="ScreenPlay::SDKConnection::metaObject" href="screenplay-sdkconnection.html#metaObject" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="63" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="monitor" fullname="ScreenPlay::SDKConnection::monitor" href="screenplay-sdkconnection.html#monitor-prop" status="active" access="public" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="84" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="monitor" type="QVector&lt;int&gt;" signature="QVector&lt;int&gt; monitor() const"/>
                <function name="monitorChanged" fullname="ScreenPlay::SDKConnection::monitorChanged" href="screenplay-sdkconnection.html#monitor-prop" status="active" access="public" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="97" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="monitor" type="void" signature="void monitorChanged(QVector&lt;int&gt; monitor)">
                    <parameter type="QVector&lt;int&gt;" name="monitor" default=""/>
                </function>
                <function name="pingAliveReceived" fullname="ScreenPlay::SDKConnection::pingAliveReceived" href="screenplay-sdkconnection.html#pingAliveReceived" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="103" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void pingAliveReceived()"/>
                <function name="qt_metacall" fullname="ScreenPlay::SDKConnection::qt_metacall" href="screenplay-sdkconnection.html#qt_metacall" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="63" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::SDKConnection::qt_metacast" href="screenplay-sdkconnection.html#qt_metacast" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="63" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::SDKConnection::qt_static_metacall" href="screenplay-sdkconnection.html#qt_static_metacall" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="63" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="readyRead" fullname="ScreenPlay::SDKConnection::readyRead" href="screenplay-sdkconnection.html#readyRead" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="106" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void readyRead()"/>
                <function name="requestCloseAt" fullname="ScreenPlay::SDKConnection::requestCloseAt" href="screenplay-sdkconnection.html#requestCloseAt" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="95" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestCloseAt(int at)">
                    <parameter type="int" name="at" default=""/>
                </function>
                <function name="requestDecreaseWidgetCount" fullname="ScreenPlay::SDKConnection::requestDecreaseWidgetCount" href="screenplay-sdkconnection.html#requestDecreaseWidgetCount" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="99" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestDecreaseWidgetCount()"/>
                <function name="requestRaise" fullname="ScreenPlay::SDKConnection::requestRaise" href="screenplay-sdkconnection.html#requestRaise" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="100" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestRaise()"/>
                <function name="sendMessage" fullname="ScreenPlay::SDKConnection::sendMessage" href="screenplay-sdkconnection.html#sendMessage" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="107" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void sendMessage(const QByteArray &amp;message)">
                    <parameter type="const QByteArray &amp;" name="message" default=""/>
                </function>
                <function name="setAppID" fullname="ScreenPlay::SDKConnection::setAppID" href="screenplay-sdkconnection.html#appID-prop" status="active" access="public" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="110" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void setAppID(QString appID)">
                    <parameter type="QString" name="appID" default=""/>
                </function>
                <function name="setMonitor" fullname="ScreenPlay::SDKConnection::setMonitor" href="screenplay-sdkconnection.html#monitor-prop" status="active" access="public" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="119" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="monitor" type="void" signature="void setMonitor(QVector&lt;int&gt; monitor)">
                    <parameter type="QVector&lt;int&gt;" name="monitor" default=""/>
                </function>
                <function name="setType" fullname="ScreenPlay::SDKConnection::setType" href="screenplay-sdkconnection.html#type-prop" status="active" access="public" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="128" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void setType(QString type)">
                    <parameter type="QString" name="type" default=""/>
                </function>
                <function name="socket" fullname="ScreenPlay::SDKConnection::socket" href="screenplay-sdkconnection.html#socket" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="79" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="QLocalSocket *" signature="QLocalSocket * socket() const"/>
                <function name="type" fullname="ScreenPlay::SDKConnection::type" href="screenplay-sdkconnection.html#type-prop" status="active" access="public" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="89" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="type" type="QString" signature="QString type() const"/>
                <function name="typeChanged" fullname="ScreenPlay::SDKConnection::typeChanged" href="screenplay-sdkconnection.html#type-prop" status="active" access="public" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="98" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void typeChanged(QString type)">
                    <parameter type="QString" name="type" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::SDKConnection::QPrivateSignal" href="screenplay-sdkconnection-qprivatesignal.html" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="63"/>
                <property name="appID" fullname="ScreenPlay::SDKConnection::appID" href="screenplay-sdkconnection.html#appID-prop" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="64">
                    <getter name="appID"/>
                    <setter name="setAppID"/>
                    <notifier name="appIDChanged"/>
                </property>
                <property name="monitor" fullname="ScreenPlay::SDKConnection::monitor" href="screenplay-sdkconnection.html#monitor-prop" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="66">
                    <getter name="monitor"/>
                    <setter name="setMonitor"/>
                    <notifier name="monitorChanged"/>
                </property>
                <property name="type" fullname="ScreenPlay::SDKConnection::type" href="screenplay-sdkconnection.html#type-prop" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="65">
                    <getter name="type"/>
                    <setter name="setType"/>
                    <notifier name="typeChanged"/>
                </property>
                <variable name="m_appID" fullname="ScreenPlay::SDKConnection::m_appID" href="screenplay-sdkconnection.html#m_appID-var" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="139" type="QString" static="false"/>
                <variable name="m_monitor" fullname="ScreenPlay::SDKConnection::m_monitor" href="screenplay-sdkconnection.html#m_monitor-var" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="140" type="QVector&lt;int&gt;" static="false"/>
                <variable name="m_socket" fullname="ScreenPlay::SDKConnection::m_socket" href="screenplay-sdkconnection.html#m_socket-var" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="138" type="QLocalSocket *" static="false"/>
                <variable name="m_type" fullname="ScreenPlay::SDKConnection::m_type" href="screenplay-sdkconnection.html#m_type-var" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="141" type="QString" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::SDKConnection::staticMetaObject" href="screenplay-sdkconnection.html#staticMetaObject-var" status="internal" access="private" location="sdkconnection.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/sdkconnection.h" lineno="63" type="const QMetaObject" static="true"/>
            </class>
            <class name="ScreenPlayManager" fullname="ScreenPlay::ScreenPlayManager" href="screenplay-screenplaymanager.html" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="60" documented="true" bases="QObject" module="ScreenPlay" brief="Used to manage multiple ScreenPlayWallpaper and ScreenPlayWidget">
                <function name="ScreenPlayManager" fullname="ScreenPlay::ScreenPlayManager::ScreenPlayManager" href="screenplay-screenplaymanager.html#ScreenPlayManager" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="67" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" brief="Constructor-" signature="ScreenPlayManager(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="activeWallpaperCounter" fullname="ScreenPlay::ScreenPlayManager::activeWallpaperCounter" href="screenplay-screenplaymanager.html#activeWallpaperCounter-prop" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="71" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="activeWallpaperCounter" type="int" signature="int activeWallpaperCounter() const"/>
                <function name="activeWallpaperCounterChanged" fullname="ScreenPlay::ScreenPlayManager::activeWallpaperCounterChanged" href="screenplay-screenplaymanager.html#activeWallpaperCounter-prop" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="93" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="activeWallpaperCounter" type="void" signature="void activeWallpaperCounterChanged(int activeWallpaperCounter)">
                    <parameter type="int" name="activeWallpaperCounter" default=""/>
                </function>
                <function name="activeWidgetsCounter" fullname="ScreenPlay::ScreenPlayManager::activeWidgetsCounter" href="screenplay-screenplaymanager.html#activeWidgetsCounter-prop" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="76" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="activeWidgetsCounter" type="int" signature="int activeWidgetsCounter() const"/>
                <function name="activeWidgetsCounterChanged" fullname="ScreenPlay::ScreenPlayManager::activeWidgetsCounterChanged" href="screenplay-screenplaymanager.html#activeWidgetsCounter-prop" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="94" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="activeWidgetsCounter" type="void" signature="void activeWidgetsCounterChanged(int activeWidgetsCounter)">
                    <parameter type="int" name="activeWidgetsCounter" default=""/>
                </function>
                <function name="appConnected" fullname="ScreenPlay::ScreenPlayManager::appConnected" href="screenplay-screenplaymanager.html#appConnected" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="193" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void appConnected(const std::shared_ptr&lt;SDKConnection&gt; &amp;connection)">
                    <parameter type="const std::shared_ptr&lt;SDKConnection&gt; &amp;" name="connection" default=""/>
                </function>
                <function name="checkIsAnotherScreenPlayInstanceRunning" fullname="ScreenPlay::ScreenPlayManager::checkIsAnotherScreenPlayInstanceRunning" href="screenplay-screenplaymanager.html#checkIsAnotherScreenPlayInstanceRunning" status="active" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="194" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="bool" brief="Checks if another ScreenPlay instance is running by trying to connect to a pipe with the name ScreenPlay. If successful we send a raise command and quit via m_isAnotherScreenPlayInstanceRunning = true" signature="bool checkIsAnotherScreenPlayInstanceRunning()"/>
                <function name="closeAllWallpapers" fullname="ScreenPlay::ScreenPlayManager::closeAllWallpapers" href="screenplay-screenplaymanager.html#closeAllWallpapers" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="137" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Closes all wallpaper connection with the following type:" signature="void closeAllWallpapers()"/>
                <function name="closeAllWidgets" fullname="ScreenPlay::ScreenPlayManager::closeAllWidgets" href="screenplay-screenplaymanager.html#closeAllWidgets" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="138" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Closes all widgets connection with the following type:" signature="void closeAllWidgets()"/>
                <function name="closeConnection" fullname="ScreenPlay::ScreenPlayManager::closeConnection" href="screenplay-screenplaymanager.html#closeConnection" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="140" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" brief="Closes a Wallpaper or Widget connection by the given appID" signature="bool closeConnection(const QString &amp;appID)">
                    <parameter type="const QString &amp;" name="appID" default=""/>
                </function>
                <function name="closeConntectionByType" fullname="ScreenPlay::ScreenPlayManager::closeConntectionByType" href="screenplay-screenplaymanager.html#closeConntectionByType" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="139" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" brief="Closes a connection by type. Used only by closeAllWidgets() and closeAllWallpapers()" signature="bool closeConntectionByType(const QStringList &amp;types)">
                    <parameter type="const QStringList &amp;" name="types" default=""/>
                </function>
                <function name="createWallpaper" fullname="ScreenPlay::ScreenPlayManager::createWallpaper" href="screenplay-screenplaymanager.html#createWallpaper" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="106" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Creates a wallpaper with a given monitorIndex list, a absoluteStoragePath folder, a previewImage (relative path to the absoluteStoragePath), a default volume, a fillMode, a type (htmlWallpaper, qmlWallpaper etc.), a saveToProfilesConfigFile bool only set to flase if we call the method when using via the settings on startup to skip a unnecessary save" signature="void createWallpaper(const ScreenPlay::InstalledType::InstalledType type, const ScreenPlay::FillMode::FillMode fillMode, const QString &amp;absoluteStoragePath, const QString &amp;previewImage, const QString &amp;file, const QVector&lt;int&gt; &amp;monitorIndex, const float volume, const float playbackRate, const QJsonObject &amp;properties, const bool saveToProfilesConfigFile)">
                    <parameter type="const ScreenPlay::InstalledType::InstalledType" name="type" default=""/>
                    <parameter type="const ScreenPlay::FillMode::FillMode" name="fillMode" default=""/>
                    <parameter type="const QString &amp;" name="absoluteStoragePath" default=""/>
                    <parameter type="const QString &amp;" name="previewImage" default=""/>
                    <parameter type="const QString &amp;" name="file" default=""/>
                    <parameter type="const QVector&lt;int&gt; &amp;" name="monitorIndex" default=""/>
                    <parameter type="const float" name="volume" default=""/>
                    <parameter type="const float" name="playbackRate" default=""/>
                    <parameter type="const QJsonObject &amp;" name="properties" default=""/>
                    <parameter type="const bool" name="saveToProfilesConfigFile" default=""/>
                </function>
                <function name="createWidget" fullname="ScreenPlay::ScreenPlayManager::createWidget" href="screenplay-screenplaymanager.html#createWidget" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="118" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Creates a ScreenPlayWidget object via a absoluteStoragePath and a preview image (relative path)" signature="void createWidget(const ScreenPlay::InstalledType::InstalledType type, const QPoint &amp;position, const QString &amp;absoluteStoragePath, const QString &amp;previewImage, const QJsonObject &amp;properties, const bool saveToProfilesConfigFile)">
                    <parameter type="const ScreenPlay::InstalledType::InstalledType" name="type" default=""/>
                    <parameter type="const QPoint &amp;" name="position" default=""/>
                    <parameter type="const QString &amp;" name="absoluteStoragePath" default=""/>
                    <parameter type="const QString &amp;" name="previewImage" default=""/>
                    <parameter type="const QJsonObject &amp;" name="properties" default=""/>
                    <parameter type="const bool" name="saveToProfilesConfigFile" default=""/>
                </function>
                <function name="decreaseActiveWallpaperCounter" fullname="ScreenPlay::ScreenPlayManager::decreaseActiveWallpaperCounter" href="screenplay-screenplaymanager.html#decreaseActiveWallpaperCounter" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="182" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void decreaseActiveWallpaperCounter()"/>
                <function name="decreaseActiveWidgetsCounter" fullname="ScreenPlay::ScreenPlayManager::decreaseActiveWidgetsCounter" href="screenplay-screenplaymanager.html#decreaseActiveWidgetsCounter" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="167" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void decreaseActiveWidgetsCounter()"/>
                <function name="getWallpaperByAppID" fullname="ScreenPlay::ScreenPlayManager::getWallpaperByAppID" href="screenplay-screenplaymanager.html#getWallpaperByAppID" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="134" documented="true" meta="slot" virtual="non" const="true" static="false" final="false" override="false" type="ScreenPlay::ScreenPlayWallpaper *" brief="Returns a ScreenPlayWallpaper if successful, otherwhise std::nullopt" signature="ScreenPlay::ScreenPlayWallpaper * getWallpaperByAppID(const QString &amp;appID) const">
                    <parameter type="const QString &amp;" name="appID" default=""/>
                </function>
                <function name="increaseActiveWallpaperCounter" fullname="ScreenPlay::ScreenPlayManager::increaseActiveWallpaperCounter" href="screenplay-screenplaymanager.html#increaseActiveWallpaperCounter" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="176" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void increaseActiveWallpaperCounter()"/>
                <function name="increaseActiveWidgetsCounter" fullname="ScreenPlay::ScreenPlayManager::increaseActiveWidgetsCounter" href="screenplay-screenplaymanager.html#increaseActiveWidgetsCounter" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="161" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void increaseActiveWidgetsCounter()"/>
                <function name="init" fullname="ScreenPlay::ScreenPlayManager::init" href="screenplay-screenplaymanager.html#init" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="85" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void init(const std::shared_ptr&lt;GlobalVariables&gt; &amp;globalVariables, const std::shared_ptr&lt;MonitorListModel&gt; &amp;mlm, const int &amp;telemetry, const std::shared_ptr&lt;Settings&gt; &amp;settings)">
                    <parameter type="const std::shared_ptr&lt;GlobalVariables&gt; &amp;" name="globalVariables" default=""/>
                    <parameter type="const std::shared_ptr&lt;MonitorListModel&gt; &amp;" name="mlm" default=""/>
                    <parameter type="const int &amp;" name="telemetry" default=""/>
                    <parameter type="const std::shared_ptr&lt;Settings&gt; &amp;" name="settings" default=""/>
                </function>
                <function name="isAnotherScreenPlayInstanceRunning" fullname="ScreenPlay::ScreenPlayManager::isAnotherScreenPlayInstanceRunning" href="screenplay-screenplaymanager.html#isAnotherScreenPlayInstanceRunning" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="80" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="bool" signature="bool isAnotherScreenPlayInstanceRunning()"/>
                <function name="loadProfiles" fullname="ScreenPlay::ScreenPlayManager::loadProfiles" href="screenplay-screenplaymanager.html#loadProfiles" status="active" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="192" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Loads all wallpaper from profiles.json when the version number matches and starts the available wallpaper" signature="void loadProfiles()"/>
                <function name="metaObject" fullname="ScreenPlay::ScreenPlayManager::metaObject" href="screenplay-screenplaymanager.html#metaObject" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="61" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="monitorConfigurationChanged" fullname="ScreenPlay::ScreenPlayManager::monitorConfigurationChanged" href="screenplay-screenplaymanager.html#monitorConfigurationChanged" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="99" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void monitorConfigurationChanged()"/>
                <function name="newConnection" fullname="ScreenPlay::ScreenPlayManager::newConnection" href="screenplay-screenplaymanager.html#newConnection" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="136" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Appends a new SDKConnection object shared_ptr to the m_clients list" signature="void newConnection()"/>
                <function name="profilesSaved" fullname="ScreenPlay::ScreenPlayManager::profilesSaved" href="screenplay-screenplaymanager.html#profilesSaved" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="97" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void profilesSaved()"/>
                <function name="projectSettingsListModelResult" fullname="ScreenPlay::ScreenPlayManager::projectSettingsListModelResult" href="screenplay-screenplaymanager.html#projectSettingsListModelResult" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="92" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void projectSettingsListModelResult(ScreenPlay::ProjectSettingsListModel *li)">
                    <parameter type="ScreenPlay::ProjectSettingsListModel *" name="li" default="nullptr"/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::ScreenPlayManager::qt_metacall" href="screenplay-screenplaymanager.html#qt_metacall" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="61" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::ScreenPlayManager::qt_metacast" href="screenplay-screenplaymanager.html#qt_metacast" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="61" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::ScreenPlayManager::qt_static_metacall" href="screenplay-screenplaymanager.html#qt_static_metacall" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="61" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="removeAllWallpapers" fullname="ScreenPlay::ScreenPlayManager::removeAllWallpapers" href="screenplay-screenplaymanager.html#removeAllWallpapers" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="126" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Removes all wallpaper entries in the profiles.json. This method will likely be removed when using nlohmann/json in the future" signature="void removeAllWallpapers()"/>
                <function name="removeAllWidgets" fullname="ScreenPlay::ScreenPlayManager::removeAllWidgets" href="screenplay-screenplaymanager.html#removeAllWidgets" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="127" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Removes all widgets and resets the activeWidgetCounter to 0" signature="void removeAllWidgets()"/>
                <function name="removeApp" fullname="ScreenPlay::ScreenPlayManager::removeApp" href="screenplay-screenplaymanager.html#removeApp" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="129" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" signature="bool removeApp(const QString &amp;appID)">
                    <parameter type="const QString &amp;" name="appID" default=""/>
                </function>
                <function name="removeWallpaperAt" fullname="ScreenPlay::ScreenPlayManager::removeWallpaperAt" href="screenplay-screenplaymanager.html#removeWallpaperAt" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="128" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" signature="bool removeWallpaperAt(const int index)">
                    <parameter type="const int" name="index" default=""/>
                </function>
                <function name="removeWallpaperByAppID" fullname="ScreenPlay::ScreenPlayManager::removeWallpaperByAppID" href="screenplay-screenplaymanager.html#removeWallpaperByAppID" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="195" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="bool" signature="bool removeWallpaperByAppID(const QString &amp;appID)">
                    <parameter type="const QString &amp;" name="appID" default=""/>
                </function>
                <function name="requestProjectSettingsAtMonitorIndex" fullname="ScreenPlay::ScreenPlayManager::requestProjectSettingsAtMonitorIndex" href="screenplay-screenplaymanager.html#requestProjectSettingsAtMonitorIndex" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="131" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Request a spesific json profile to display in the active wallpaper popup on the right" signature="void requestProjectSettingsAtMonitorIndex(const int index)">
                    <parameter type="const int" name="index" default=""/>
                </function>
                <function name="requestRaise" fullname="ScreenPlay::ScreenPlayManager::requestRaise" href="screenplay-screenplaymanager.html#requestRaise" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="96" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestRaise()"/>
                <function name="requestSaveProfiles" fullname="ScreenPlay::ScreenPlayManager::requestSaveProfiles" href="screenplay-screenplaymanager.html#requestSaveProfiles" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="95" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestSaveProfiles()"/>
                <function name="saveProfiles" fullname="ScreenPlay::ScreenPlayManager::saveProfiles" href="screenplay-screenplaymanager.html#saveProfiles" status="active" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="102" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Saves a given wallpaper newProfileObject to a profileName. We ignore the profileName argument because we currently only support one profile. Returns true if successfuly saved to profiles.json, otherwise false" signature="void saveProfiles()"/>
                <function name="setActiveWallpaperCounter" fullname="ScreenPlay::ScreenPlayManager::setActiveWallpaperCounter" href="screenplay-screenplaymanager.html#activeWallpaperCounter-prop" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="143" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="activeWallpaperCounter" type="void" signature="void setActiveWallpaperCounter(int activeWallpaperCounter)">
                    <parameter type="int" name="activeWallpaperCounter" default=""/>
                </function>
                <function name="setActiveWidgetsCounter" fullname="ScreenPlay::ScreenPlayManager::setActiveWidgetsCounter" href="screenplay-screenplaymanager.html#activeWidgetsCounter-prop" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="152" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="activeWidgetsCounter" type="void" signature="void setActiveWidgetsCounter(int activeWidgetsCounter)">
                    <parameter type="int" name="activeWidgetsCounter" default=""/>
                </function>
                <function name="setAllWallpaperValue" fullname="ScreenPlay::ScreenPlayManager::setAllWallpaperValue" href="screenplay-screenplaymanager.html#setAllWallpaperValue" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="133" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Convenient function to set a value at a given index and key for all wallaper. For exmaple used to mute all wallpaper" signature="void setAllWallpaperValue(const QString &amp;key, const QString &amp;value)">
                    <parameter type="const QString &amp;" name="key" default=""/>
                    <parameter type="const QString &amp;" name="value" default=""/>
                </function>
                <function name="setWallpaperValue" fullname="ScreenPlay::ScreenPlayManager::setWallpaperValue" href="screenplay-screenplaymanager.html#setWallpaperValue" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="141" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Sets a given value to a given key. The appID is used to identify the receiver socket" signature="void setWallpaperValue(const QString &amp;appID, const QString &amp;key, const QString &amp;value)">
                    <parameter type="const QString &amp;" name="appID" default=""/>
                    <parameter type="const QString &amp;" name="key" default=""/>
                    <parameter type="const QString &amp;" name="value" default=""/>
                </function>
                <function name="setWallpaperValueAtMonitorIndex" fullname="ScreenPlay::ScreenPlayManager::setWallpaperValueAtMonitorIndex" href="screenplay-screenplaymanager.html#setWallpaperValueAtMonitorIndex" status="active" access="public" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="132" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Set a wallpaper value at a given index and key" signature="void setWallpaperValueAtMonitorIndex(const int index, const QString &amp;key, const QString &amp;value)">
                    <parameter type="const int" name="index" default=""/>
                    <parameter type="const QString &amp;" name="key" default=""/>
                    <parameter type="const QString &amp;" name="value" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::ScreenPlayManager::QPrivateSignal" href="screenplay-screenplaymanager-qprivatesignal.html" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="61"/>
                <property name="activeWallpaperCounter" fullname="ScreenPlay::ScreenPlayManager::activeWallpaperCounter" href="screenplay-screenplaymanager.html#activeWallpaperCounter-prop" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="63">
                    <getter name="activeWallpaperCounter"/>
                    <setter name="setActiveWallpaperCounter"/>
                    <notifier name="activeWallpaperCounterChanged"/>
                </property>
                <property name="activeWidgetsCounter" fullname="ScreenPlay::ScreenPlayManager::activeWidgetsCounter" href="screenplay-screenplaymanager.html#activeWidgetsCounter-prop" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="64">
                    <getter name="activeWidgetsCounter"/>
                    <setter name="setActiveWidgetsCounter"/>
                    <notifier name="activeWidgetsCounterChanged"/>
                </property>
                <variable name="m_activeWallpaperCounter" fullname="ScreenPlay::ScreenPlayManager::m_activeWallpaperCounter" href="screenplay-screenplaymanager.html#m_activeWallpaperCounter-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="208" type="int" static="false"/>
                <variable name="m_activeWidgetsCounter" fullname="ScreenPlay::ScreenPlayManager::m_activeWidgetsCounter" href="screenplay-screenplaymanager.html#m_activeWidgetsCounter-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="209" type="int" static="false"/>
                <variable name="m_clients" fullname="ScreenPlay::ScreenPlayManager::m_clients" href="screenplay-screenplaymanager.html#m_clients-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="207" type="QVector&lt;std::shared_ptr&lt;SDKConnection&gt; &gt;" static="false"/>
                <variable name="m_globalVariables" fullname="ScreenPlay::ScreenPlayManager::m_globalVariables" href="screenplay-screenplaymanager.html#m_globalVariables-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="198" type="std::shared_ptr&lt;GlobalVariables&gt;" static="false"/>
                <variable name="m_isAnotherScreenPlayInstanceRunning" fullname="ScreenPlay::ScreenPlayManager::m_isAnotherScreenPlayInstanceRunning" href="screenplay-screenplaymanager.html#m_isAnotherScreenPlayInstanceRunning-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="211" type="bool" static="false"/>
                <variable name="m_monitorListModel" fullname="ScreenPlay::ScreenPlayManager::m_monitorListModel" href="screenplay-screenplaymanager.html#m_monitorListModel-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="199" type="std::shared_ptr&lt;MonitorListModel&gt;" static="false"/>
                <variable name="m_saveLimiter" fullname="ScreenPlay::ScreenPlayManager::m_saveLimiter" href="screenplay-screenplaymanager.html#m_saveLimiter-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="212" type="QTimer" static="false"/>
                <variable name="m_screenPlayWallpapers" fullname="ScreenPlay::ScreenPlayManager::m_screenPlayWallpapers" href="screenplay-screenplaymanager.html#m_screenPlayWallpapers-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="205" type="QVector&lt;std::shared_ptr&lt;ScreenPlayWallpaper&gt; &gt;" static="false"/>
                <variable name="m_screenPlayWidgets" fullname="ScreenPlay::ScreenPlayManager::m_screenPlayWidgets" href="screenplay-screenplaymanager.html#m_screenPlayWidgets-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="206" type="QVector&lt;std::shared_ptr&lt;ScreenPlayWidget&gt; &gt;" static="false"/>
                <variable name="m_server" fullname="ScreenPlay::ScreenPlayManager::m_server" href="screenplay-screenplaymanager.html#m_server-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="202" type="std::unique_ptr&lt;QLocalServer&gt;" static="false"/>
                <variable name="m_settings" fullname="ScreenPlay::ScreenPlayManager::m_settings" href="screenplay-screenplaymanager.html#m_settings-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="201" type="std::shared_ptr&lt;Settings&gt;" static="false"/>
                <variable name="m_telemetry" fullname="ScreenPlay::ScreenPlayManager::m_telemetry" href="screenplay-screenplaymanager.html#m_telemetry-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="200" type="int" static="false"/>
                <variable name="m_webSocketPort" fullname="ScreenPlay::ScreenPlayManager::m_webSocketPort" href="screenplay-screenplaymanager.html#m_webSocketPort-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="214" type="const quint16" static="false"/>
                <variable name="m_websocketServer" fullname="ScreenPlay::ScreenPlayManager::m_websocketServer" href="screenplay-screenplaymanager.html#m_websocketServer-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="203" type="int" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::ScreenPlayManager::staticMetaObject" href="screenplay-screenplaymanager.html#staticMetaObject-var" status="internal" access="private" location="screenplaymanager.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaymanager.h" lineno="61" type="const QMetaObject" static="true"/>
            </class>
            <class name="ScreenPlayWallpaper" fullname="ScreenPlay::ScreenPlayWallpaper" href="screenplay-screenplaywallpaper.html" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="51" documented="true" bases="QObject" module="ScreenPlay" brief="A Single Object to manage a Wallpaper">
                <function name="ScreenPlayWallpaper" fullname="ScreenPlay::ScreenPlayWallpaper::ScreenPlayWallpaper" href="screenplay-screenplaywallpaper.html#ScreenPlayWallpaper" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="70" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="ScreenPlayWallpaper()"/>
                <function name="ScreenPlayWallpaper" fullname="ScreenPlay::ScreenPlayWallpaper::ScreenPlayWallpaper" href="screenplay-screenplaywallpaper.html#ScreenPlayWallpaper-1" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="72" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" brief="Constructor for video Wallpaper" signature="ScreenPlayWallpaper(const QVector&lt;int&gt; &amp;screenNumber, const std::shared_ptr&lt;GlobalVariables&gt; &amp;globalVariables, const QString &amp;appID, const QString &amp;absolutePath, const QString &amp;previewImage, const QString &amp;file, const float volume, const float playbackRate, const FillMode::FillMode fillMode, const InstalledType::InstalledType type, const QJsonObject &amp;properties, const bool checkWallpaperVisible, QObject *parent)">
                    <parameter type="const QVector&lt;int&gt; &amp;" name="screenNumber" default=""/>
                    <parameter type="const std::shared_ptr&lt;GlobalVariables&gt; &amp;" name="globalVariables" default=""/>
                    <parameter type="const QString &amp;" name="appID" default=""/>
                    <parameter type="const QString &amp;" name="absolutePath" default=""/>
                    <parameter type="const QString &amp;" name="previewImage" default=""/>
                    <parameter type="const QString &amp;" name="file" default=""/>
                    <parameter type="const float" name="volume" default=""/>
                    <parameter type="const float" name="playbackRate" default=""/>
                    <parameter type="const FillMode::FillMode" name="fillMode" default=""/>
                    <parameter type="const InstalledType::InstalledType" name="type" default=""/>
                    <parameter type="const QJsonObject &amp;" name="properties" default=""/>
                    <parameter type="const bool" name="checkWallpaperVisible" default=""/>
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="absolutePath" fullname="ScreenPlay::ScreenPlayWallpaper::absolutePath" href="screenplay-screenplaywallpaper.html#absolutePath-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="128" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="absolutePath" type="QString" signature="QString absolutePath() const"/>
                <function name="absolutePathChanged" fullname="ScreenPlay::ScreenPlayWallpaper::absolutePathChanged" href="screenplay-screenplaywallpaper.html#absolutePath-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="160" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="absolutePath" type="void" signature="void absolutePathChanged(QString absolutePath)">
                    <parameter type="QString" name="absolutePath" default=""/>
                </function>
                <function name="appID" fullname="ScreenPlay::ScreenPlayWallpaper::appID" href="screenplay-screenplaywallpaper.html#appID-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="108" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="appID" type="QString" signature="QString appID() const"/>
                <function name="appIDChanged" fullname="ScreenPlay::ScreenPlayWallpaper::appIDChanged" href="screenplay-screenplaywallpaper.html#appID-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="156" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void appIDChanged(QString appID)">
                    <parameter type="QString" name="appID" default=""/>
                </function>
                <function name="file" fullname="ScreenPlay::ScreenPlayWallpaper::file" href="screenplay-screenplaywallpaper.html#file-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="118" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="file" type="QString" signature="QString file() const"/>
                <function name="fileChanged" fullname="ScreenPlay::ScreenPlayWallpaper::fileChanged" href="screenplay-screenplaywallpaper.html#file-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="158" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="file" type="void" signature="void fileChanged(QString file)">
                    <parameter type="QString" name="file" default=""/>
                </function>
                <function name="fillMode" fullname="ScreenPlay::ScreenPlayWallpaper::fillMode" href="screenplay-screenplaywallpaper.html#fillMode-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="123" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="fillMode" type="FillMode::FillMode" signature="FillMode::FillMode fillMode() const"/>
                <function name="fillModeChanged" fullname="ScreenPlay::ScreenPlayWallpaper::fillModeChanged" href="screenplay-screenplaywallpaper.html#fillMode-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="159" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="fillMode" type="void" signature="void fillModeChanged(FillMode::FillMode fillMode)">
                    <parameter type="FillMode::FillMode" name="fillMode" default=""/>
                </function>
                <function name="getActiveSettingsJson" fullname="ScreenPlay::ScreenPlayWallpaper::getActiveSettingsJson" href="screenplay-screenplaywallpaper.html#getActiveSettingsJson" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="96" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="QJsonObject" signature="QJsonObject getActiveSettingsJson()"/>
                <function name="getProjectSettingsListModel" fullname="ScreenPlay::ScreenPlayWallpaper::getProjectSettingsListModel" href="screenplay-screenplaywallpaper.html#getProjectSettingsListModel" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="143" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="ScreenPlay::ProjectSettingsListModel *" signature="ScreenPlay::ProjectSettingsListModel * getProjectSettingsListModel()"/>
                <function name="isLooping" fullname="ScreenPlay::ScreenPlayWallpaper::isLooping" href="screenplay-screenplaywallpaper.html#isLooping-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="138" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="isLooping" type="bool" signature="bool isLooping() const"/>
                <function name="isLoopingChanged" fullname="ScreenPlay::ScreenPlayWallpaper::isLoopingChanged" href="screenplay-screenplaywallpaper.html#isLooping-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="163" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="isLooping" type="void" signature="void isLoopingChanged(bool isLooping)">
                    <parameter type="bool" name="isLooping" default=""/>
                </function>
                <function name="metaObject" fullname="ScreenPlay::ScreenPlayWallpaper::metaObject" href="screenplay-screenplaywallpaper.html#metaObject" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="52" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="playbackRate" fullname="ScreenPlay::ScreenPlayWallpaper::playbackRate" href="screenplay-screenplaywallpaper.html#playbackRate-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="148" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="playbackRate" type="float" signature="float playbackRate() const"/>
                <function name="playbackRateChanged" fullname="ScreenPlay::ScreenPlayWallpaper::playbackRateChanged" href="screenplay-screenplaywallpaper.html#playbackRate-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="164" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="playbackRate" type="void" signature="void playbackRateChanged(float playbackRate)">
                    <parameter type="float" name="playbackRate" default=""/>
                </function>
                <function name="previewImage" fullname="ScreenPlay::ScreenPlayWallpaper::previewImage" href="screenplay-screenplaywallpaper.html#previewImage-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="103" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="previewImage" type="QString" signature="QString previewImage() const"/>
                <function name="previewImageChanged" fullname="ScreenPlay::ScreenPlayWallpaper::previewImageChanged" href="screenplay-screenplaywallpaper.html#previewImage-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="155" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="previewImage" type="void" signature="void previewImageChanged(QString previewImage)">
                    <parameter type="QString" name="previewImage" default=""/>
                </function>
                <function name="processError" fullname="ScreenPlay::ScreenPlayWallpaper::processError" href="screenplay-screenplaywallpaper.html#processError" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="171" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Prints the exit code error" signature="void processError(QProcess::ProcessError error)">
                    <parameter type="QProcess::ProcessError" name="error" default=""/>
                </function>
                <function name="processExit" fullname="ScreenPlay::ScreenPlayWallpaper::processExit" href="screenplay-screenplaywallpaper.html#processExit" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="170" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Prints the exit code if != 0" signature="void processExit(int exitCode, QProcess::ExitStatus exitStatus)">
                    <parameter type="int" name="exitCode" default=""/>
                    <parameter type="QProcess::ExitStatus" name="exitStatus" default=""/>
                </function>
                <function name="profileJsonObjectChanged" fullname="ScreenPlay::ScreenPlayWallpaper::profileJsonObjectChanged" href="screenplay-screenplaywallpaper.html#profileJsonObjectChanged" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="161" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void profileJsonObjectChanged(QJsonObject profileJsonObject)">
                    <parameter type="QJsonObject" name="profileJsonObject" default=""/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::ScreenPlayWallpaper::qt_metacall" href="screenplay-screenplaywallpaper.html#qt_metacall" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="52" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::ScreenPlayWallpaper::qt_metacast" href="screenplay-screenplaywallpaper.html#qt_metacast" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="52" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::ScreenPlayWallpaper::qt_static_metacall" href="screenplay-screenplaywallpaper.html#qt_static_metacall" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="52" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="replace" fullname="ScreenPlay::ScreenPlayWallpaper::replace" href="screenplay-screenplaywallpaper.html#replace" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="85" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void replace(const QString &amp;absolutePath, const QString &amp;previewImage, const QString &amp;file, const float volume, const FillMode::FillMode fillMode, const InstalledType::InstalledType type, const bool checkWallpaperVisible)">
                    <parameter type="const QString &amp;" name="absolutePath" default=""/>
                    <parameter type="const QString &amp;" name="previewImage" default=""/>
                    <parameter type="const QString &amp;" name="file" default=""/>
                    <parameter type="const float" name="volume" default=""/>
                    <parameter type="const FillMode::FillMode" name="fillMode" default=""/>
                    <parameter type="const InstalledType::InstalledType" name="type" default=""/>
                    <parameter type="const bool" name="checkWallpaperVisible" default=""/>
                </function>
                <function name="requestClose" fullname="ScreenPlay::ScreenPlayWallpaper::requestClose" href="screenplay-screenplaywallpaper.html#requestClose" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="167" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestClose(const QString &amp;appID)">
                    <parameter type="const QString &amp;" name="appID" default=""/>
                </function>
                <function name="requestSave" fullname="ScreenPlay::ScreenPlayWallpaper::requestSave" href="screenplay-screenplaywallpaper.html#requestSave" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="166" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestSave()"/>
                <function name="screenNumber" fullname="ScreenPlay::ScreenPlayWallpaper::screenNumber" href="screenplay-screenplaywallpaper.html#screenNumber-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="98" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="screenNumber" type="QVector&lt;int&gt;" signature="QVector&lt;int&gt; screenNumber() const"/>
                <function name="screenNumberChanged" fullname="ScreenPlay::ScreenPlayWallpaper::screenNumberChanged" href="screenplay-screenplaywallpaper.html#screenNumber-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="154" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="screenNumber" type="void" signature="void screenNumberChanged(QVector&lt;int&gt; screenNumber)">
                    <parameter type="QVector&lt;int&gt;" name="screenNumber" default=""/>
                </function>
                <function name="setAbsolutePath" fullname="ScreenPlay::ScreenPlayWallpaper::setAbsolutePath" href="screenplay-screenplaywallpaper.html#absolutePath-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="228" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="absolutePath" type="void" signature="void setAbsolutePath(QString absolutePath)">
                    <parameter type="QString" name="absolutePath" default=""/>
                </function>
                <function name="setAppID" fullname="ScreenPlay::ScreenPlayWallpaper::setAppID" href="screenplay-screenplaywallpaper.html#appID-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="192" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void setAppID(QString appID)">
                    <parameter type="QString" name="appID" default=""/>
                </function>
                <function name="setFile" fullname="ScreenPlay::ScreenPlayWallpaper::setFile" href="screenplay-screenplaywallpaper.html#file-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="210" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="file" type="void" signature="void setFile(QString file)">
                    <parameter type="QString" name="file" default=""/>
                </function>
                <function name="setFillMode" fullname="ScreenPlay::ScreenPlayWallpaper::setFillMode" href="screenplay-screenplaywallpaper.html#fillMode-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="219" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="fillMode" type="void" signature="void setFillMode(FillMode::FillMode fillMode)">
                    <parameter type="FillMode::FillMode" name="fillMode" default=""/>
                </function>
                <function name="setIsLooping" fullname="ScreenPlay::ScreenPlayWallpaper::setIsLooping" href="screenplay-screenplaywallpaper.html#isLooping-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="249" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="isLooping" type="void" signature="void setIsLooping(bool isLooping)">
                    <parameter type="bool" name="isLooping" default=""/>
                </function>
                <function name="setPlaybackRate" fullname="ScreenPlay::ScreenPlayWallpaper::setPlaybackRate" href="screenplay-screenplaywallpaper.html#playbackRate-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="258" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="playbackRate" type="void" signature="void setPlaybackRate(float playbackRate)">
                    <parameter type="float" name="playbackRate" default=""/>
                </function>
                <function name="setPreviewImage" fullname="ScreenPlay::ScreenPlayWallpaper::setPreviewImage" href="screenplay-screenplaywallpaper.html#previewImage-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="183" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="previewImage" type="void" signature="void setPreviewImage(QString previewImage)">
                    <parameter type="QString" name="previewImage" default=""/>
                </function>
                <function name="setSDKConnection" fullname="ScreenPlay::ScreenPlayWallpaper::setSDKConnection" href="screenplay-screenplaywallpaper.html#setSDKConnection" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="94" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setSDKConnection(const std::shared_ptr&lt;SDKConnection&gt; &amp;connection)">
                    <parameter type="const std::shared_ptr&lt;SDKConnection&gt; &amp;" name="connection" default=""/>
                </function>
                <function name="setScreenNumber" fullname="ScreenPlay::ScreenPlayWallpaper::setScreenNumber" href="screenplay-screenplaywallpaper.html#screenNumber-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="174" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="screenNumber" type="void" signature="void setScreenNumber(QVector&lt;int&gt; screenNumber)">
                    <parameter type="QVector&lt;int&gt;" name="screenNumber" default=""/>
                </function>
                <function name="setType" fullname="ScreenPlay::ScreenPlayWallpaper::setType" href="screenplay-screenplaywallpaper.html#type-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="201" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void setType(InstalledType::InstalledType type)">
                    <parameter type="InstalledType::InstalledType" name="type" default=""/>
                </function>
                <function name="setVolume" fullname="ScreenPlay::ScreenPlayWallpaper::setVolume" href="screenplay-screenplaywallpaper.html#volume-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="237" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="volume" type="void" signature="void setVolume(float volume)">
                    <parameter type="float" name="volume" default=""/>
                </function>
                <function name="setWallpaperValue" fullname="ScreenPlay::ScreenPlayWallpaper::setWallpaperValue" href="screenplay-screenplaywallpaper.html#setWallpaperValue" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="172" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setWallpaperValue(const QString &amp;key, const QString &amp;value, const bool save)">
                    <parameter type="const QString &amp;" name="key" default=""/>
                    <parameter type="const QString &amp;" name="value" default=""/>
                    <parameter type="const bool" name="save" default="false"/>
                </function>
                <function name="type" fullname="ScreenPlay::ScreenPlayWallpaper::type" href="screenplay-screenplaywallpaper.html#type-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="113" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="type" type="InstalledType::InstalledType" signature="InstalledType::InstalledType type() const"/>
                <function name="typeChanged" fullname="ScreenPlay::ScreenPlayWallpaper::typeChanged" href="screenplay-screenplaywallpaper.html#type-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="157" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void typeChanged(InstalledType::InstalledType type)">
                    <parameter type="InstalledType::InstalledType" name="type" default=""/>
                </function>
                <function name="volume" fullname="ScreenPlay::ScreenPlayWallpaper::volume" href="screenplay-screenplaywallpaper.html#volume-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="133" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="volume" type="float" signature="float volume() const"/>
                <function name="volumeChanged" fullname="ScreenPlay::ScreenPlayWallpaper::volumeChanged" href="screenplay-screenplaywallpaper.html#volume-prop" status="active" access="public" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="162" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="volume" type="void" signature="void volumeChanged(float volume)">
                    <parameter type="float" name="volume" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::ScreenPlayWallpaper::QPrivateSignal" href="screenplay-screenplaywallpaper-qprivatesignal.html" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="52"/>
                <property name="absolutePath" fullname="ScreenPlay::ScreenPlayWallpaper::absolutePath" href="screenplay-screenplaywallpaper.html#absolutePath-prop" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="62">
                    <getter name="absolutePath"/>
                    <setter name="setAbsolutePath"/>
                    <notifier name="absolutePathChanged"/>
                </property>
                <property name="appID" fullname="ScreenPlay::ScreenPlayWallpaper::appID" href="screenplay-screenplaywallpaper.html#appID-prop" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="64">
                    <getter name="appID"/>
                    <setter name="setAppID"/>
                    <notifier name="appIDChanged"/>
                </property>
                <property name="file" fullname="ScreenPlay::ScreenPlayWallpaper::file" href="screenplay-screenplaywallpaper.html#file-prop" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="61">
                    <getter name="file"/>
                    <setter name="setFile"/>
                    <notifier name="fileChanged"/>
                </property>
                <property name="fillMode" fullname="ScreenPlay::ScreenPlayWallpaper::fillMode" href="screenplay-screenplaywallpaper.html#fillMode-prop" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="66">
                    <getter name="fillMode"/>
                    <setter name="setFillMode"/>
                    <notifier name="fillModeChanged"/>
                </property>
                <property name="isLooping" fullname="ScreenPlay::ScreenPlayWallpaper::isLooping" href="screenplay-screenplaywallpaper.html#isLooping-prop" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="59">
                    <getter name="isLooping"/>
                    <setter name="setIsLooping"/>
                    <notifier name="isLoopingChanged"/>
                </property>
                <property name="playbackRate" fullname="ScreenPlay::ScreenPlayWallpaper::playbackRate" href="screenplay-screenplaywallpaper.html#playbackRate-prop" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="57">
                    <getter name="playbackRate"/>
                    <setter name="setPlaybackRate"/>
                    <notifier name="playbackRateChanged"/>
                </property>
                <property name="previewImage" fullname="ScreenPlay::ScreenPlayWallpaper::previewImage" href="screenplay-screenplaywallpaper.html#previewImage-prop" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="63">
                    <getter name="previewImage"/>
                    <setter name="setPreviewImage"/>
                    <notifier name="previewImageChanged"/>
                </property>
                <property name="screenNumber" fullname="ScreenPlay::ScreenPlayWallpaper::screenNumber" href="screenplay-screenplaywallpaper.html#screenNumber-prop" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="54">
                    <getter name="screenNumber"/>
                    <setter name="setScreenNumber"/>
                    <notifier name="screenNumberChanged"/>
                </property>
                <property name="type" fullname="ScreenPlay::ScreenPlayWallpaper::type" href="screenplay-screenplaywallpaper.html#type-prop" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="67">
                    <getter name="type"/>
                    <setter name="setType"/>
                    <notifier name="typeChanged"/>
                </property>
                <property name="volume" fullname="ScreenPlay::ScreenPlayWallpaper::volume" href="screenplay-screenplaywallpaper.html#volume-prop" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="56">
                    <getter name="volume"/>
                    <setter name="setVolume"/>
                    <notifier name="volumeChanged"/>
                </property>
                <variable name="m_absolutePath" fullname="ScreenPlay::ScreenPlayWallpaper::m_absolutePath" href="screenplay-screenplaywallpaper.html#m_absolutePath-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="278" type="QString" static="false"/>
                <variable name="m_appID" fullname="ScreenPlay::ScreenPlayWallpaper::m_appID" href="screenplay-screenplaywallpaper.html#m_appID-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="277" type="QString" static="false"/>
                <variable name="m_connection" fullname="ScreenPlay::ScreenPlayWallpaper::m_connection" href="screenplay-screenplaywallpaper.html#m_connection-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="269" type="std::shared_ptr&lt;SDKConnection&gt;" static="false"/>
                <variable name="m_file" fullname="ScreenPlay::ScreenPlayWallpaper::m_file" href="screenplay-screenplaywallpaper.html#m_file-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="279" type="QString" static="false"/>
                <variable name="m_fillMode" fullname="ScreenPlay::ScreenPlayWallpaper::m_fillMode" href="screenplay-screenplaywallpaper.html#m_fillMode-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="276" type="FillMode::FillMode" static="false"/>
                <variable name="m_globalVariables" fullname="ScreenPlay::ScreenPlayWallpaper::m_globalVariables" href="screenplay-screenplaywallpaper.html#m_globalVariables-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="268" type="const std::shared_ptr&lt;GlobalVariables&gt;" static="false"/>
                <variable name="m_isLooping" fullname="ScreenPlay::ScreenPlayWallpaper::m_isLooping" href="screenplay-screenplaywallpaper.html#m_isLooping-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="281" type="bool" static="false"/>
                <variable name="m_pingAliveTimer" fullname="ScreenPlay::ScreenPlayWallpaper::m_pingAliveTimer" href="screenplay-screenplaywallpaper.html#m_pingAliveTimer-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="283" type="QTimer" static="false"/>
                <variable name="m_playbackRate" fullname="ScreenPlay::ScreenPlayWallpaper::m_playbackRate" href="screenplay-screenplaywallpaper.html#m_playbackRate-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="282" type="float" static="false"/>
                <variable name="m_previewImage" fullname="ScreenPlay::ScreenPlayWallpaper::m_previewImage" href="screenplay-screenplaywallpaper.html#m_previewImage-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="274" type="QString" static="false"/>
                <variable name="m_process" fullname="ScreenPlay::ScreenPlayWallpaper::m_process" href="screenplay-screenplaywallpaper.html#m_process-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="273" type="QProcess" static="false"/>
                <variable name="m_projectSettingsListModel" fullname="ScreenPlay::ScreenPlayWallpaper::m_projectSettingsListModel" href="screenplay-screenplaywallpaper.html#m_projectSettingsListModel-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="271" type="ScreenPlay::ProjectSettingsListModel" static="false"/>
                <variable name="m_screenNumber" fullname="ScreenPlay::ScreenPlayWallpaper::m_screenNumber" href="screenplay-screenplaywallpaper.html#m_screenNumber-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="272" type="QVector&lt;int&gt;" static="false"/>
                <variable name="m_type" fullname="ScreenPlay::ScreenPlayWallpaper::m_type" href="screenplay-screenplaywallpaper.html#m_type-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="275" type="InstalledType::InstalledType" static="false"/>
                <variable name="m_volume" fullname="ScreenPlay::ScreenPlayWallpaper::m_volume" href="screenplay-screenplaywallpaper.html#m_volume-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="280" type="float" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::ScreenPlayWallpaper::staticMetaObject" href="screenplay-screenplaywallpaper.html#staticMetaObject-var" status="internal" access="private" location="screenplaywallpaper.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywallpaper.h" lineno="52" type="const QMetaObject" static="true"/>
            </class>
            <class name="ScreenPlayWidget" fullname="ScreenPlay::ScreenPlayWidget" href="screenplay-screenplaywidget.html" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="53" documented="true" bases="QObject" module="ScreenPlay" brief="A Single Object to manage a Widget">
                <function name="ScreenPlayWidget" fullname="ScreenPlay::ScreenPlayWidget::ScreenPlayWidget" href="screenplay-screenplaywidget.html#ScreenPlayWidget" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="63" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" brief="Constructor" signature="ScreenPlayWidget(const QString &amp;appID, const std::shared_ptr&lt;GlobalVariables&gt; &amp;globalVariables, const QPoint &amp;position, const QString &amp;absolutePath, const QString &amp;previewImage, const QJsonObject &amp;properties, const InstalledType::InstalledType type)">
                    <parameter type="const QString &amp;" name="appID" default=""/>
                    <parameter type="const std::shared_ptr&lt;GlobalVariables&gt; &amp;" name="globalVariables" default=""/>
                    <parameter type="const QPoint &amp;" name="position" default=""/>
                    <parameter type="const QString &amp;" name="absolutePath" default=""/>
                    <parameter type="const QString &amp;" name="previewImage" default=""/>
                    <parameter type="const QJsonObject &amp;" name="properties" default=""/>
                    <parameter type="const InstalledType::InstalledType" name="type" default=""/>
                </function>
                <function name="ScreenPlayWidget" fullname="ScreenPlay::ScreenPlayWidget::ScreenPlayWidget" href="screenplay-screenplaywidget.html#ScreenPlayWidget-1" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="70" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" signature="ScreenPlayWidget()"/>
                <function name="absolutePath" fullname="ScreenPlay::ScreenPlayWidget::absolutePath" href="screenplay-screenplaywidget.html#absolutePath-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="82" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="absolutePath" type="QString" signature="QString absolutePath() const"/>
                <function name="absolutePathChanged" fullname="ScreenPlay::ScreenPlayWidget::absolutePathChanged" href="screenplay-screenplaywidget.html#absolutePath-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="157" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="absolutePath" type="void" signature="void absolutePathChanged(QString absolutePath)">
                    <parameter type="QString" name="absolutePath" default=""/>
                </function>
                <function name="appID" fullname="ScreenPlay::ScreenPlayWidget::appID" href="screenplay-screenplaywidget.html#appID-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="87" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="appID" type="QString" signature="QString appID() const"/>
                <function name="appIDChanged" fullname="ScreenPlay::ScreenPlayWidget::appIDChanged" href="screenplay-screenplaywidget.html#appID-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="155" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void appIDChanged(QString appID)">
                    <parameter type="QString" name="appID" default=""/>
                </function>
                <function name="getActiveSettingsJson" fullname="ScreenPlay::ScreenPlayWidget::getActiveSettingsJson" href="screenplay-screenplaywidget.html#getActiveSettingsJson" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="105" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="QJsonObject" signature="QJsonObject getActiveSettingsJson()"/>
                <function name="getProjectSettingsListModel" fullname="ScreenPlay::ScreenPlayWidget::getProjectSettingsListModel" href="screenplay-screenplaywidget.html#getProjectSettingsListModel" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="99" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="ScreenPlay::ProjectSettingsListModel *" signature="ScreenPlay::ProjectSettingsListModel * getProjectSettingsListModel()"/>
                <function name="metaObject" fullname="ScreenPlay::ScreenPlayWidget::metaObject" href="screenplay-screenplaywidget.html#metaObject" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="54" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="position" fullname="ScreenPlay::ScreenPlayWidget::position" href="screenplay-screenplaywidget.html#position-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="77" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="position" type="QPoint" signature="QPoint position() const"/>
                <function name="positionChanged" fullname="ScreenPlay::ScreenPlayWidget::positionChanged" href="screenplay-screenplaywidget.html#position-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="154" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="position" type="void" signature="void positionChanged(QPoint position)">
                    <parameter type="QPoint" name="position" default=""/>
                </function>
                <function name="previewImage" fullname="ScreenPlay::ScreenPlayWidget::previewImage" href="screenplay-screenplaywidget.html#previewImage-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="72" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="previewImage" type="QString" signature="QString previewImage() const"/>
                <function name="previewImageChanged" fullname="ScreenPlay::ScreenPlayWidget::previewImageChanged" href="screenplay-screenplaywidget.html#previewImage-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="153" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="previewImage" type="void" signature="void previewImageChanged(QString previewImage)">
                    <parameter type="QString" name="previewImage" default=""/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::ScreenPlayWidget::qt_metacall" href="screenplay-screenplaywidget.html#qt_metacall" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="54" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::ScreenPlayWidget::qt_metacast" href="screenplay-screenplaywidget.html#qt_metacast" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="54" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::ScreenPlayWidget::qt_static_metacall" href="screenplay-screenplaywidget.html#qt_static_metacall" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="54" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="requestClose" fullname="ScreenPlay::ScreenPlayWidget::requestClose" href="screenplay-screenplaywidget.html#requestClose" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="160" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestClose(const QString &amp;appID)">
                    <parameter type="const QString &amp;" name="appID" default=""/>
                </function>
                <function name="requestSave" fullname="ScreenPlay::ScreenPlayWidget::requestSave" href="screenplay-screenplaywidget.html#requestSave" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="159" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestSave()"/>
                <function name="setAbsolutePath" fullname="ScreenPlay::ScreenPlayWidget::setAbsolutePath" href="screenplay-screenplaywidget.html#absolutePath-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="143" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="absolutePath" type="void" signature="void setAbsolutePath(QString absolutePath)">
                    <parameter type="QString" name="absolutePath" default=""/>
                </function>
                <function name="setAppID" fullname="ScreenPlay::ScreenPlayWidget::setAppID" href="screenplay-screenplaywidget.html#appID-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="125" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void setAppID(QString appID)">
                    <parameter type="QString" name="appID" default=""/>
                </function>
                <function name="setPosition" fullname="ScreenPlay::ScreenPlayWidget::setPosition" href="screenplay-screenplaywidget.html#position-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="116" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="position" type="void" signature="void setPosition(QPoint position)">
                    <parameter type="QPoint" name="position" default=""/>
                </function>
                <function name="setPreviewImage" fullname="ScreenPlay::ScreenPlayWidget::setPreviewImage" href="screenplay-screenplaywidget.html#previewImage-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="107" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="previewImage" type="void" signature="void setPreviewImage(QString previewImage)">
                    <parameter type="QString" name="previewImage" default=""/>
                </function>
                <function name="setSDKConnection" fullname="ScreenPlay::ScreenPlayWidget::setSDKConnection" href="screenplay-screenplaywidget.html#setSDKConnection" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="97" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setSDKConnection(const std::shared_ptr&lt;SDKConnection&gt; &amp;connection)">
                    <parameter type="const std::shared_ptr&lt;SDKConnection&gt; &amp;" name="connection" default=""/>
                </function>
                <function name="setType" fullname="ScreenPlay::ScreenPlayWidget::setType" href="screenplay-screenplaywidget.html#type-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="134" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void setType(InstalledType::InstalledType type)">
                    <parameter type="InstalledType::InstalledType" name="type" default=""/>
                </function>
                <function name="type" fullname="ScreenPlay::ScreenPlayWidget::type" href="screenplay-screenplaywidget.html#type-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="92" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="type" type="InstalledType::InstalledType" signature="InstalledType::InstalledType type() const"/>
                <function name="typeChanged" fullname="ScreenPlay::ScreenPlayWidget::typeChanged" href="screenplay-screenplaywidget.html#type-prop" status="active" access="public" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="156" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void typeChanged(InstalledType::InstalledType type)">
                    <parameter type="InstalledType::InstalledType" name="type" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::ScreenPlayWidget::QPrivateSignal" href="screenplay-screenplaywidget-qprivatesignal.html" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="54"/>
                <property name="absolutePath" fullname="ScreenPlay::ScreenPlayWidget::absolutePath" href="screenplay-screenplaywidget.html#absolutePath-prop" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="56">
                    <getter name="absolutePath"/>
                    <setter name="setAbsolutePath"/>
                    <notifier name="absolutePathChanged"/>
                </property>
                <property name="appID" fullname="ScreenPlay::ScreenPlayWidget::appID" href="screenplay-screenplaywidget.html#appID-prop" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="59">
                    <getter name="appID"/>
                    <setter name="setAppID"/>
                    <notifier name="appIDChanged"/>
                </property>
                <property name="position" fullname="ScreenPlay::ScreenPlayWidget::position" href="screenplay-screenplaywidget.html#position-prop" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="58">
                    <getter name="position"/>
                    <setter name="setPosition"/>
                    <notifier name="positionChanged"/>
                </property>
                <property name="previewImage" fullname="ScreenPlay::ScreenPlayWidget::previewImage" href="screenplay-screenplaywidget.html#previewImage-prop" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="57">
                    <getter name="previewImage"/>
                    <setter name="setPreviewImage"/>
                    <notifier name="previewImageChanged"/>
                </property>
                <property name="type" fullname="ScreenPlay::ScreenPlayWidget::type" href="screenplay-screenplaywidget.html#type-prop" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="60">
                    <getter name="type"/>
                    <setter name="setType"/>
                    <notifier name="typeChanged"/>
                </property>
                <variable name="m_absolutePath" fullname="ScreenPlay::ScreenPlayWidget::m_absolutePath" href="screenplay-screenplaywidget.html#m_absolutePath-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="172" type="QString" static="false"/>
                <variable name="m_appID" fullname="ScreenPlay::ScreenPlayWidget::m_appID" href="screenplay-screenplaywidget.html#m_appID-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="169" type="QString" static="false"/>
                <variable name="m_connection" fullname="ScreenPlay::ScreenPlayWidget::m_connection" href="screenplay-screenplaywidget.html#m_connection-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="164" type="std::shared_ptr&lt;SDKConnection&gt;" static="false"/>
                <variable name="m_globalVariables" fullname="ScreenPlay::ScreenPlayWidget::m_globalVariables" href="screenplay-screenplaywidget.html#m_globalVariables-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="163" type="const std::shared_ptr&lt;GlobalVariables&gt;" static="false"/>
                <variable name="m_pingAliveTimer" fullname="ScreenPlay::ScreenPlayWidget::m_pingAliveTimer" href="screenplay-screenplaywidget.html#m_pingAliveTimer-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="173" type="QTimer" static="false"/>
                <variable name="m_position" fullname="ScreenPlay::ScreenPlayWidget::m_position" href="screenplay-screenplaywidget.html#m_position-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="170" type="QPoint" static="false"/>
                <variable name="m_previewImage" fullname="ScreenPlay::ScreenPlayWidget::m_previewImage" href="screenplay-screenplaywidget.html#m_previewImage-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="168" type="QString" static="false"/>
                <variable name="m_process" fullname="ScreenPlay::ScreenPlayWidget::m_process" href="screenplay-screenplaywidget.html#m_process-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="167" type="QProcess" static="false"/>
                <variable name="m_projectSettingsListModel" fullname="ScreenPlay::ScreenPlayWidget::m_projectSettingsListModel" href="screenplay-screenplaywidget.html#m_projectSettingsListModel-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="165" type="ScreenPlay::ProjectSettingsListModel" static="false"/>
                <variable name="m_type" fullname="ScreenPlay::ScreenPlayWidget::m_type" href="screenplay-screenplaywidget.html#m_type-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="171" type="InstalledType::InstalledType" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::ScreenPlayWidget::staticMetaObject" href="screenplay-screenplaywidget.html#staticMetaObject-var" status="internal" access="private" location="screenplaywidget.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/screenplaywidget.h" lineno="54" type="const QMetaObject" static="true"/>
            </class>
            <namespace name="SearchType" fullname="ScreenPlay::SearchType" href="screenplay-searchtype-sub-screenplay.html" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="73">
                <function name="qt_getEnumMetaObject" fullname="ScreenPlay::SearchType::qt_getEnumMetaObject" href="screenplay-searchtype-sub-screenplay.html#qt_getEnumMetaObject" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="83" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(ScreenPlay::SearchType::SearchType)">
                    <parameter type="ScreenPlay::SearchType::SearchType" name="" default=""/>
                </function>
                <function name="qt_getEnumName" fullname="ScreenPlay::SearchType::qt_getEnumName" href="screenplay-searchtype-sub-screenplay.html#qt_getEnumName" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="83" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(ScreenPlay::SearchType::SearchType)">
                    <parameter type="ScreenPlay::SearchType::SearchType" name="" default=""/>
                </function>
                <enum name="SearchType" fullname="ScreenPlay::SearchType::SearchType" href="screenplay-searchtype-sub-screenplay.html#SearchType-enum" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="76" scoped="true">
                    <value name="All" value="0"/>
                    <value name="Text" value="1"/>
                    <value name="Scene" value="2"/>
                    <value name="Wallpaper" value="3"/>
                    <value name="Widget" value="4"/>
                </enum>
                <variable name="staticMetaObject" fullname="ScreenPlay::SearchType::staticMetaObject" href="screenplay-searchtype-sub-screenplay.html#staticMetaObject-var" status="internal" access="private" location="globalvariables.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/globalvariables.h" lineno="74" type="const QMetaObject" static="false"/>
            </namespace>
            <class name="Settings" fullname="ScreenPlay::Settings" href="screenplay-settings.html" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="76" documented="true" bases="QObject" module="ScreenPlay" brief="Global settings class for reading and writing settings">
                <function name="Settings" fullname="ScreenPlay::Settings::Settings" href="screenplay-settings.html#Settings" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="97" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" brief="Constructor and sets up:" signature="Settings(const std::shared_ptr&lt;GlobalVariables&gt; &amp;globalVariables, QObject *parent)">
                    <parameter type="const std::shared_ptr&lt;GlobalVariables&gt; &amp;" name="globalVariables" default=""/>
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="anonymousTelemetry" fullname="ScreenPlay::Settings::anonymousTelemetry" href="screenplay-settings.html#anonymousTelemetry-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="170" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="anonymousTelemetry" type="bool" signature="bool anonymousTelemetry() const"/>
                <function name="anonymousTelemetryChanged" fullname="ScreenPlay::Settings::anonymousTelemetryChanged" href="screenplay-settings.html#anonymousTelemetry-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="225" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="anonymousTelemetry" type="void" signature="void anonymousTelemetryChanged(bool anonymousTelemetry)">
                    <parameter type="bool" name="anonymousTelemetry" default=""/>
                </function>
                <function name="autostart" fullname="ScreenPlay::Settings::autostart" href="screenplay-settings.html#autostart-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="145" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="autostart" type="bool" signature="bool autostart() const"/>
                <function name="autostartChanged" fullname="ScreenPlay::Settings::autostartChanged" href="screenplay-settings.html#autostart-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="217" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="autostart" type="void" signature="void autostartChanged(bool autostart)">
                    <parameter type="bool" name="autostart" default=""/>
                </function>
                <function name="checkWallpaperVisible" fullname="ScreenPlay::Settings::checkWallpaperVisible" href="screenplay-settings.html#checkWallpaperVisible-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="175" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="checkWallpaperVisible" type="bool" signature="bool checkWallpaperVisible() const"/>
                <function name="checkWallpaperVisibleChanged" fullname="ScreenPlay::Settings::checkWallpaperVisibleChanged" href="screenplay-settings.html#checkWallpaperVisible-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="226" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="checkWallpaperVisible" type="void" signature="void checkWallpaperVisibleChanged(bool checkWallpaperVisible)">
                    <parameter type="bool" name="checkWallpaperVisible" default=""/>
                </function>
                <function name="decoder" fullname="ScreenPlay::Settings::decoder" href="screenplay-settings.html#decoder-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="155" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="decoder" type="QString" signature="QString decoder() const"/>
                <function name="decoderChanged" fullname="ScreenPlay::Settings::decoderChanged" href="screenplay-settings.html#decoder-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="220" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="decoder" type="void" signature="void decoderChanged(QString decoder)">
                    <parameter type="QString" name="decoder" default=""/>
                </function>
                <function name="desktopEnvironment" fullname="ScreenPlay::Settings::desktopEnvironment" href="screenplay-settings.html#desktopEnvironment-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="208" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="desktopEnvironment" type="ScreenPlay::Settings::DesktopEnvironment" signature="ScreenPlay::Settings::DesktopEnvironment desktopEnvironment() const"/>
                <function name="desktopEnvironmentChanged" fullname="ScreenPlay::Settings::desktopEnvironmentChanged" href="screenplay-settings.html#desktopEnvironment-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="232" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="desktopEnvironment" type="void" signature="void desktopEnvironmentChanged(ScreenPlay::Settings::DesktopEnvironment desktopEnvironment)">
                    <parameter type="ScreenPlay::Settings::DesktopEnvironment" name="desktopEnvironment" default=""/>
                </function>
                <function name="font" fullname="ScreenPlay::Settings::font" href="screenplay-settings.html#font-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="193" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="font" type="QString" signature="QString font() const"/>
                <function name="fontChanged" fullname="ScreenPlay::Settings::fontChanged" href="screenplay-settings.html#font-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="229" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="font" type="void" signature="void fontChanged(QString font)">
                    <parameter type="QString" name="font" default=""/>
                </function>
                <function name="getOfflineMode" fullname="ScreenPlay::Settings::getOfflineMode" href="screenplay-settings.html#getOfflineMode" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="140" meta="plain" virtual="non" const="true" static="false" final="false" override="false" type="bool" signature="bool getOfflineMode() const"/>
                <function name="gitBuildHash" fullname="ScreenPlay::Settings::gitBuildHash" href="screenplay-settings.html#gitBuildHash-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="160" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="gitBuildHash" type="QString" signature="QString gitBuildHash() const"/>
                <function name="gitBuildHashChanged" fullname="ScreenPlay::Settings::gitBuildHashChanged" href="screenplay-settings.html#gitBuildHash-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="223" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="gitBuildHash" type="void" signature="void gitBuildHashChanged(QString gitBuildHash)">
                    <parameter type="QString" name="gitBuildHash" default=""/>
                </function>
                <function name="hasWorkshopBannerSeenChanged" fullname="ScreenPlay::Settings::hasWorkshopBannerSeenChanged" href="screenplay-settings.html#hasWorkshopBannerSeenChanged" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="219" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void hasWorkshopBannerSeenChanged(bool hasWorkshopBannerSeen)">
                    <parameter type="bool" name="hasWorkshopBannerSeen" default=""/>
                </function>
                <function name="highPriorityStart" fullname="ScreenPlay::Settings::highPriorityStart" href="screenplay-settings.html#highPriorityStart-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="150" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="highPriorityStart" type="bool" signature="bool highPriorityStart() const"/>
                <function name="highPriorityStartChanged" fullname="ScreenPlay::Settings::highPriorityStartChanged" href="screenplay-settings.html#highPriorityStart-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="218" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="highPriorityStart" type="void" signature="void highPriorityStartChanged(bool highPriorityStart)">
                    <parameter type="bool" name="highPriorityStart" default=""/>
                </function>
                <function name="language" fullname="ScreenPlay::Settings::language" href="screenplay-settings.html#language-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="185" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="language" type="ScreenPlay::Settings::Language" signature="ScreenPlay::Settings::Language language() const"/>
                <function name="languageChanged" fullname="ScreenPlay::Settings::languageChanged" href="screenplay-settings.html#language-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="228" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="language" type="void" signature="void languageChanged(ScreenPlay::Settings::Language language)">
                    <parameter type="ScreenPlay::Settings::Language" name="language" default=""/>
                </function>
                <function name="metaObject" fullname="ScreenPlay::Settings::metaObject" href="screenplay-settings.html#metaObject" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="77" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="offlineMode" fullname="ScreenPlay::Settings::offlineMode" href="screenplay-settings.html#offlineMode-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="135" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="offlineMode" type="bool" signature="bool offlineMode() const"/>
                <function name="offlineModeChanged" fullname="ScreenPlay::Settings::offlineModeChanged" href="screenplay-settings.html#offlineMode-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="222" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="offlineMode" type="void" signature="void offlineModeChanged(bool offlineMode)">
                    <parameter type="bool" name="offlineMode" default=""/>
                </function>
                <function name="qt_getEnumMetaObject" href="screenplay-settings.html#qt_getEnumMetaObject" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="126" related="12" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(ScreenPlay::Settings::Language)">
                    <parameter type="ScreenPlay::Settings::Language" name="" default=""/>
                </function>
                <function name="qt_getEnumMetaObject" href="screenplay-settings.html#qt_getEnumMetaObject-1" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="133" related="13" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(ScreenPlay::Settings::Theme)">
                    <parameter type="ScreenPlay::Settings::Theme" name="" default=""/>
                </function>
                <function name="qt_getEnumName" href="screenplay-settings.html#qt_getEnumName" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="126" related="14" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(ScreenPlay::Settings::Language)">
                    <parameter type="ScreenPlay::Settings::Language" name="" default=""/>
                </function>
                <function name="qt_getEnumName" href="screenplay-settings.html#qt_getEnumName-1" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="133" related="15" meta="plain" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="const char *" signature="const char * qt_getEnumName(ScreenPlay::Settings::Theme)">
                    <parameter type="ScreenPlay::Settings::Theme" name="" default=""/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::Settings::qt_metacall" href="screenplay-settings.html#qt_metacall" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="77" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::Settings::qt_metacast" href="screenplay-settings.html#qt_metacast" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="77" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::Settings::qt_static_metacall" href="screenplay-settings.html#qt_static_metacall" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="77" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="requestRetranslation" fullname="ScreenPlay::Settings::requestRetranslation" href="screenplay-settings.html#requestRetranslation" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="214" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestRetranslation()"/>
                <function name="resetInstalledListmodel" fullname="ScreenPlay::Settings::resetInstalledListmodel" href="screenplay-settings.html#resetInstalledListmodel" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="215" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void resetInstalledListmodel()"/>
                <function name="restoreDefault" fullname="ScreenPlay::Settings::restoreDefault" href="screenplay-settings.html#restoreDefault" status="active" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="432" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="When no default language is set in the registry we check the system set language. If there is no matching translation is available we set it to english. This function gets called from the UI when the user manually changes the language" signature="void restoreDefault(const QString &amp;appConfigLocation, const QString &amp;settingsFileType)">
                    <parameter type="const QString &amp;" name="appConfigLocation" default=""/>
                    <parameter type="const QString &amp;" name="settingsFileType" default=""/>
                </function>
                <function name="retranslateUI" fullname="ScreenPlay::Settings::retranslateUI" href="screenplay-settings.html#retranslateUI" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="237" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="bool" brief="Check for supported langauges. If we use a langauge that not uses latin characters, we change the font. For example this happens for korean user. We ship google Noto Sans CJK KR Regular for this." signature="bool retranslateUI()"/>
                <function name="setAnonymousTelemetry" fullname="ScreenPlay::Settings::setAnonymousTelemetry" href="screenplay-settings.html#anonymousTelemetry-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="349" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="anonymousTelemetry" type="void" signature="void setAnonymousTelemetry(bool anonymousTelemetry)">
                    <parameter type="bool" name="anonymousTelemetry" default=""/>
                </function>
                <function name="setAutostart" fullname="ScreenPlay::Settings::setAutostart" href="screenplay-settings.html#autostart-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="245" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="autostart" type="void" signature="void setAutostart(bool autostart)">
                    <parameter type="bool" name="autostart" default=""/>
                </function>
                <function name="setCheckWallpaperVisible" fullname="ScreenPlay::Settings::setCheckWallpaperVisible" href="screenplay-settings.html#checkWallpaperVisible-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="360" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="checkWallpaperVisible" type="void" signature="void setCheckWallpaperVisible(bool checkWallpaperVisible)">
                    <parameter type="bool" name="checkWallpaperVisible" default=""/>
                </function>
                <function name="setDecoder" fullname="ScreenPlay::Settings::setDecoder" href="screenplay-settings.html#decoder-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="312" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="decoder" type="void" signature="void setDecoder(QString decoder)">
                    <parameter type="QString" name="decoder" default=""/>
                </function>
                <function name="setDesktopEnvironment" fullname="ScreenPlay::Settings::setDesktopEnvironment" href="screenplay-settings.html#desktopEnvironment-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="422" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="desktopEnvironment" type="void" signature="void setDesktopEnvironment(ScreenPlay::Settings::DesktopEnvironment desktopEnvironment)">
                    <parameter type="ScreenPlay::Settings::DesktopEnvironment" name="desktopEnvironment" default=""/>
                </function>
                <function name="setFont" fullname="ScreenPlay::Settings::setFont" href="screenplay-settings.html#font-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="393" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="font" type="void" signature="void setFont(QString font)">
                    <parameter type="QString" name="font" default=""/>
                </function>
                <function name="setGitBuildHash" fullname="ScreenPlay::Settings::setGitBuildHash" href="screenplay-settings.html#gitBuildHash-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="331" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="gitBuildHash" type="void" signature="void setGitBuildHash(QString gitBuildHash)">
                    <parameter type="QString" name="gitBuildHash" default=""/>
                </function>
                <function name="setHighPriorityStart" fullname="ScreenPlay::Settings::setHighPriorityStart" href="screenplay-settings.html#highPriorityStart-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="266" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="highPriorityStart" type="void" signature="void setHighPriorityStart(bool highPriorityStart)">
                    <parameter type="bool" name="highPriorityStart" default=""/>
                </function>
                <function name="setLanguage" fullname="ScreenPlay::Settings::setLanguage" href="screenplay-settings.html#language-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="382" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="language" type="void" signature="void setLanguage(ScreenPlay::Settings::Language language)">
                    <parameter type="ScreenPlay::Settings::Language" name="language" default=""/>
                </function>
                <function name="setLocalStoragePath" fullname="ScreenPlay::Settings::setLocalStoragePath" href="screenplay-settings.html#setLocalStoragePath" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="301" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setLocalStoragePath(QUrl localStoragePath)">
                    <parameter type="QUrl" name="localStoragePath" default=""/>
                </function>
                <function name="setMainWindowVisible" fullname="ScreenPlay::Settings::setMainWindowVisible" href="screenplay-settings.html#setMainWindowVisible" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="221" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setMainWindowVisible(bool visible)">
                    <parameter type="bool" name="visible" default=""/>
                </function>
                <function name="setOfflineMode" fullname="ScreenPlay::Settings::setOfflineMode" href="screenplay-settings.html#offlineMode-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="322" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="offlineMode" type="void" signature="void setOfflineMode(bool offlineMode)">
                    <parameter type="bool" name="offlineMode" default=""/>
                </function>
                <function name="setSilentStart" fullname="ScreenPlay::Settings::setSilentStart" href="screenplay-settings.html#silentStart-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="340" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="silentStart" type="void" signature="void setSilentStart(bool silentStart)">
                    <parameter type="bool" name="silentStart" default=""/>
                </function>
                <function name="setSteamVersion" fullname="ScreenPlay::Settings::setSteamVersion" href="screenplay-settings.html#steamVersion-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="413" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="steamVersion" type="void" signature="void setSteamVersion(bool steamVersion)">
                    <parameter type="bool" name="steamVersion" default=""/>
                </function>
                <function name="setTheme" fullname="ScreenPlay::Settings::setTheme" href="screenplay-settings.html#theme-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="402" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="theme" type="void" signature="void setTheme(ScreenPlay::Settings::Theme theme)">
                    <parameter type="ScreenPlay::Settings::Theme" name="theme" default=""/>
                </function>
                <function name="setVideoFillMode" fullname="ScreenPlay::Settings::setVideoFillMode" href="screenplay-settings.html#videoFillMode-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="371" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="videoFillMode" type="void" signature="void setVideoFillMode(ScreenPlay::FillMode::FillMode videoFillMode)">
                    <parameter type="ScreenPlay::FillMode::FillMode" name="videoFillMode" default=""/>
                </function>
                <function name="setqSetting" fullname="ScreenPlay::Settings::setqSetting" href="screenplay-settings.html#setqSetting" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="239" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setqSetting(const QString &amp;key, const QVariant &amp;value)">
                    <parameter type="const QString &amp;" name="key" default=""/>
                    <parameter type="const QVariant &amp;" name="value" default=""/>
                </function>
                <function name="setupLanguage" fullname="ScreenPlay::Settings::setupLanguage" href="screenplay-settings.html#setupLanguage" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="191" documented="true" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Checks if there is already a saved language. If not we try to use the system langauge. If we do not support the system language we use english" signature="void setupLanguage()"/>
                <function name="setupWidgetAndWindowPaths" fullname="ScreenPlay::Settings::setupWidgetAndWindowPaths" href="screenplay-settings.html#setupWidgetAndWindowPaths" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="236" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="To have a better developer experience we check if we use a debug version. Then we assume That the paths are the default QtCreator paths and set the widgets and wallpaper executable paths accordingly" signature="void setupWidgetAndWindowPaths()"/>
                <function name="silentStart" fullname="ScreenPlay::Settings::silentStart" href="screenplay-settings.html#silentStart-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="165" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="silentStart" type="bool" signature="bool silentStart() const"/>
                <function name="silentStartChanged" fullname="ScreenPlay::Settings::silentStartChanged" href="screenplay-settings.html#silentStart-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="224" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="silentStart" type="void" signature="void silentStartChanged(bool silentStart)">
                    <parameter type="bool" name="silentStart" default=""/>
                </function>
                <function name="steamVersion" fullname="ScreenPlay::Settings::steamVersion" href="screenplay-settings.html#steamVersion-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="203" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="steamVersion" type="bool" signature="bool steamVersion() const"/>
                <function name="steamVersionChanged" fullname="ScreenPlay::Settings::steamVersionChanged" href="screenplay-settings.html#steamVersion-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="231" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="steamVersion" type="void" signature="void steamVersionChanged(bool steamVersion)">
                    <parameter type="bool" name="steamVersion" default=""/>
                </function>
                <function name="theme" fullname="ScreenPlay::Settings::theme" href="screenplay-settings.html#theme-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="198" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="theme" type="ScreenPlay::Settings::Theme" signature="ScreenPlay::Settings::Theme theme() const"/>
                <function name="themeChanged" fullname="ScreenPlay::Settings::themeChanged" href="screenplay-settings.html#theme-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="230" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="theme" type="void" signature="void themeChanged(ScreenPlay::Settings::Theme theme)">
                    <parameter type="ScreenPlay::Settings::Theme" name="theme" default=""/>
                </function>
                <function name="videoFillMode" fullname="ScreenPlay::Settings::videoFillMode" href="screenplay-settings.html#videoFillMode-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="180" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="videoFillMode" type="ScreenPlay::FillMode::FillMode" signature="ScreenPlay::FillMode::FillMode videoFillMode() const"/>
                <function name="videoFillModeChanged" fullname="ScreenPlay::Settings::videoFillModeChanged" href="screenplay-settings.html#videoFillMode-prop" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="227" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="videoFillMode" type="void" signature="void videoFillModeChanged(ScreenPlay::FillMode::FillMode videoFillMode)">
                    <parameter type="ScreenPlay::FillMode::FillMode" name="videoFillMode" default=""/>
                </function>
                <function name="writeJsonFileFromResource" fullname="ScreenPlay::Settings::writeJsonFileFromResource" href="screenplay-settings.html#writeJsonFileFromResource" status="active" access="public" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="235" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Writes the default JsonFile from the resources and the given filename. Currently we have two default json files:" signature="void writeJsonFileFromResource(const QString &amp;filename)">
                    <parameter type="const QString &amp;" name="filename" default=""/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::Settings::QPrivateSignal" href="screenplay-settings-qprivatesignal.html" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="77"/>
                <enum name="DesktopEnvironment" fullname="ScreenPlay::Settings::DesktopEnvironment" href="screenplay-settings.html#DesktopEnvironment-enum" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="101" scoped="true">
                    <value name="Unknown" value="0"/>
                    <value name="OSX" value="1"/>
                    <value name="Windows" value="2"/>
                    <value name="Cinnamon" value="3"/>
                    <value name="Enlightenment" value="4"/>
                    <value name="Gnome" value="5"/>
                    <value name="KDE" value="6"/>
                    <value name="Lxde" value="7"/>
                    <value name="Lxqt" value="8"/>
                    <value name="Mate" value="9"/>
                    <value name="Unity" value="10"/>
                    <value name="XFCE" value="11"/>
                </enum>
                <enum name="Language" fullname="ScreenPlay::Settings::Language" href="screenplay-settings.html#Language-enum" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="116" scoped="true">
                    <value name="En" value="0"/>
                    <value name="De" value="1"/>
                    <value name="Ru" value="2"/>
                    <value name="Fr" value="3"/>
                    <value name="Es" value="4"/>
                    <value name="Ko" value="5"/>
                    <value name="Vi" value="6"/>
                    <value name="Zh_CN" value="7"/>
                </enum>
                <enum name="Theme" fullname="ScreenPlay::Settings::Theme" href="screenplay-settings.html#Theme-enum" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="128" scoped="true">
                    <value name="System" value="0"/>
                    <value name="Dark" value="1"/>
                    <value name="Light" value="2"/>
                </enum>
                <property name="anonymousTelemetry" fullname="ScreenPlay::Settings::anonymousTelemetry" href="screenplay-settings.html#anonymousTelemetry-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="79">
                    <getter name="anonymousTelemetry"/>
                    <setter name="setAnonymousTelemetry"/>
                    <notifier name="anonymousTelemetryChanged"/>
                </property>
                <property name="autostart" fullname="ScreenPlay::Settings::autostart" href="screenplay-settings.html#autostart-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="81">
                    <getter name="autostart"/>
                    <setter name="setAutostart"/>
                    <notifier name="autostartChanged"/>
                </property>
                <property name="checkWallpaperVisible" fullname="ScreenPlay::Settings::checkWallpaperVisible" href="screenplay-settings.html#checkWallpaperVisible-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="83">
                    <getter name="checkWallpaperVisible"/>
                    <setter name="setCheckWallpaperVisible"/>
                    <notifier name="checkWallpaperVisibleChanged"/>
                </property>
                <property name="decoder" fullname="ScreenPlay::Settings::decoder" href="screenplay-settings.html#decoder-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="92">
                    <getter name="decoder"/>
                    <setter name="setDecoder"/>
                    <notifier name="decoderChanged"/>
                </property>
                <property name="desktopEnvironment" fullname="ScreenPlay::Settings::desktopEnvironment" href="screenplay-settings.html#desktopEnvironment-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="88">
                    <getter name="desktopEnvironment"/>
                    <setter name="setDesktopEnvironment"/>
                    <notifier name="desktopEnvironmentChanged"/>
                </property>
                <property name="font" fullname="ScreenPlay::Settings::font" href="screenplay-settings.html#font-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="94">
                    <getter name="font"/>
                    <setter name="setFont"/>
                    <notifier name="fontChanged"/>
                </property>
                <property name="gitBuildHash" fullname="ScreenPlay::Settings::gitBuildHash" href="screenplay-settings.html#gitBuildHash-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="93">
                    <getter name="gitBuildHash"/>
                    <setter name="setGitBuildHash"/>
                    <notifier name="gitBuildHashChanged"/>
                </property>
                <property name="highPriorityStart" fullname="ScreenPlay::Settings::highPriorityStart" href="screenplay-settings.html#highPriorityStart-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="82">
                    <getter name="highPriorityStart"/>
                    <setter name="setHighPriorityStart"/>
                    <notifier name="highPriorityStartChanged"/>
                </property>
                <property name="language" fullname="ScreenPlay::Settings::language" href="screenplay-settings.html#language-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="89">
                    <getter name="language"/>
                    <setter name="setLanguage"/>
                    <notifier name="languageChanged"/>
                </property>
                <property name="offlineMode" fullname="ScreenPlay::Settings::offlineMode" href="screenplay-settings.html#offlineMode-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="84">
                    <getter name="offlineMode"/>
                    <setter name="setOfflineMode"/>
                    <notifier name="offlineModeChanged"/>
                </property>
                <property name="silentStart" fullname="ScreenPlay::Settings::silentStart" href="screenplay-settings.html#silentStart-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="80">
                    <getter name="silentStart"/>
                    <setter name="setSilentStart"/>
                    <notifier name="silentStartChanged"/>
                </property>
                <property name="steamVersion" fullname="ScreenPlay::Settings::steamVersion" href="screenplay-settings.html#steamVersion-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="85">
                    <getter name="steamVersion"/>
                    <setter name="setSteamVersion"/>
                    <notifier name="steamVersionChanged"/>
                </property>
                <property name="theme" fullname="ScreenPlay::Settings::theme" href="screenplay-settings.html#theme-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="90">
                    <getter name="theme"/>
                    <setter name="setTheme"/>
                    <notifier name="themeChanged"/>
                </property>
                <property name="videoFillMode" fullname="ScreenPlay::Settings::videoFillMode" href="screenplay-settings.html#videoFillMode-prop" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="87">
                    <getter name="videoFillMode"/>
                    <setter name="setVideoFillMode"/>
                    <notifier name="videoFillModeChanged"/>
                </property>
                <variable name="m_anonymousTelemetry" fullname="ScreenPlay::Settings::m_anonymousTelemetry" href="screenplay-settings.html#m_anonymousTelemetry-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="445" type="bool" static="false"/>
                <variable name="m_autostart" fullname="ScreenPlay::Settings::m_autostart" href="screenplay-settings.html#m_autostart-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="440" type="bool" static="false"/>
                <variable name="m_checkWallpaperVisible" fullname="ScreenPlay::Settings::m_checkWallpaperVisible" href="screenplay-settings.html#m_checkWallpaperVisible-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="443" type="bool" static="false"/>
                <variable name="m_decoder" fullname="ScreenPlay::Settings::m_decoder" href="screenplay-settings.html#m_decoder-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="448" type="QString" static="false"/>
                <variable name="m_desktopEnvironment" fullname="ScreenPlay::Settings::m_desktopEnvironment" href="screenplay-settings.html#m_desktopEnvironment-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="454" type="ScreenPlay::Settings::DesktopEnvironment" static="false"/>
                <variable name="m_font" fullname="ScreenPlay::Settings::m_font" href="screenplay-settings.html#m_font-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="452" type="QString" static="false"/>
                <variable name="m_gitBuildHash" fullname="ScreenPlay::Settings::m_gitBuildHash" href="screenplay-settings.html#m_gitBuildHash-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="447" type="QString" static="false"/>
                <variable name="m_globalVariables" fullname="ScreenPlay::Settings::m_globalVariables" href="screenplay-settings.html#m_globalVariables-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="438" type="const std::shared_ptr&lt;GlobalVariables&gt; &amp;" static="false"/>
                <variable name="m_highPriorityStart" fullname="ScreenPlay::Settings::m_highPriorityStart" href="screenplay-settings.html#m_highPriorityStart-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="441" type="bool" static="false"/>
                <variable name="m_language" fullname="ScreenPlay::Settings::m_language" href="screenplay-settings.html#m_language-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="450" type="ScreenPlay::Settings::Language" static="false"/>
                <variable name="m_offlineMode" fullname="ScreenPlay::Settings::m_offlineMode" href="screenplay-settings.html#m_offlineMode-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="442" type="bool" static="false"/>
                <variable name="m_qSettings" fullname="ScreenPlay::Settings::m_qSettings" href="screenplay-settings.html#m_qSettings-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="435" type="QSettings" static="false"/>
                <variable name="m_silentStart" fullname="ScreenPlay::Settings::m_silentStart" href="screenplay-settings.html#m_silentStart-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="444" type="bool" static="false"/>
                <variable name="m_steamVersion" fullname="ScreenPlay::Settings::m_steamVersion" href="screenplay-settings.html#m_steamVersion-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="453" type="bool" static="false"/>
                <variable name="m_theme" fullname="ScreenPlay::Settings::m_theme" href="screenplay-settings.html#m_theme-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="451" type="ScreenPlay::Settings::Theme" static="false"/>
                <variable name="m_translator" fullname="ScreenPlay::Settings::m_translator" href="screenplay-settings.html#m_translator-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="436" type="QTranslator" static="false"/>
                <variable name="m_videoFillMode" fullname="ScreenPlay::Settings::m_videoFillMode" href="screenplay-settings.html#m_videoFillMode-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="449" type="ScreenPlay::FillMode::FillMode" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::Settings::staticMetaObject" href="screenplay-settings.html#staticMetaObject-var" status="internal" access="private" location="settings.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/settings.h" lineno="77" type="const QMetaObject" static="true"/>
            </class>
            <struct name="SettingsItem" fullname="ScreenPlay::SettingsItem" href="screenplay-settingsitem.html" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="50">
                <function name="SettingsItem" fullname="ScreenPlay::SettingsItem::SettingsItem" href="screenplay-settingsitem.html#SettingsItem" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="51" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="SettingsItem(const QString &amp;name, const QJsonObject &amp;value)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                    <parameter type="const QJsonObject &amp;" name="value" default=""/>
                </function>
                <function name="SettingsItem" fullname="ScreenPlay::SettingsItem::SettingsItem" href="screenplay-settingsitem.html#SettingsItem-1" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="60" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" signature="SettingsItem(const QString &amp;name)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                </function>
                <function name="setValue" fullname="ScreenPlay::SettingsItem::setValue" href="screenplay-settingsitem.html#setValue" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="72" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setValue(const QJsonObject &amp;value)">
                    <parameter type="const QJsonObject &amp;" name="value" default=""/>
                </function>
                <variable name="m_isHeadline" fullname="ScreenPlay::SettingsItem::m_isHeadline" href="screenplay-settingsitem.html#m_isHeadline-var" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="67" type="bool" static="false"/>
                <variable name="m_name" fullname="ScreenPlay::SettingsItem::m_name" href="screenplay-settingsitem.html#m_name-var" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="66" type="QString" static="false"/>
                <variable name="m_type" fullname="ScreenPlay::SettingsItem::m_type" href="screenplay-settingsitem.html#m_type-var" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="69" type="QString" static="false"/>
                <variable name="m_value" fullname="ScreenPlay::SettingsItem::m_value" href="screenplay-settingsitem.html#m_value-var" status="internal" access="private" location="projectsettingslistmodel.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistmodel.h" lineno="68" type="QJsonObject" static="false"/>
            </struct>
            <struct name="SliderItem" fullname="ScreenPlay::SliderItem" href="screenplay-slideritem.html" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="66" bases="ScreenPlay::IListItem">
                <function name="getItemSettings" fullname="ScreenPlay::SliderItem::getItemSettings" href="screenplay-slideritem.html#getItemSettings" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="78" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="QJsonObject" signature="QJsonObject getItemSettings() override"/>
                <function name="qt_check_for_QGADGET_macro" fullname="ScreenPlay::SliderItem::qt_check_for_QGADGET_macro" href="screenplay-slideritem.html#qt_check_for_QGADGET_macro" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="67" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qt_check_for_QGADGET_macro()"/>
                <function name="qt_static_metacall" fullname="ScreenPlay::SliderItem::qt_static_metacall" href="screenplay-slideritem.html#qt_static_metacall" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="67" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="setData" fullname="ScreenPlay::SliderItem::setData" href="screenplay-slideritem.html#setData" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="80" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void setData(const QJsonObject &amp;obj) override">
                    <parameter type="const QJsonObject &amp;" name="obj" default=""/>
                </function>
                <typedef name="QtGadgetHelper" fullname="ScreenPlay::SliderItem::QtGadgetHelper" href="screenplay-slideritem.html#QtGadgetHelper-typedef" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="67"/>
                <property name="from" fullname="ScreenPlay::SliderItem::from" href="screenplay-slideritem.html#from-prop" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="69"/>
                <property name="stepSize" fullname="ScreenPlay::SliderItem::stepSize" href="screenplay-slideritem.html#stepSize-prop" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="71"/>
                <property name="to" fullname="ScreenPlay::SliderItem::to" href="screenplay-slideritem.html#to-prop" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="70"/>
                <property name="value" fullname="ScreenPlay::SliderItem::value" href="screenplay-slideritem.html#value-prop" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="72"/>
                <variable name="m_from" fullname="ScreenPlay::SliderItem::m_from" href="screenplay-slideritem.html#m_from-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="74" type="double" static="false"/>
                <variable name="m_stepSize" fullname="ScreenPlay::SliderItem::m_stepSize" href="screenplay-slideritem.html#m_stepSize-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="77" type="double" static="false"/>
                <variable name="m_to" fullname="ScreenPlay::SliderItem::m_to" href="screenplay-slideritem.html#m_to-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="76" type="double" static="false"/>
                <variable name="m_value" fullname="ScreenPlay::SliderItem::m_value" href="screenplay-slideritem.html#m_value-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="75" type="double" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::SliderItem::staticMetaObject" href="screenplay-slideritem.html#staticMetaObject-var" status="internal" access="private" location="projectsettingslistitem.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/projectsettingslistitem.h" lineno="67" type="const QMetaObject" static="true"/>
            </struct>
            <class name="Util" fullname="ScreenPlay::Util" href="screenplay-util.html" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="79" documented="true" bases="QObject" module="ScreenPlay" brief="Easy to use global object to use when certain functionality is not available in QML">
                <function name="Util" fullname="ScreenPlay::Util::Util" href="screenplay-util.html#Util" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="85" documented="true" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" brief="Constructor" signature="Util(QNetworkAccessManager *networkAccessManager, QObject *parent)">
                    <parameter type="QNetworkAccessManager *" name="networkAccessManager" default=""/>
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="allDataProtectionLoaded" fullname="ScreenPlay::Util::allDataProtectionLoaded" href="screenplay-util.html#allDataProtectionLoaded" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="98" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void allDataProtectionLoaded(QString dataProtectionText)">
                    <parameter type="QString" name="dataProtectionText" default=""/>
                </function>
                <function name="allLicenseLoaded" fullname="ScreenPlay::Util::allLicenseLoaded" href="screenplay-util.html#allLicenseLoaded" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="97" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void allLicenseLoaded(QString licensesText)">
                    <parameter type="QString" name="licensesText" default=""/>
                </function>
                <function name="appendDebugMessages" fullname="ScreenPlay::Util::appendDebugMessages" href="screenplay-util.html#appendDebugMessages" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="137" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void appendDebugMessages(QString debugMessages)">
                    <parameter type="QString" name="debugMessages" default=""/>
                </function>
                <function name="appendToMetricsFile" fullname="ScreenPlay::Util::appendToMetricsFile" href="screenplay-util.html#appendToMetricsFile" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="116" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void appendToMetricsFile(const QString &amp;key, const QVariant &amp;value)">
                    <parameter type="const QString &amp;" name="key" default=""/>
                    <parameter type="const QVariant &amp;" name="value" default=""/>
                </function>
                <function name="copyToClipboard" fullname="ScreenPlay::Util::copyToClipboard" href="screenplay-util.html#copyToClipboard" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="102" documented="true" meta="slot" virtual="non" const="true" static="false" final="false" override="false" type="void" brief="Copies the given string to the clipboard" signature="void copyToClipboard(const QString &amp;text) const">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="debugMessages" fullname="ScreenPlay::Util::debugMessages" href="screenplay-util.html#debugMessages-prop" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="87" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="debugMessages" type="QString" signature="QString debugMessages() const"/>
                <function name="debugMessagesChanged" fullname="ScreenPlay::Util::debugMessagesChanged" href="screenplay-util.html#debugMessages-prop" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="99" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="debugMessages" type="void" signature="void debugMessagesChanged(QString debugMessages)">
                    <parameter type="QString" name="debugMessages" default=""/>
                </function>
                <function name="generateRandomString" fullname="ScreenPlay::Util::generateRandomString" href="screenplay-util.html#generateRandomString" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="119" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="QString" brief="Generates a (non secure) random string with the default length of 32. Can contain:" signature="QString generateRandomString(quint32 length)">
                    <parameter type="quint32" name="length" default="32"/>
                </function>
                <function name="getInstalledTypeFromString" fullname="ScreenPlay::Util::getInstalledTypeFromString" href="screenplay-util.html#getInstalledTypeFromString" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="109" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="std::optional&lt;InstalledType::InstalledType&gt;" signature="std::optional&lt;InstalledType::InstalledType&gt; getInstalledTypeFromString(const QString &amp;type)">
                    <parameter type="const QString &amp;" name="type" default=""/>
                </function>
                <function name="getSearchTypeFromInstalledType" fullname="ScreenPlay::Util::getSearchTypeFromInstalledType" href="screenplay-util.html#getSearchTypeFromInstalledType" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="108" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="SearchType::SearchType" signature="SearchType::SearchType getSearchTypeFromInstalledType(const InstalledType::InstalledType type)">
                    <parameter type="const InstalledType::InstalledType" name="type" default=""/>
                </function>
                <function name="getVersionNumberFromString" fullname="ScreenPlay::Util::getVersionNumberFromString" href="screenplay-util.html#getVersionNumberFromString" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="113" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="std::optional&lt;QVersionNumber&gt;" brief="Parses a version from a given QString. The QString must be looke like this: 1.0.0 - Major.Minor.Patch. A fixed position is used for parsing (at 0,2,4). Return std::nullopt when not successful" signature="std::optional&lt;QVersionNumber&gt; getVersionNumberFromString(const QString &amp;str)">
                    <parameter type="const QString &amp;" name="str" default=""/>
                </function>
                <function name="logToGui" fullname="ScreenPlay::Util::logToGui" href="screenplay-util.html#logToGui" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="118" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="void" brief="Basic logging to the GUI. No logging is done to a log file for now. This string can be copied in the settings tab in the UI" signature="void logToGui(QtMsgType type, const QMessageLogContext &amp;context, const QString &amp;msg)">
                    <parameter type="QtMsgType" name="type" default=""/>
                    <parameter type="const QMessageLogContext &amp;" name="context" default=""/>
                    <parameter type="const QString &amp;" name="msg" default=""/>
                </function>
                <function name="metaObject" fullname="ScreenPlay::Util::metaObject" href="screenplay-util.html#metaObject" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="80" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
                <function name="openFolderInExplorer" fullname="ScreenPlay::Util::openFolderInExplorer" href="screenplay-util.html#openFolderInExplorer" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="103" documented="true" meta="slot" virtual="non" const="true" static="false" final="false" override="false" type="void" brief="Opens a native folder window on the given path. Windows and Mac only for now!" signature="void openFolderInExplorer(const QString &amp;url) const">
                    <parameter type="const QString &amp;" name="url" default=""/>
                </function>
                <function name="openJsonFileToObject" fullname="ScreenPlay::Util::openJsonFileToObject" href="screenplay-util.html#openJsonFileToObject" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="111" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="std::optional&lt;QJsonObject&gt;" brief="Opens a json file (absolute path) and tries to convert it to a QJsonObject. Returns std::nullopt when not successful" signature="std::optional&lt;QJsonObject&gt; openJsonFileToObject(const QString &amp;path)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                </function>
                <function name="openJsonFileToString" fullname="ScreenPlay::Util::openJsonFileToString" href="screenplay-util.html#openJsonFileToString" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="112" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="std::optional&lt;QString&gt;" brief="Opens a json file (absolute path) and tries to convert it to a QString. Returns std::nullopt when not successful" signature="std::optional&lt;QString&gt; openJsonFileToString(const QString &amp;path)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                </function>
                <function name="parseQByteArrayToQJsonObject" fullname="ScreenPlay::Util::parseQByteArrayToQJsonObject" href="screenplay-util.html#parseQByteArrayToQJsonObject" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="110" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="std::optional&lt;QJsonObject&gt;" brief="Parses a QByteArray to a QJsonObject. If returns and std::nullopt on failure" signature="std::optional&lt;QJsonObject&gt; parseQByteArrayToQJsonObject(const QByteArray &amp;byteArray)">
                    <parameter type="const QByteArray &amp;" name="byteArray" default=""/>
                </function>
                <function name="qt_metacall" fullname="ScreenPlay::Util::qt_metacall" href="screenplay-util.html#qt_metacall" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="80" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="qt_metacast" fullname="ScreenPlay::Util::qt_metacast" href="screenplay-util.html#qt_metacast" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="80" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                    <parameter type="const char *" name="" default=""/>
                </function>
                <function name="qt_static_metacall" fullname="ScreenPlay::Util::qt_static_metacall" href="screenplay-util.html#qt_static_metacall" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="80" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                    <parameter type="QObject *" name="" default=""/>
                    <parameter type="QMetaObject::Call" name="" default=""/>
                    <parameter type="int" name="" default=""/>
                    <parameter type="void **" name="" default=""/>
                </function>
                <function name="requestAllLicenses" fullname="ScreenPlay::Util::requestAllLicenses" href="screenplay-util.html#requestAllLicenses" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="105" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Loads all content of the legal folder in the qrc into a property string of this class. allLicenseLoaded is emited when loading is finished" signature="void requestAllLicenses()"/>
                <function name="requestDataProtection" fullname="ScreenPlay::Util::requestDataProtection" href="screenplay-util.html#requestDataProtection" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="106" documented="true" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" brief="Loads all dataprotection of the legal folder in the qrc into a property string of this class. allDataProtectionLoaded is emited when loading is finished" signature="void requestDataProtection()"/>
                <function name="requestNavigation" fullname="ScreenPlay::Util::requestNavigation" href="screenplay-util.html#requestNavigation" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="93" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestNavigation(QString nav)">
                    <parameter type="QString" name="nav" default=""/>
                </function>
                <function name="requestNavigationActive" fullname="ScreenPlay::Util::requestNavigationActive" href="screenplay-util.html#requestNavigationActive" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="94" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestNavigationActive(bool isActive)">
                    <parameter type="bool" name="isActive" default=""/>
                </function>
                <function name="requestToggleWallpaperConfiguration" fullname="ScreenPlay::Util::requestToggleWallpaperConfiguration" href="screenplay-util.html#requestToggleWallpaperConfiguration" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="95" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void requestToggleWallpaperConfiguration()"/>
                <function name="setNavigation" fullname="ScreenPlay::Util::setNavigation" href="screenplay-util.html#setNavigation" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="121" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setNavigation(QString nav)">
                    <parameter type="QString" name="nav" default=""/>
                </function>
                <function name="setNavigationActive" fullname="ScreenPlay::Util::setNavigationActive" href="screenplay-util.html#setNavigationActive" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="127" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setNavigationActive(bool isActive)">
                    <parameter type="bool" name="isActive" default=""/>
                </function>
                <function name="setSidebarItem" fullname="ScreenPlay::Util::setSidebarItem" href="screenplay-util.html#setSidebarItem" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="96" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setSidebarItem(QString folderName, ScreenPlay::InstalledType::InstalledType type)">
                    <parameter type="QString" name="folderName" default=""/>
                    <parameter type="ScreenPlay::InstalledType::InstalledType" name="type" default=""/>
                </function>
                <function name="setToggleWallpaperConfiguration" fullname="ScreenPlay::Util::setToggleWallpaperConfiguration" href="screenplay-util.html#setToggleWallpaperConfiguration" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="132" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setToggleWallpaperConfiguration()"/>
                <function name="toString" fullname="ScreenPlay::Util::toString" href="screenplay-util.html#toString" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="115" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="QString" brief="Helper function to append a QStringList into a QString with a space between the items" signature="QString toString(const QStringList &amp;list)">
                    <parameter type="const QStringList &amp;" name="list" default=""/>
                </function>
                <function name="writeJsonObjectToFile" fullname="ScreenPlay::Util::writeJsonObjectToFile" href="screenplay-util.html#writeJsonObjectToFile" status="active" access="public" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="114" documented="true" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="bool" brief="Writes a given QJsonObject to a file. The path must be absolute. When truncate is set to true the exsisting json file will be overriten" signature="bool writeJsonObjectToFile(const QString &amp;absoluteFilePath, const QJsonObject &amp;object, bool truncate)">
                    <parameter type="const QString &amp;" name="absoluteFilePath" default=""/>
                    <parameter type="const QJsonObject &amp;" name="object" default=""/>
                    <parameter type="bool" name="truncate" default="true"/>
                </function>
                <struct name="QPrivateSignal" fullname="ScreenPlay::Util::QPrivateSignal" href="screenplay-util-qprivatesignal.html" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="80"/>
                <property name="debugMessages" fullname="ScreenPlay::Util::debugMessages" href="screenplay-util.html#debugMessages-prop" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="82">
                    <getter name="debugMessages"/>
                    <notifier name="debugMessagesChanged"/>
                </property>
                <variable name="m_debugMessages" fullname="ScreenPlay::Util::m_debugMessages" href="screenplay-util.html#m_debugMessages-var" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="150" type="QString" static="false"/>
                <variable name="m_networkAccessManager" fullname="ScreenPlay::Util::m_networkAccessManager" href="screenplay-util.html#m_networkAccessManager-var" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="148" type="QNetworkAccessManager *" static="false"/>
                <variable name="staticMetaObject" fullname="ScreenPlay::Util::staticMetaObject" href="screenplay-util.html#staticMetaObject-var" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="80" type="const QMetaObject" static="true"/>
            </class>
            <variable name="utilPointer" fullname="ScreenPlay::utilPointer" href="screenplay.html#utilPointer-var" status="internal" access="private" location="util.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/src/util.h" lineno="154" type="ScreenPlay::Util *" static="false"/>
        </namespace>
        <qmlclass name="ScreenPlayItem" qml-module-name="ScreenPlayItem" href="qml-screenplayitem.html" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="6" title="ScreenPlayItem" fulltitle="ScreenPlayItem" subtitle="">
            <function name="itemClicked" fullname="ScreenPlayItem::itemClicked" href="qml-screenplayitem.html#itemClicked-signal" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="23" meta="qmlsignal"/>
            <function name="openContextMenu" fullname="ScreenPlayItem::openContextMenu" href="qml-screenplayitem.html#openContextMenu-signal" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/ScreenPlayItem.qml" lineno="20" meta="qmlsignal"/>
            <qmlproperty name="absoluteStoragePath" fullname="ScreenPlayItem::absoluteStoragePath" href="qml-screenplayitem.html#absoluteStoragePath-prop" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="17" type="url" attached="false" writable="true"/>
            <qmlproperty name="checkBox" fullname="ScreenPlayItem::checkBox" href="qml-screenplayitem.html#checkBox-prop" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="10" type="alias" attached="false" writable="true"/>
            <qmlproperty name="customTitle" fullname="ScreenPlayItem::customTitle" href="qml-screenplayitem.html#customTitle-prop" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="16" type="string" attached="false" writable="true"/>
            <qmlproperty name="hasMenuOpen" fullname="ScreenPlayItem::hasMenuOpen" href="qml-screenplayitem.html#hasMenuOpen-prop" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="19" type="bool" attached="false" writable="true"/>
            <qmlproperty name="isSelected" fullname="ScreenPlayItem::isSelected" href="qml-screenplayitem.html#isSelected-prop" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="15" type="bool" attached="false" writable="true"/>
            <qmlproperty name="itemIndex" fullname="ScreenPlayItem::itemIndex" href="qml-screenplayitem.html#itemIndex-prop" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="21" type="int" attached="false" writable="true"/>
            <qmlproperty name="preview" fullname="ScreenPlayItem::preview" href="qml-screenplayitem.html#preview-prop" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="14" type="string" attached="false" writable="true"/>
            <qmlproperty name="screenId" fullname="ScreenPlayItem::screenId" href="qml-screenplayitem.html#screenId-prop" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="22" type="string" attached="false" writable="true"/>
            <qmlproperty name="type" fullname="ScreenPlayItem::type" href="qml-screenplayitem.html#type-prop" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="18" type="var" attached="false" writable="true"/>
            <qmlproperty name="workshopID" fullname="ScreenPlayItem::workshopID" href="qml-screenplayitem.html#workshopID-prop" status="internal" access="private" location="ScreenPlayItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItem.qml" lineno="20" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="ScreenPlayItemImage" qml-module-name="ScreenPlayItemImage" href="qml-screenplayitemimage.html" status="internal" access="private" location="ScreenPlayItemImage.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItemImage.qml" lineno="3" title="ScreenPlayItemImage" fulltitle="ScreenPlayItemImage" subtitle="">
            <function name="enter" fullname="ScreenPlayItemImage::enter" href="qml-screenplayitemimage.html#enter-method" status="internal" access="private" location="ScreenPlayItemImage.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/ScreenPlayItemImage.qml" lineno="13" meta="qmlmethod"/>
            <function name="exit" fullname="ScreenPlayItemImage::exit" href="qml-screenplayitemimage.html#exit-method" status="internal" access="private" location="ScreenPlayItemImage.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/ScreenPlayItemImage.qml" lineno="19" meta="qmlmethod"/>
            <qmlproperty name="absoluteStoragePath" fullname="ScreenPlayItemImage::absoluteStoragePath" href="qml-screenplayitemimage.html#absoluteStoragePath-prop" status="internal" access="private" location="ScreenPlayItemImage.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/ScreenPlayItemImage.qml" lineno="9" type="string" attached="false" writable="true"/>
            <qmlproperty name="sourceImage" fullname="ScreenPlayItemImage::sourceImage" href="qml-screenplayitemimage.html#sourceImage-prop" status="internal" access="private" location="ScreenPlayItemImage.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItemImage.qml" lineno="9" type="string" attached="false" writable="true"/>
            <qmlproperty name="sourceImageGIF" fullname="ScreenPlayItemImage::sourceImageGIF" href="qml-screenplayitemimage.html#sourceImageGIF-prop" status="internal" access="private" location="ScreenPlayItemImage.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/ScreenPlayItemImage.qml" lineno="10" type="string" attached="false" writable="true"/>
        </qmlclass>
        <class name="ScreenPlaySDK" href="screenplaysdk.html" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="52" bases="QQuickItem">
            <function name="ScreenPlaySDK" fullname="ScreenPlaySDK::ScreenPlaySDK" href="screenplaysdk.html#ScreenPlaySDK" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="54" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="ScreenPlaySDK(const ScreenPlaySDK &amp;)">
                <parameter type="const ScreenPlaySDK &amp;" name="" default=""/>
            </function>
            <function name="ScreenPlaySDK" fullname="ScreenPlaySDK::ScreenPlaySDK" href="screenplaysdk.html#ScreenPlaySDK-1" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="57" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="1" type="" signature="ScreenPlaySDK(QQuickItem *parent)">
                <parameter type="QQuickItem *" name="parent" default="nullptr"/>
            </function>
            <function name="ScreenPlaySDK" fullname="ScreenPlaySDK::ScreenPlaySDK" href="screenplaysdk.html#ScreenPlaySDK-2" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="58" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" overload="true" overload-number="2" type="" signature="ScreenPlaySDK(const QString &amp;appID, const QString &amp;type, QQuickItem *parent)">
                <parameter type="const QString &amp;" name="appID" default=""/>
                <parameter type="const QString &amp;" name="type" default=""/>
                <parameter type="QQuickItem *" name="parent" default="nullptr"/>
            </function>
            <function name="appID" fullname="ScreenPlaySDK::appID" href="screenplaysdk.html#appID-prop" status="active" access="public" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="75" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="appID" type="QString" signature="QString appID() const"/>
            <function name="appIDChanged" fullname="ScreenPlaySDK::appIDChanged" href="screenplaysdk.html#appID-prop" status="active" access="public" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="128" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void appIDChanged(QString appID)">
                <parameter type="QString" name="appID" default=""/>
            </function>
            <function name="connected" fullname="ScreenPlaySDK::connected" href="screenplaysdk.html#connected" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="82" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void connected()"/>
            <function name="disconnected" fullname="ScreenPlaySDK::disconnected" href="screenplaysdk.html#disconnected" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="83" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void disconnected()"/>
            <function name="error" fullname="ScreenPlaySDK::error" href="screenplaysdk.html#error" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="85" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void error(QLocalSocket::LocalSocketError socketError)">
                <parameter type="QLocalSocket::LocalSocketError" name="socketError" default=""/>
            </function>
            <function name="incommingMessage" fullname="ScreenPlaySDK::incommingMessage" href="screenplaysdk.html#incommingMessage" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="119" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void incommingMessage(QString key, QString value)">
                <parameter type="QString" name="key" default=""/>
                <parameter type="QString" name="value" default=""/>
            </function>
            <function name="incommingMessageError" fullname="ScreenPlaySDK::incommingMessageError" href="screenplaysdk.html#incommingMessageError" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="120" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void incommingMessageError(QString msg)">
                <parameter type="QString" name="msg" default=""/>
            </function>
            <function name="init" fullname="ScreenPlaySDK::init" href="screenplaysdk.html#init" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="140" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void init()"/>
            <function name="isConnected" fullname="ScreenPlaySDK::isConnected" href="screenplaysdk.html#isConnected-prop" status="active" access="public" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="70" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="isConnected" type="bool" signature="bool isConnected() const"/>
            <function name="isConnectedChanged" fullname="ScreenPlaySDK::isConnectedChanged" href="screenplaysdk.html#isConnected-prop" status="active" access="public" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="126" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="isConnected" type="void" signature="void isConnectedChanged(bool isConnected)">
                <parameter type="bool" name="isConnected" default=""/>
            </function>
            <function name="metaObject" fullname="ScreenPlaySDK::metaObject" href="screenplaysdk.html#metaObject" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="53" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="newRedirectMessage" fullname="ScreenPlaySDK::newRedirectMessage" href="screenplaysdk.html#newRedirectMessage" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="129" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void newRedirectMessage(QByteArray &amp;msg)">
                <parameter type="QByteArray &amp;" name="msg" default=""/>
            </function>
            <function name="operator=" fullname="ScreenPlaySDK::operator=" href="screenplaysdk.html#operator-eq" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="54" meta="copy-assign" virtual="non" const="false" static="false" final="false" override="false" type="ScreenPlaySDK &amp;" signature="ScreenPlaySDK &amp; operator=(const ScreenPlaySDK &amp;)">
                <parameter type="const ScreenPlaySDK &amp;" name="" default=""/>
            </function>
            <function name="pingAlive" fullname="ScreenPlaySDK::pingAlive" href="screenplaysdk.html#pingAlive" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="87" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void pingAlive()"/>
            <function name="qt_metacall" fullname="ScreenPlaySDK::qt_metacall" href="screenplaysdk.html#qt_metacall" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="53" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="ScreenPlaySDK::qt_metacast" href="screenplaysdk.html#qt_metacast" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="53" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="ScreenPlaySDK::qt_static_metacall" href="screenplaysdk.html#qt_static_metacall" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="53" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="readyRead" fullname="ScreenPlaySDK::readyRead" href="screenplaysdk.html#readyRead" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="84" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void readyRead()"/>
            <function name="redirectMessage" fullname="ScreenPlaySDK::redirectMessage" href="screenplaysdk.html#redirectMessage" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="86" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void redirectMessage(QByteArray &amp;msg)">
                <parameter type="QByteArray &amp;" name="msg" default=""/>
            </function>
            <function name="redirectMessageOutputToMainWindow" fullname="ScreenPlaySDK::redirectMessageOutputToMainWindow" href="screenplaysdk.html#redirectMessageOutputToMainWindow" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="116" meta="slot" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void redirectMessageOutputToMainWindow(QtMsgType type, const QMessageLogContext &amp;context, const QString &amp;msg)">
                <parameter type="QtMsgType" name="type" default=""/>
                <parameter type="const QMessageLogContext &amp;" name="context" default=""/>
                <parameter type="const QString &amp;" name="msg" default=""/>
            </function>
            <function name="replaceWallpaper" fullname="ScreenPlaySDK::replaceWallpaper" href="screenplaysdk.html#replaceWallpaper" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="131" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void replaceWallpaper(const QString absolutePath, const QString file, const float volume, const QString fillMode, const QString type, const bool checkWallpaperVisible)">
                <parameter type="const QString" name="absolutePath" default=""/>
                <parameter type="const QString" name="file" default=""/>
                <parameter type="const float" name="volume" default=""/>
                <parameter type="const QString" name="fillMode" default=""/>
                <parameter type="const QString" name="type" default=""/>
                <parameter type="const bool" name="checkWallpaperVisible" default=""/>
            </function>
            <function name="sdkConnected" fullname="ScreenPlaySDK::sdkConnected" href="screenplaysdk.html#sdkConnected" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="122" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void sdkConnected()"/>
            <function name="sdkDisconnected" fullname="ScreenPlaySDK::sdkDisconnected" href="screenplaysdk.html#sdkDisconnected" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="123" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void sdkDisconnected()"/>
            <function name="sendMessage" fullname="ScreenPlaySDK::sendMessage" href="screenplaysdk.html#sendMessage" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="81" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void sendMessage(const QJsonObject &amp;obj)">
                <parameter type="const QJsonObject &amp;" name="obj" default=""/>
            </function>
            <function name="setAppID" fullname="ScreenPlaySDK::setAppID" href="screenplaysdk.html#appID-prop" status="active" access="public" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="107" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void setAppID(QString appID)">
                <parameter type="QString" name="appID" default=""/>
            </function>
            <function name="setIsConnected" fullname="ScreenPlaySDK::setIsConnected" href="screenplaysdk.html#isConnected-prop" status="active" access="public" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="98" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="isConnected" type="void" signature="void setIsConnected(bool isConnected)">
                <parameter type="bool" name="isConnected" default=""/>
            </function>
            <function name="setType" fullname="ScreenPlaySDK::setType" href="screenplaysdk.html#type-prop" status="active" access="public" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="89" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void setType(QString type)">
                <parameter type="QString" name="type" default=""/>
            </function>
            <function name="type" fullname="ScreenPlaySDK::type" href="screenplaysdk.html#type-prop" status="active" access="public" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="65" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="type" type="QString" signature="QString type() const"/>
            <function name="typeChanged" fullname="ScreenPlaySDK::typeChanged" href="screenplaysdk.html#type-prop" status="active" access="public" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="125" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void typeChanged(QString type)">
                <parameter type="QString" name="type" default=""/>
            </function>
            <function name="~ScreenPlaySDK" fullname="ScreenPlaySDK::~ScreenPlaySDK" href="screenplaysdk.html#dtor.ScreenPlaySDK" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="59" meta="destructor" virtual="virtual" const="false" static="false" final="false" override="false" type="" signature="~ScreenPlaySDK()"/>
            <struct name="QPrivateSignal" fullname="ScreenPlaySDK::QPrivateSignal" href="screenplaysdk-qprivatesignal.html" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="53"/>
            <property name="appID" fullname="ScreenPlaySDK::appID" href="screenplaysdk.html#appID-prop" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="63">
                <getter name="appID"/>
                <setter name="setAppID"/>
                <notifier name="appIDChanged"/>
            </property>
            <property name="isConnected" fullname="ScreenPlaySDK::isConnected" href="screenplaysdk.html#isConnected-prop" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="62">
                <getter name="isConnected"/>
                <setter name="setIsConnected"/>
                <notifier name="isConnectedChanged"/>
            </property>
            <property name="type" fullname="ScreenPlaySDK::type" href="screenplaysdk.html#type-prop" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="61">
                <getter name="type"/>
                <setter name="setType"/>
                <notifier name="typeChanged"/>
            </property>
            <variable name="m_appID" fullname="ScreenPlaySDK::m_appID" href="screenplaysdk.html#m_appID-var" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="148" type="QString" static="false"/>
            <variable name="m_isConnected" fullname="ScreenPlaySDK::m_isConnected" href="screenplaysdk.html#m_isConnected-var" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="146" type="bool" static="false"/>
            <variable name="m_pingAliveTimer" fullname="ScreenPlaySDK::m_pingAliveTimer" href="screenplaysdk.html#m_pingAliveTimer-var" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="149" type="QTimer" static="false"/>
            <variable name="m_socket" fullname="ScreenPlaySDK::m_socket" href="screenplaysdk.html#m_socket-var" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="143" type="QLocalSocket" static="false"/>
            <variable name="m_type" fullname="ScreenPlaySDK::m_type" href="screenplaysdk.html#m_type-var" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="145" type="QString" static="false"/>
            <variable name="staticMetaObject" fullname="ScreenPlaySDK::staticMetaObject" href="screenplaysdk.html#staticMetaObject-var" status="internal" access="private" location="screenplaysdk.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplaysdk.h" lineno="53" type="const QMetaObject" static="true"/>
        </class>
        <class name="ScreenPlaySysInfoPlugin" href="screenplaysysinfoplugin.html" status="internal" access="private" location="screenplaysysinfo_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/screenplaysysinfo_plugin.h" lineno="39" bases="QQmlExtensionPlugin">
            <function name="metaObject" fullname="ScreenPlaySysInfoPlugin::metaObject" href="screenplaysysinfoplugin.html#metaObject" status="internal" access="private" location="screenplaysysinfo_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/screenplaysysinfo_plugin.h" lineno="40" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_metacall" fullname="ScreenPlaySysInfoPlugin::qt_metacall" href="screenplaysysinfoplugin.html#qt_metacall" status="internal" access="private" location="screenplaysysinfo_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/screenplaysysinfo_plugin.h" lineno="40" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="ScreenPlaySysInfoPlugin::qt_metacast" href="screenplaysysinfoplugin.html#qt_metacast" status="internal" access="private" location="screenplaysysinfo_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/screenplaysysinfo_plugin.h" lineno="40" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="ScreenPlaySysInfoPlugin::qt_static_metacall" href="screenplaysysinfoplugin.html#qt_static_metacall" status="internal" access="private" location="screenplaysysinfo_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/screenplaysysinfo_plugin.h" lineno="40" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="registerTypes" fullname="ScreenPlaySysInfoPlugin::registerTypes" href="screenplaysysinfoplugin.html#registerTypes" status="internal" access="private" location="screenplaysysinfo_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/screenplaysysinfo_plugin.h" lineno="44" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void registerTypes(const char *uri) override">
                <parameter type="const char *" name="uri" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="ScreenPlaySysInfoPlugin::QPrivateSignal" href="screenplaysysinfoplugin-qprivatesignal.html" status="internal" access="private" location="screenplaysysinfo_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/screenplaysysinfo_plugin.h" lineno="40"/>
            <variable name="staticMetaObject" fullname="ScreenPlaySysInfoPlugin::staticMetaObject" href="screenplaysysinfoplugin.html#staticMetaObject-var" status="internal" access="private" location="screenplaysysinfo_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/screenplaysysinfo_plugin.h" lineno="40" type="const QMetaObject" static="true"/>
        </class>
        <class name="ScreenPlay_SDKPlugin" href="screenplay-sdkplugin.html" status="internal" access="private" location="screenplay-sdk_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplay-sdk_plugin.h" lineno="39" bases="QQmlExtensionPlugin">
            <function name="metaObject" fullname="ScreenPlay_SDKPlugin::metaObject" href="screenplay-sdkplugin.html#metaObject" status="internal" access="private" location="screenplay-sdk_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplay-sdk_plugin.h" lineno="40" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_metacall" fullname="ScreenPlay_SDKPlugin::qt_metacall" href="screenplay-sdkplugin.html#qt_metacall" status="internal" access="private" location="screenplay-sdk_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplay-sdk_plugin.h" lineno="40" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="ScreenPlay_SDKPlugin::qt_metacast" href="screenplay-sdkplugin.html#qt_metacast" status="internal" access="private" location="screenplay-sdk_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplay-sdk_plugin.h" lineno="40" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="ScreenPlay_SDKPlugin::qt_static_metacall" href="screenplay-sdkplugin.html#qt_static_metacall" status="internal" access="private" location="screenplay-sdk_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplay-sdk_plugin.h" lineno="40" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="registerTypes" fullname="ScreenPlay_SDKPlugin::registerTypes" href="screenplay-sdkplugin.html#registerTypes" status="internal" access="private" location="screenplay-sdk_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplay-sdk_plugin.h" lineno="44" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void registerTypes(const char *uri) override">
                <parameter type="const char *" name="uri" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="ScreenPlay_SDKPlugin::QPrivateSignal" href="screenplay-sdkplugin-qprivatesignal.html" status="internal" access="private" location="screenplay-sdk_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplay-sdk_plugin.h" lineno="40"/>
            <variable name="staticMetaObject" fullname="ScreenPlay_SDKPlugin::staticMetaObject" href="screenplay-sdkplugin.html#staticMetaObject-var" status="internal" access="private" location="screenplay-sdk_plugin.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySDK/inc/screenplay-sdk_plugin.h" lineno="40" type="const QMetaObject" static="true"/>
        </class>
        <qmlclass name="Search" qml-module-name="Search" href="qml-search.html" status="internal" access="private" location="Search.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Search.qml" lineno="7" title="Search" fulltitle="Search" subtitle=""/>
        <qmlclass name="SettingBool" qml-module-name="SettingBool" href="qml-settingbool.html" status="internal" access="private" location="SettingBool.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingBool.qml" lineno="7" title="SettingBool" fulltitle="SettingBool" subtitle="">
            <function name="checkboxChanged" fullname="SettingBool::checkboxChanged" href="qml-settingbool.html#checkboxChanged-signal" status="internal" access="private" location="SettingBool.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingBool.qml" lineno="26" meta="qmlsignal"/>
            <qmlproperty name="available" fullname="SettingBool::available" href="qml-settingbool.html#available-prop" status="internal" access="private" location="SettingBool.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingBool.qml" lineno="12" type="bool" attached="false" writable="true"/>
            <qmlproperty name="description" fullname="SettingBool::description" href="qml-settingbool.html#description-prop" status="internal" access="private" location="SettingBool.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingBool.qml" lineno="10" type="string" attached="false" writable="true"/>
            <qmlproperty name="headline" fullname="SettingBool::headline" href="qml-settingbool.html#headline-prop" status="internal" access="private" location="SettingBool.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingBool.qml" lineno="9" type="string" attached="false" writable="true"/>
            <qmlproperty name="isChecked" fullname="SettingBool::isChecked" href="qml-settingbool.html#isChecked-prop" status="internal" access="private" location="SettingBool.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingBool.qml" lineno="11" type="bool" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Settings" qml-module-name="Settings" href="qml-settings.html" status="internal" access="private" location="Settings.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/Settings.qml" lineno="15" title="Settings" fulltitle="Settings" subtitle="">
            <function name="indexOfValue" fullname="Settings::indexOfValue" href="qml-settings.html#indexOfValue-method" status="internal" access="private" location="Settings.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/Settings.qml" lineno="18" meta="qmlmethod"/>
        </qmlclass>
        <qmlclass name="SettingsButton" qml-module-name="SettingsButton" href="qml-settingsbutton.html" status="internal" access="private" location="SettingsButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsButton.qml" lineno="7" title="SettingsButton" fulltitle="SettingsButton" subtitle="">
            <function name="buttonPressed" fullname="SettingsButton::buttonPressed" href="qml-settingsbutton.html#buttonPressed-signal" status="internal" access="private" location="SettingsButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsButton.qml" lineno="30" meta="qmlsignal"/>
            <qmlproperty name="available" fullname="SettingsButton::available" href="qml-settingsbutton.html#available-prop" status="internal" access="private" location="SettingsButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsButton.qml" lineno="16" type="bool" attached="false" writable="true"/>
            <qmlproperty name="buttonText" fullname="SettingsButton::buttonText" href="qml-settingsbutton.html#buttonText-prop" status="internal" access="private" location="SettingsButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsButton.qml" lineno="13" type="string" attached="false" writable="true"/>
            <qmlproperty name="description" fullname="SettingsButton::description" href="qml-settingsbutton.html#description-prop" status="internal" access="private" location="SettingsButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsButton.qml" lineno="12" type="string" attached="false" writable="true"/>
            <qmlproperty name="enabled" fullname="SettingsButton::enabled" href="qml-settingsbutton.html#enabled-prop" status="internal" access="private" location="SettingsButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsButton.qml" lineno="15" type="bool" attached="false" writable="true"/>
            <qmlproperty name="headline" fullname="SettingsButton::headline" href="qml-settingsbutton.html#headline-prop" status="internal" access="private" location="SettingsButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsButton.qml" lineno="11" type="string" attached="false" writable="true"/>
            <qmlproperty name="icon" fullname="SettingsButton::icon" href="qml-settingsbutton.html#icon-prop" status="internal" access="private" location="SettingsButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsButton.qml" lineno="10" type="alias" attached="false" writable="true"/>
            <qmlproperty name="isChecked" fullname="SettingsButton::isChecked" href="qml-settingsbutton.html#isChecked-prop" status="internal" access="private" location="SettingsButton.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsButton.qml" lineno="14" type="bool" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="SettingsComboBox" qml-module-name="SettingsComboBox" href="qml-settingscombobox.html" status="internal" access="private" location="SettingsComboBox.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsComboBox.qml" lineno="7" title="SettingsComboBox" fulltitle="SettingsComboBox" subtitle="">
            <qmlproperty name="comboBox" fullname="SettingsComboBox::comboBox" href="qml-settingscombobox.html#comboBox-prop" status="internal" access="private" location="SettingsComboBox.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsComboBox.qml" lineno="12" type="alias" attached="false" writable="true"/>
            <qmlproperty name="description" fullname="SettingsComboBox::description" href="qml-settingscombobox.html#description-prop" status="internal" access="private" location="SettingsComboBox.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsComboBox.qml" lineno="10" type="string" attached="false" writable="true"/>
            <qmlproperty name="enabled" fullname="SettingsComboBox::enabled" href="qml-settingscombobox.html#enabled-prop" status="internal" access="private" location="SettingsComboBox.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsComboBox.qml" lineno="11" type="bool" attached="false" writable="true"/>
            <qmlproperty name="headline" fullname="SettingsComboBox::headline" href="qml-settingscombobox.html#headline-prop" status="internal" access="private" location="SettingsComboBox.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsComboBox.qml" lineno="9" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="SettingsExpander" qml-module-name="SettingsExpander" href="qml-settingsexpander.html" status="internal" access="private" location="SettingsExpander.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsExpander.qml" lineno="8" title="SettingsExpander" fulltitle="SettingsExpander" subtitle="">
            <function name="toggle" fullname="SettingsExpander::toggle" href="qml-settingsexpander.html#toggle-method" status="internal" access="private" location="SettingsExpander.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsExpander.qml" lineno="58" meta="qmlmethod"/>
            <qmlproperty name="text" fullname="SettingsExpander::text" href="qml-settingsexpander.html#text-prop" status="internal" access="private" location="SettingsExpander.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsExpander.qml" lineno="15" type="alias" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="SettingsHeader" qml-module-name="SettingsHeader" href="qml-settingsheader.html" status="internal" access="private" location="SettingsHeader.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsHeader.qml" lineno="6" title="SettingsHeader" fulltitle="SettingsHeader" subtitle="">
            <qmlproperty name="background" fullname="SettingsHeader::background" href="qml-settingsheader.html#background-prop" status="internal" access="private" location="SettingsHeader.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsHeader.qml" lineno="10" type="color" attached="false" writable="true"/>
            <qmlproperty name="image" fullname="SettingsHeader::image" href="qml-settingsheader.html#image-prop" status="internal" access="private" location="SettingsHeader.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsHeader.qml" lineno="12" type="url" attached="false" writable="true"/>
            <qmlproperty name="text" fullname="SettingsHeader::text" href="qml-settingsheader.html#text-prop" status="internal" access="private" location="SettingsHeader.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsHeader.qml" lineno="11" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="SettingsHorizontalSeperator" qml-module-name="SettingsHorizontalSeperator" href="qml-settingshorizontalseperator.html" status="internal" access="private" location="SettingsHorizontalSeperator.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsHorizontalSeperator.qml" lineno="4" title="SettingsHorizontalSeperator" fulltitle="SettingsHorizontalSeperator" subtitle="">
            <qmlproperty name="customColor" fullname="SettingsHorizontalSeperator::customColor" href="qml-settingshorizontalseperator.html#customColor-prop" status="internal" access="private" location="SettingsHorizontalSeperator.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsHorizontalSeperator.qml" lineno="7" type="color" attached="false" writable="true"/>
            <qmlproperty name="customHeight" fullname="SettingsHorizontalSeperator::customHeight" href="qml-settingshorizontalseperator.html#customHeight-prop" status="internal" access="private" location="SettingsHorizontalSeperator.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsHorizontalSeperator.qml" lineno="6" type="real" attached="false" writable="true"/>
            <qmlproperty name="customMargin" fullname="SettingsHorizontalSeperator::customMargin" href="qml-settingshorizontalseperator.html#customMargin-prop" status="internal" access="private" location="SettingsHorizontalSeperator.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsHorizontalSeperator.qml" lineno="8" type="real" attached="false" writable="true"/>
            <qmlproperty name="customWidth" fullname="SettingsHorizontalSeperator::customWidth" href="qml-settingshorizontalseperator.html#customWidth-prop" status="internal" access="private" location="SettingsHorizontalSeperator.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsHorizontalSeperator.qml" lineno="5" type="real" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="SettingsPage" qml-module-name="SettingsPage" href="qml-settingspage.html" status="internal" access="private" location="SettingsPage.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Settings/SettingsPage.qml" lineno="10" title="SettingsPage" fulltitle="SettingsPage" subtitle=""/>
        <qmlclass name="Shake" qml-module-name="Shake" href="qml-shake.html" status="internal" access="private" location="Shake.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Shake.qml" lineno="3" title="Shake" fulltitle="Shake" subtitle="">
            <function name="start" fullname="Shake::start" href="qml-shake.html#start-method" status="internal" access="private" location="Shake.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Shake.qml" lineno="5" meta="qmlmethod"/>
            <qmlproperty name="loopOffset" fullname="Shake::loopOffset" href="qml-shake.html#loopOffset-prop" status="internal" access="private" location="Shake.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Shake.qml" lineno="14" type="int" attached="false" writable="true"/>
            <qmlproperty name="loops" fullname="Shake::loops" href="qml-shake.html#loops-prop" status="internal" access="private" location="Shake.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Shake.qml" lineno="13" type="int" attached="false" writable="true"/>
            <qmlproperty name="offset" fullname="Shake::offset" href="qml-shake.html#offset-prop" status="internal" access="private" location="Shake.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Shake.qml" lineno="12" type="int" attached="false" writable="true"/>
            <qmlproperty name="shake" fullname="Shake::shake" href="qml-shake.html#shake-prop" status="internal" access="private" location="Shake.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Shake.qml" lineno="16" type="SequentialAnimation" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Sidebar" qml-module-name="Sidebar" href="qml-sidebar.html" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Sidebar.qml" lineno="10" title="Sidebar" fulltitle="Sidebar" subtitle="">
            <function name="indexOfValue" fullname="Sidebar::indexOfValue" href="qml-sidebar.html#indexOfValue-method" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Sidebar.qml" lineno="65" meta="qmlmethod"/>
            <function name="isWallpaper" fullname="Sidebar::isWallpaper" href="qml-sidebar.html#isWallpaper-method" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Sidebar.qml" lineno="54" meta="qmlmethod"/>
            <function name="isWidget" fullname="Sidebar::isWidget" href="qml-sidebar.html#isWidget-method" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Sidebar.qml" lineno="60" meta="qmlmethod"/>
            <function name="setWorkshopItem" fullname="Sidebar::setWorkshopItem" href="qml-sidebar.html#setWorkshopItem-method" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Sidebar.qml" lineno="55" meta="qmlmethod"/>
            <qmlproperty name="contentFolderName" fullname="Sidebar::contentFolderName" href="qml-sidebar.html#contentFolderName-prop" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Sidebar.qml" lineno="23" type="string" attached="false" writable="true"/>
            <qmlproperty name="imgUrl" fullname="Sidebar::imgUrl" href="qml-sidebar.html#imgUrl-prop" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Sidebar.qml" lineno="48" type="alias" attached="false" writable="true"/>
            <qmlproperty name="itemIndex" fullname="Sidebar::itemIndex" href="qml-sidebar.html#itemIndex-prop" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Sidebar.qml" lineno="51" type="int" attached="false" writable="true"/>
            <qmlproperty name="name" fullname="Sidebar::name" href="qml-sidebar.html#name-prop" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Sidebar.qml" lineno="49" type="string" attached="false" writable="true"/>
            <qmlproperty name="navHeight" fullname="Sidebar::navHeight" href="qml-sidebar.html#navHeight-prop" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Sidebar.qml" lineno="21" type="real" attached="false" writable="true"/>
            <qmlproperty name="subscribed" fullname="Sidebar::subscribed" href="qml-sidebar.html#subscribed-prop" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Sidebar.qml" lineno="53" type="bool" attached="false" writable="true"/>
            <qmlproperty name="subscriptionCount" fullname="Sidebar::subscriptionCount" href="qml-sidebar.html#subscriptionCount-prop" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Sidebar.qml" lineno="52" type="int" attached="false" writable="true"/>
            <qmlproperty name="type" fullname="Sidebar::type" href="qml-sidebar.html#type-prop" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Installed/Sidebar.qml" lineno="22" type="var" attached="false" writable="true"/>
            <qmlproperty name="videoPreview" fullname="Sidebar::videoPreview" href="qml-sidebar.html#videoPreview-prop" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Sidebar.qml" lineno="47" type="url" attached="false" writable="true"/>
            <qmlproperty name="workshopID" fullname="Sidebar::workshopID" href="qml-sidebar.html#workshopID-prop" status="internal" access="private" location="Sidebar.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Sidebar.qml" lineno="50" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Slider" qml-module-name="Slider" href="qml-slider.html" status="internal" access="private" location="Slider.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Slider.qml" lineno="7" title="Slider" fulltitle="Slider" subtitle="">
            <qmlproperty name="headline" fullname="Slider::headline" href="qml-slider.html#headline-prop" status="internal" access="private" location="Slider.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Slider.qml" lineno="11" type="string" attached="false" writable="true"/>
            <qmlproperty name="iconSource" fullname="Slider::iconSource" href="qml-slider.html#iconSource-prop" status="internal" access="private" location="Slider.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Slider.qml" lineno="12" type="string" attached="false" writable="true"/>
            <qmlproperty name="slider" fullname="Slider::slider" href="qml-slider.html#slider-prop" status="internal" access="private" location="Slider.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Slider.qml" lineno="13" type="alias" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="SteamNotAvailable" qml-module-name="SteamNotAvailable" href="qml-steamnotavailable.html" status="internal" access="private" location="SteamNotAvailable.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Dialogs/SteamNotAvailable.qml" lineno="5" title="SteamNotAvailable" fulltitle="SteamNotAvailable" subtitle=""/>
        <class name="Storage" href="storage.html" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="43" bases="QAbstractListModel">
            <function name="Storage" fullname="Storage::Storage" href="storage.html#Storage" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="46" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="Storage(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="data" fullname="Storage::data" href="storage.html#data" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="64" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QVariant" signature="QVariant data(const QModelIndex &amp;index, int role) const override">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <parameter type="int" name="role" default="Qt::DisplayRole"/>
            </function>
            <function name="loadStorageDevices" fullname="Storage::loadStorageDevices" href="storage.html#loadStorageDevices" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="72" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void loadStorageDevices()"/>
            <function name="metaObject" fullname="Storage::metaObject" href="storage.html#metaObject" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="44" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_getEnumMetaObject" href="storage.html#qt_getEnumMetaObject" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="60" related="16" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * qt_getEnumMetaObject(Storage::StorageRole)">
                <parameter type="Storage::StorageRole" name="" default=""/>
            </function>
            <function name="qt_getEnumName" href="storage.html#qt_getEnumName" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="60" related="17" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="const char *" signature="const char * qt_getEnumName(Storage::StorageRole)">
                <parameter type="Storage::StorageRole" name="" default=""/>
            </function>
            <function name="qt_metacall" fullname="Storage::qt_metacall" href="storage.html#qt_metacall" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="44" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="Storage::qt_metacast" href="storage.html#qt_metacast" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="44" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="Storage::qt_static_metacall" href="storage.html#qt_static_metacall" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="44" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="refresh" fullname="Storage::refresh" href="storage.html#refresh" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="67" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void refresh()"/>
            <function name="reset" fullname="Storage::reset" href="storage.html#reset" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="68" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void reset()"/>
            <function name="roleNames" fullname="Storage::roleNames" href="storage.html#roleNames" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="62" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="QHash&lt;int, QByteArray&gt;" signature="QHash&lt;int, QByteArray&gt; roleNames() const override"/>
            <function name="rowCount" fullname="Storage::rowCount" href="storage.html#rowCount" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="63" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="int" signature="int rowCount(const QModelIndex &amp;parent) const override">
                <parameter type="const QModelIndex &amp;" name="parent" default="QModelIndex()"/>
            </function>
            <struct name="QPrivateSignal" fullname="Storage::QPrivateSignal" href="storage-qprivatesignal.html" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="44"/>
            <enum name="StorageRole" fullname="Storage::StorageRole" href="storage.html#StorageRole-enum" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="48" scoped="true">
                <value name="BytesAvailable" value="Qt::UserRole"/>
                <value name="BytesFree" value="257"/>
                <value name="BytesTotal" value="258"/>
                <value name="DisplayName" value="259"/>
                <value name="FileSystemType" value="260"/>
                <value name="IsReadOnly" value="261"/>
                <value name="IsReady" value="262"/>
                <value name="IsRoot" value="263"/>
                <value name="IsValid" value="264"/>
                <value name="Name" value="265"/>
            </enum>
            <variable name="m_storageInfoList" fullname="Storage::m_storageInfoList" href="storage.html#m_storageInfoList-var" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="75" type="QVector&lt;QStorageInfo&gt;" static="false"/>
            <variable name="staticMetaObject" fullname="Storage::staticMetaObject" href="storage.html#staticMetaObject-var" status="internal" access="private" location="storage.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/storage.h" lineno="44" type="const QMetaObject" static="true"/>
        </class>
        <class name="SysInfo" href="sysinfo.html" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="44" bases="QQuickItem">
            <function name="SysInfo" fullname="SysInfo::SysInfo" href="sysinfo.html#SysInfo" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="52" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="SysInfo(QQuickItem *parent)">
                <parameter type="QQuickItem *" name="parent" default="nullptr"/>
            </function>
            <function name="cpu" fullname="SysInfo::cpu" href="sysinfo.html#cpu-prop" status="active" access="public" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="60" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="cpu" type="CPU *" signature="CPU * cpu() const"/>
            <function name="cpuChanged" fullname="SysInfo::cpuChanged" href="sysinfo.html#cpu-prop" status="active" access="public" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="72" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="cpu" type="void" signature="void cpuChanged(CPU *cpu)">
                <parameter type="CPU *" name="cpu" default=""/>
            </function>
            <function name="metaObject" fullname="SysInfo::metaObject" href="sysinfo.html#metaObject" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="45" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_metacall" fullname="SysInfo::qt_metacall" href="sysinfo.html#qt_metacall" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="45" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="SysInfo::qt_metacast" href="sysinfo.html#qt_metacast" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="45" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="SysInfo::qt_static_metacall" href="sysinfo.html#qt_static_metacall" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="45" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="ram" fullname="SysInfo::ram" href="sysinfo.html#ram-prop" status="active" access="public" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="55" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="ram" type="RAM *" signature="RAM * ram() const"/>
            <function name="ramChanged" fullname="SysInfo::ramChanged" href="sysinfo.html#ram-prop" status="active" access="public" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="71" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="ram" type="void" signature="void ramChanged(RAM *ram)">
                <parameter type="RAM *" name="ram" default=""/>
            </function>
            <function name="storage" fullname="SysInfo::storage" href="sysinfo.html#storage-prop" status="active" access="public" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="65" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="storage" type="Storage *" signature="Storage * storage() const"/>
            <function name="storageChanged" fullname="SysInfo::storageChanged" href="sysinfo.html#storage-prop" status="active" access="public" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="73" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="storage" type="void" signature="void storageChanged(Storage *storage)">
                <parameter type="Storage *" name="storage" default=""/>
            </function>
            <function name="~SysInfo" fullname="SysInfo::~SysInfo" href="sysinfo.html#dtor.SysInfo" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="53" meta="destructor" virtual="virtual" const="false" static="false" final="false" override="false" type="" signature="~SysInfo()"/>
            <struct name="QPrivateSignal" fullname="SysInfo::QPrivateSignal" href="sysinfo-qprivatesignal.html" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="45"/>
            <property name="cpu" fullname="SysInfo::cpu" href="sysinfo.html#cpu-prop" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="48">
                <getter name="cpu"/>
                <notifier name="cpuChanged"/>
            </property>
            <property name="ram" fullname="SysInfo::ram" href="sysinfo.html#ram-prop" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="47">
                <getter name="ram"/>
                <notifier name="ramChanged"/>
            </property>
            <property name="storage" fullname="SysInfo::storage" href="sysinfo.html#storage-prop" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="49">
                <getter name="storage"/>
                <notifier name="storageChanged"/>
            </property>
            <variable name="m_cpu" fullname="SysInfo::m_cpu" href="sysinfo.html#m_cpu-var" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="77" type="std::unique_ptr&lt;CPU&gt;" static="false"/>
            <variable name="m_ram" fullname="SysInfo::m_ram" href="sysinfo.html#m_ram-var" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="76" type="std::unique_ptr&lt;RAM&gt;" static="false"/>
            <variable name="m_storage" fullname="SysInfo::m_storage" href="sysinfo.html#m_storage-var" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="78" type="std::unique_ptr&lt;Storage&gt;" static="false"/>
            <variable name="staticMetaObject" fullname="SysInfo::staticMetaObject" href="sysinfo.html#staticMetaObject-var" status="internal" access="private" location="sysinfo.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlaySysInfo/sysinfo.h" lineno="45" type="const QMetaObject" static="true"/>
        </class>
        <qmlclass name="Tag" qml-module-name="Tag" href="qml-tag.html" status="internal" access="private" location="Tag.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Tag.qml" lineno="6" title="Tag" fulltitle="Tag" subtitle="">
            <function name="removeThis" fullname="Tag::removeThis" href="qml-tag.html#removeThis-signal" status="internal" access="private" location="Tag.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Tag.qml" lineno="13" meta="qmlsignal"/>
            <qmlproperty name="itemIndex" fullname="Tag::itemIndex" href="qml-tag.html#itemIndex-prop" status="internal" access="private" location="Tag.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Tag.qml" lineno="11" type="int" attached="false" writable="true"/>
            <qmlproperty name="text" fullname="Tag::text" href="qml-tag.html#text-prop" status="internal" access="private" location="Tag.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/Tag.qml" lineno="12" type="alias" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="TagSelector" qml-module-name="TagSelector" href="qml-tagselector.html" status="internal" access="private" location="TagSelector.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/TagSelector.qml" lineno="7" title="TagSelector" fulltitle="TagSelector" subtitle="">
            <function name="getTags" fullname="TagSelector::getTags" href="qml-tagselector.html#getTags-method" status="internal" access="private" location="TagSelector.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/TagSelector.qml" lineno="19" meta="qmlmethod"/>
        </qmlclass>
        <qmlclass name="Test" qml-module-name="Test" href="qml-test.html" status="internal" access="private" location="Test.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/Test.qml" lineno="3" title="Test" fulltitle="Test" subtitle="">
            <qmlproperty name="attStrength" fullname="Test::attStrength" href="qml-test.html#attStrength-prop" status="internal" access="private" location="Test.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Test.qml" lineno="12" type="int" attached="false" writable="true"/>
            <qmlproperty name="emitRate" fullname="Test::emitRate" href="qml-test.html#emitRate-prop" status="internal" access="private" location="Test.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Test.qml" lineno="15" type="int" attached="false" writable="true"/>
            <qmlproperty name="endSize" fullname="Test::endSize" href="qml-test.html#endSize-prop" status="internal" access="private" location="Test.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Test.qml" lineno="18" type="int" attached="false" writable="true"/>
            <qmlproperty name="imgOpacity" fullname="Test::imgOpacity" href="qml-test.html#imgOpacity-prop" status="internal" access="private" location="Test.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Test.qml" lineno="22" type="real" attached="false" writable="true"/>
            <qmlproperty name="isEnabled" fullname="Test::isEnabled" href="qml-test.html#isEnabled-prop" status="internal" access="private" location="Test.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Test.qml" lineno="14" type="bool" attached="false" writable="true"/>
            <qmlproperty name="lifeSpan" fullname="Test::lifeSpan" href="qml-test.html#lifeSpan-prop" status="internal" access="private" location="Test.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Test.qml" lineno="16" type="int" attached="false" writable="true"/>
            <qmlproperty name="size" fullname="Test::size" href="qml-test.html#size-prop" status="internal" access="private" location="Test.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Test.qml" lineno="17" type="int" attached="false" writable="true"/>
            <qmlproperty name="sizeVariation" fullname="Test::sizeVariation" href="qml-test.html#sizeVariation-prop" status="internal" access="private" location="Test.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Test.qml" lineno="19" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="TrayIcon" qml-module-name="TrayIcon" href="qml-trayicon.html" status="internal" access="private" location="TrayIcon.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Common/TrayIcon.qml" lineno="5" title="TrayIcon" fulltitle="TrayIcon" subtitle=""/>
        <qmlclass name="UploadProject" qml-module-name="UploadProject" href="qml-uploadproject.html" status="internal" access="private" location="UploadProject.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProject.qml" lineno="9" title="UploadProject" fulltitle="UploadProject" subtitle=""/>
        <qmlclass name="UploadProjectBigItem" qml-module-name="UploadProjectBigItem" href="qml-uploadprojectbigitem.html" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="12" title="UploadProjectBigItem" fulltitle="UploadProjectBigItem" subtitle="">
            <function name="itemClicked" fullname="UploadProjectBigItem::itemClicked" href="qml-uploadprojectbigitem.html#itemClicked-signal" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="28" meta="qmlsignal"/>
            <qmlproperty name="absoluteStoragePath" fullname="UploadProjectBigItem::absoluteStoragePath" href="qml-uploadprojectbigitem.html#absoluteStoragePath-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="21" type="string" attached="false" writable="true"/>
            <qmlproperty name="checkBox" fullname="UploadProjectBigItem::checkBox" href="qml-uploadprojectbigitem.html#checkBox-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="18" type="alias" attached="false" writable="true"/>
            <qmlproperty name="customTitle" fullname="UploadProjectBigItem::customTitle" href="qml-uploadprojectbigitem.html#customTitle-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="20" type="string" attached="false" writable="true"/>
            <qmlproperty name="hasMenuOpen" fullname="UploadProjectBigItem::hasMenuOpen" href="qml-uploadprojectbigitem.html#hasMenuOpen-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="25" type="bool" attached="false" writable="true"/>
            <qmlproperty name="isProjectValid" fullname="UploadProjectBigItem::isProjectValid" href="qml-uploadprojectbigitem.html#isProjectValid-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="16" type="bool" attached="false" writable="true"/>
            <qmlproperty name="isSelected" fullname="UploadProjectBigItem::isSelected" href="qml-uploadprojectbigitem.html#isSelected-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="19" type="bool" attached="false" writable="true"/>
            <qmlproperty name="itemIndex" fullname="UploadProjectBigItem::itemIndex" href="qml-uploadprojectbigitem.html#itemIndex-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="27" type="int" attached="false" writable="true"/>
            <qmlproperty name="preview" fullname="UploadProjectBigItem::preview" href="qml-uploadprojectbigitem.html#preview-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="23" type="string" attached="false" writable="true"/>
            <qmlproperty name="screenId" fullname="UploadProjectBigItem::screenId" href="qml-uploadprojectbigitem.html#screenId-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="22" type="string" attached="false" writable="true"/>
            <qmlproperty name="type" fullname="UploadProjectBigItem::type" href="qml-uploadprojectbigitem.html#type-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="24" type="string" attached="false" writable="true"/>
            <qmlproperty name="workshopID" fullname="UploadProjectBigItem::workshopID" href="qml-uploadprojectbigitem.html#workshopID-prop" status="internal" access="private" location="UploadProjectBigItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectBigItem.qml" lineno="26" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="UploadProjectItem" qml-module-name="UploadProjectItem" href="qml-uploadprojectitem.html" status="internal" access="private" location="UploadProjectItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectItem.qml" lineno="12" title="UploadProjectItem" fulltitle="UploadProjectItem" subtitle="">
            <qmlproperty name="name" fullname="UploadProjectItem::name" href="qml-uploadprojectitem.html#name-prop" status="internal" access="private" location="UploadProjectItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectItem.qml" lineno="33" type="string" attached="false" writable="true"/>
            <qmlproperty name="previewImagePath" fullname="UploadProjectItem::previewImagePath" href="qml-uploadprojectitem.html#previewImagePath-prop" status="internal" access="private" location="UploadProjectItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectItem.qml" lineno="29" type="string" attached="false" writable="true"/>
            <qmlproperty name="progress" fullname="UploadProjectItem::progress" href="qml-uploadprojectitem.html#progress-prop" status="internal" access="private" location="UploadProjectItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectItem.qml" lineno="32" type="real" attached="false" writable="true"/>
            <qmlproperty name="steamStatus" fullname="UploadProjectItem::steamStatus" href="qml-uploadprojectitem.html#steamStatus-prop" status="internal" access="private" location="UploadProjectItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/upload/UploadProjectItem.qml" lineno="34" type="var" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Wallpaper" qml-module-name="Wallpaper" href="qml-wallpaper.html" status="internal" access="private" location="Wallpaper.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Wallpaper.qml" lineno="7" title="Wallpaper" fulltitle="Wallpaper" subtitle="">
            <function name="fadeIn" fullname="Wallpaper::fadeIn" href="qml-wallpaper.html#fadeIn-method" status="internal" access="private" location="Wallpaper.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Wallpaper.qml" lineno="85" meta="qmlmethod"/>
            <function name="init" fullname="Wallpaper::init" href="qml-wallpaper.html#init-method" status="internal" access="private" location="Wallpaper.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Wallpaper.qml" lineno="67" meta="qmlmethod"/>
            <qmlproperty name="canFadeByWallpaperFillMode" fullname="Wallpaper::canFadeByWallpaperFillMode" href="qml-wallpaper.html#canFadeByWallpaperFillMode-prop" status="internal" access="private" location="Wallpaper.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/Wallpaper.qml" lineno="18" type="bool" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="WebView" qml-module-name="WebView" href="qml-webview.html" status="internal" access="private" location="WebView.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/WebView.qml" lineno="6" title="WebView" fulltitle="WebView" subtitle="">
            <function name="getSetVideoCommand" fullname="WebView::getSetVideoCommand" href="qml-webview.html#getSetVideoCommand-method" status="internal" access="private" location="WebView.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/WebView.qml" lineno="23" meta="qmlmethod"/>
            <function name="requestFadeIn" fullname="WebView::requestFadeIn" href="qml-webview.html#requestFadeIn-signal" status="internal" access="private" location="WebView.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/WebView.qml" lineno="10" meta="qmlsignal"/>
            <qmlproperty name="url" fullname="WebView::url" href="qml-webview.html#url-prop" status="internal" access="private" location="WebView.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/WebView.qml" lineno="8" type="alias" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Widget" qml-module-name="Widget" href="qml-widget.html" status="internal" access="private" location="Widget.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/Widget.qml" lineno="6" title="Widget" fulltitle="Widget" subtitle=""/>
        <class name="WidgetWindow" href="widgetwindow.html" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="62" bases="QObject">
            <function name="WidgetWindow" fullname="WidgetWindow::WidgetWindow" href="widgetwindow.html#WidgetWindow" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="66" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="WidgetWindow(const QString &amp;projectPath, const QString &amp;appid, const QString &amp;type, const QPoint &amp;position)">
                <parameter type="const QString &amp;" name="projectPath" default=""/>
                <parameter type="const QString &amp;" name="appid" default=""/>
                <parameter type="const QString &amp;" name="type" default=""/>
                <parameter type="const QPoint &amp;" name="position" default=""/>
            </function>
            <function name="appID" fullname="WidgetWindow::appID" href="widgetwindow.html#appID-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="78" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="appID" type="QString" signature="QString appID() const"/>
            <function name="appIDChanged" fullname="WidgetWindow::appIDChanged" href="widgetwindow.html#appID-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="106" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void appIDChanged(QString appID)">
                <parameter type="QString" name="appID" default=""/>
            </function>
            <function name="clearComponentCache" fullname="WidgetWindow::clearComponentCache" href="widgetwindow.html#clearComponentCache" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="121" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void clearComponentCache()"/>
            <function name="cursorPos" fullname="WidgetWindow::cursorPos" href="widgetwindow.html#cursorPos" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="156" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="QPointF" signature="QPointF cursorPos()"/>
            <function name="destroyThis" fullname="WidgetWindow::destroyThis" href="widgetwindow.html#destroyThis" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="116" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void destroyThis()"/>
            <function name="messageReceived" fullname="WidgetWindow::messageReceived" href="widgetwindow.html#messageReceived" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="117" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void messageReceived(QString key, QString value)">
                <parameter type="QString" name="key" default=""/>
                <parameter type="QString" name="value" default=""/>
            </function>
            <function name="metaObject" fullname="WidgetWindow::metaObject" href="widgetwindow.html#metaObject" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="63" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="position" fullname="WidgetWindow::position" href="widgetwindow.html#position-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="98" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="position" type="QPoint" signature="QPoint position() const"/>
            <function name="positionChanged" fullname="WidgetWindow::positionChanged" href="widgetwindow.html#position-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="112" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="position" type="void" signature="void positionChanged(QPoint position)">
                <parameter type="QPoint" name="position" default=""/>
            </function>
            <function name="projectConfig" fullname="WidgetWindow::projectConfig" href="widgetwindow.html#projectConfig-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="88" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="projectConfig" type="QString" signature="QString projectConfig() const"/>
            <function name="projectConfigChanged" fullname="WidgetWindow::projectConfigChanged" href="widgetwindow.html#projectConfig-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="108" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="projectConfig" type="void" signature="void projectConfigChanged(QString projectConfig)">
                <parameter type="QString" name="projectConfig" default=""/>
            </function>
            <function name="qmlExit" fullname="WidgetWindow::qmlExit" href="widgetwindow.html#qmlExit" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="104" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qmlExit()"/>
            <function name="qmlSceneValueReceived" fullname="WidgetWindow::qmlSceneValueReceived" href="widgetwindow.html#qmlSceneValueReceived" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="110" meta="signal" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void qmlSceneValueReceived(QString key, QString value)">
                <parameter type="QString" name="key" default=""/>
                <parameter type="QString" name="value" default=""/>
            </function>
            <function name="qt_metacall" fullname="WidgetWindow::qt_metacall" href="widgetwindow.html#qt_metacall" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="63" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="WidgetWindow::qt_metacast" href="widgetwindow.html#qt_metacast" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="63" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="WidgetWindow::qt_static_metacall" href="widgetwindow.html#qt_static_metacall" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="63" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="setAppID" fullname="WidgetWindow::setAppID" href="widgetwindow.html#appID-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="123" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="appID" type="void" signature="void setAppID(QString appID)">
                <parameter type="QString" name="appID" default=""/>
            </function>
            <function name="setClickPos" fullname="WidgetWindow::setClickPos" href="widgetwindow.html#setClickPos" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="119" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setClickPos(const QPoint &amp;clickPos)">
                <parameter type="const QPoint &amp;" name="clickPos" default=""/>
            </function>
            <function name="setPos" fullname="WidgetWindow::setPos" href="widgetwindow.html#setPos" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="118" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setPos(int xPos, int yPos)">
                <parameter type="int" name="xPos" default=""/>
                <parameter type="int" name="yPos" default=""/>
            </function>
            <function name="setPosition" fullname="WidgetWindow::setPosition" href="widgetwindow.html#position-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="162" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="position" type="void" signature="void setPosition(QPoint position)">
                <parameter type="QPoint" name="position" default=""/>
            </function>
            <function name="setProjectConfig" fullname="WidgetWindow::setProjectConfig" href="widgetwindow.html#projectConfig-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="139" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="projectConfig" type="void" signature="void setProjectConfig(QString projectConfig)">
                <parameter type="QString" name="projectConfig" default=""/>
            </function>
            <function name="setSize" fullname="WidgetWindow::setSize" href="widgetwindow.html#setSize" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="115" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setSize(QSize size)">
                <parameter type="QSize" name="size" default=""/>
            </function>
            <function name="setSourcePath" fullname="WidgetWindow::setSourcePath" href="widgetwindow.html#sourcePath-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="147" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="sourcePath" type="void" signature="void setSourcePath(QString sourcePath)">
                <parameter type="QString" name="sourcePath" default=""/>
            </function>
            <function name="setType" fullname="WidgetWindow::setType" href="widgetwindow.html#type-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="131" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void setType(QString type)">
                <parameter type="QString" name="type" default=""/>
            </function>
            <function name="setWidgetSize" fullname="WidgetWindow::setWidgetSize" href="widgetwindow.html#setWidgetSize" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="120" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setWidgetSize(const int with, const int height)">
                <parameter type="const int" name="with" default=""/>
                <parameter type="const int" name="height" default=""/>
            </function>
            <function name="setWindowBlur" fullname="WidgetWindow::setWindowBlur" href="widgetwindow.html#setWindowBlur" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="159" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setWindowBlur(unsigned int style)">
                <parameter type="unsigned int" name="style" default="3"/>
            </function>
            <function name="sourcePath" fullname="WidgetWindow::sourcePath" href="widgetwindow.html#sourcePath-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="93" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="sourcePath" type="QString" signature="QString sourcePath() const"/>
            <function name="sourcePathChanged" fullname="WidgetWindow::sourcePathChanged" href="widgetwindow.html#sourcePath-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="109" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="sourcePath" type="void" signature="void sourcePathChanged(QString sourcePath)">
                <parameter type="QString" name="sourcePath" default=""/>
            </function>
            <function name="type" fullname="WidgetWindow::type" href="widgetwindow.html#type-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="83" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="type" type="QString" signature="QString type() const"/>
            <function name="typeChanged" fullname="WidgetWindow::typeChanged" href="widgetwindow.html#type-prop" status="active" access="public" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="107" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="type" type="void" signature="void typeChanged(QString type)">
                <parameter type="QString" name="type" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="WidgetWindow::QPrivateSignal" href="widgetwindow-qprivatesignal.html" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="63"/>
            <property name="appID" fullname="WidgetWindow::appID" href="widgetwindow.html#appID-prop" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="72">
                <getter name="appID"/>
                <setter name="setAppID"/>
                <notifier name="appIDChanged"/>
            </property>
            <property name="position" fullname="WidgetWindow::position" href="widgetwindow.html#position-prop" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="76">
                <getter name="position"/>
                <setter name="setPosition"/>
                <notifier name="positionChanged"/>
            </property>
            <property name="projectConfig" fullname="WidgetWindow::projectConfig" href="widgetwindow.html#projectConfig-prop" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="74">
                <getter name="projectConfig"/>
                <setter name="setProjectConfig"/>
                <notifier name="projectConfigChanged"/>
            </property>
            <property name="sourcePath" fullname="WidgetWindow::sourcePath" href="widgetwindow.html#sourcePath-prop" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="75">
                <getter name="sourcePath"/>
                <setter name="setSourcePath"/>
                <notifier name="sourcePathChanged"/>
            </property>
            <property name="type" fullname="WidgetWindow::type" href="widgetwindow.html#type-prop" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="73">
                <getter name="type"/>
                <setter name="setType"/>
                <notifier name="typeChanged"/>
            </property>
            <variable name="m_appID" fullname="WidgetWindow::m_appID" href="widgetwindow.html#m_appID-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="172" type="QString" static="false"/>
            <variable name="m_clickPos" fullname="WidgetWindow::m_clickPos" href="widgetwindow.html#m_clickPos-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="178" type="QPoint" static="false"/>
            <variable name="m_hwnd" fullname="WidgetWindow::m_hwnd" href="widgetwindow.html#m_hwnd-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="183" type="HWND" static="false"/>
            <variable name="m_lastPos" fullname="WidgetWindow::m_lastPos" href="widgetwindow.html#m_lastPos-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="179" type="QPoint" static="false"/>
            <variable name="m_position" fullname="WidgetWindow::m_position" href="widgetwindow.html#m_position-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="185" type="QPoint" static="false"/>
            <variable name="m_positionMessageLimiter" fullname="WidgetWindow::m_positionMessageLimiter" href="widgetwindow.html#m_positionMessageLimiter-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="187" type="QTimer" static="false"/>
            <variable name="m_project" fullname="WidgetWindow::m_project" href="widgetwindow.html#m_project-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="177" type="QJsonObject" static="false"/>
            <variable name="m_projectConfig" fullname="WidgetWindow::m_projectConfig" href="widgetwindow.html#m_projectConfig-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="174" type="QString" static="false"/>
            <variable name="m_sdk" fullname="WidgetWindow::m_sdk" href="widgetwindow.html#m_sdk-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="186" type="int" static="false"/>
            <variable name="m_sourcePath" fullname="WidgetWindow::m_sourcePath" href="widgetwindow.html#m_sourcePath-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="175" type="QString" static="false"/>
            <variable name="m_type" fullname="WidgetWindow::m_type" href="widgetwindow.html#m_type-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="173" type="QString" static="false"/>
            <variable name="m_window" fullname="WidgetWindow::m_window" href="widgetwindow.html#m_window-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="180" type="QQuickView" static="false"/>
            <variable name="staticMetaObject" fullname="WidgetWindow::staticMetaObject" href="widgetwindow.html#staticMetaObject-var" status="internal" access="private" location="widgetwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWidget/src/widgetwindow.h" lineno="63" type="const QMetaObject" static="true"/>
        </class>
        <class name="WinWindow" href="winwindow.html" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="55" bases="BaseWindow">
            <function name="WinWindow" fullname="WinWindow::WinWindow" href="winwindow.html#WinWindow" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="61" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="WinWindow(const QVector&lt;int&gt; &amp;activeScreensList, const QString &amp;projectPath, const QString &amp;id, const QString &amp;volume, const QString &amp;fillmode, const bool checkWallpaperVisible)">
                <parameter type="const QVector&lt;int&gt; &amp;" name="activeScreensList" default=""/>
                <parameter type="const QString &amp;" name="projectPath" default=""/>
                <parameter type="const QString &amp;" name="id" default=""/>
                <parameter type="const QString &amp;" name="volume" default=""/>
                <parameter type="const QString &amp;" name="fillmode" default=""/>
                <parameter type="const bool" name="checkWallpaperVisible" default=""/>
            </function>
            <function name="calcOffsets" fullname="WinWindow::calcOffsets" href="winwindow.html#calcOffsets" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="87" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void calcOffsets()"/>
            <function name="checkForFullScreenWindow" fullname="WinWindow::checkForFullScreenWindow" href="winwindow.html#checkForFullScreenWindow" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="95" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void checkForFullScreenWindow()"/>
            <function name="clearComponentCache" fullname="WinWindow::clearComponentCache" href="winwindow.html#clearComponentCache" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="72" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void clearComponentCache()"/>
            <function name="destroyThis" fullname="WinWindow::destroyThis" href="winwindow.html#destroyThis" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="70" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void destroyThis() override"/>
            <function name="metaObject" fullname="WinWindow::metaObject" href="winwindow.html#metaObject" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="56" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="qt_metacall" fullname="WinWindow::qt_metacall" href="winwindow.html#qt_metacall" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="56" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="WinWindow::qt_metacast" href="winwindow.html#qt_metacast" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="56" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="WinWindow::qt_static_metacall" href="winwindow.html#qt_static_metacall" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="56" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="searchWorkerWindowToParentTo" fullname="WinWindow::searchWorkerWindowToParentTo" href="winwindow.html#searchWorkerWindowToParentTo" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="92" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="bool" signature="bool searchWorkerWindowToParentTo()"/>
            <function name="setVisible" fullname="WinWindow::setVisible" href="winwindow.html#setVisible" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="69" meta="slot" virtual="virtual" const="false" static="false" final="false" override="true" type="void" signature="void setVisible(bool show) override">
                <parameter type="bool" name="show" default=""/>
            </function>
            <function name="setWindowsDesktopProperties" fullname="WinWindow::setWindowsDesktopProperties" href="winwindow.html#windowsDesktopProperties-prop" status="active" access="public" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="74" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="windowsDesktopProperties" type="void" signature="void setWindowsDesktopProperties(WindowsDesktopProperties *windowsDesktopProperties)">
                <parameter type="WindowsDesktopProperties *" name="windowsDesktopProperties" default=""/>
            </function>
            <function name="setupWallpaperForAllScreens" fullname="WinWindow::setupWallpaperForAllScreens" href="winwindow.html#setupWallpaperForAllScreens" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="89" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setupWallpaperForAllScreens()"/>
            <function name="setupWallpaperForMultipleScreens" fullname="WinWindow::setupWallpaperForMultipleScreens" href="winwindow.html#setupWallpaperForMultipleScreens" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="90" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setupWallpaperForMultipleScreens(const QVector&lt;int&gt; &amp;activeScreensList)">
                <parameter type="const QVector&lt;int&gt; &amp;" name="activeScreensList" default=""/>
            </function>
            <function name="setupWallpaperForOneScreen" fullname="WinWindow::setupWallpaperForOneScreen" href="winwindow.html#setupWallpaperForOneScreen" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="88" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setupWallpaperForOneScreen(int activeScreen)">
                <parameter type="int" name="activeScreen" default=""/>
            </function>
            <function name="setupWindowMouseHook" fullname="WinWindow::setupWindowMouseHook" href="winwindow.html#setupWindowMouseHook" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="91" meta="plain" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void setupWindowMouseHook()"/>
            <function name="terminate" fullname="WinWindow::terminate" href="winwindow.html#terminate" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="71" meta="slot" virtual="non" const="false" static="false" final="false" override="false" type="void" signature="void terminate()"/>
            <function name="windowsDesktopProperties" fullname="WinWindow::windowsDesktopProperties" href="winwindow.html#windowsDesktopProperties-prop" status="active" access="public" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="63" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="windowsDesktopProperties" type="WindowsDesktopProperties *" signature="WindowsDesktopProperties * windowsDesktopProperties() const"/>
            <function name="windowsDesktopPropertiesChanged" fullname="WinWindow::windowsDesktopPropertiesChanged" href="winwindow.html#windowsDesktopProperties-prop" status="active" access="public" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="84" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="windowsDesktopProperties" type="void" signature="void windowsDesktopPropertiesChanged(WindowsDesktopProperties *windowsDesktopProperties)">
                <parameter type="WindowsDesktopProperties *" name="windowsDesktopProperties" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="WinWindow::QPrivateSignal" href="winwindow-qprivatesignal.html" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="56"/>
            <property name="windowsDesktopProperties" fullname="WinWindow::windowsDesktopProperties" href="winwindow.html#windowsDesktopProperties-prop" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="58">
                <getter name="windowsDesktopProperties"/>
                <setter name="setWindowsDesktopProperties"/>
                <notifier name="windowsDesktopPropertiesChanged"/>
            </property>
            <variable name="m_checkForFullScreenWindowTimer" fullname="WinWindow::m_checkForFullScreenWindowTimer" href="winwindow.html#m_checkForFullScreenWindowTimer-var" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="103" type="QTimer" static="false"/>
            <variable name="m_window" fullname="WinWindow::m_window" href="winwindow.html#m_window-var" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="100" type="QQuickView" static="false"/>
            <variable name="m_windowHandle" fullname="WinWindow::m_windowHandle" href="winwindow.html#m_windowHandle-var" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="101" type="HWND" static="false"/>
            <variable name="m_windowHandleWorker" fullname="WinWindow::m_windowHandleWorker" href="winwindow.html#m_windowHandleWorker-var" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="102" type="HWND" static="false"/>
            <variable name="m_windowOffsetX" fullname="WinWindow::m_windowOffsetX" href="winwindow.html#m_windowOffsetX-var" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="98" type="int" static="false"/>
            <variable name="m_windowOffsetY" fullname="WinWindow::m_windowOffsetY" href="winwindow.html#m_windowOffsetY-var" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="99" type="int" static="false"/>
            <variable name="m_windowsDesktopProperties" fullname="WinWindow::m_windowsDesktopProperties" href="winwindow.html#m_windowsDesktopProperties-var" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="104" type="std::unique_ptr&lt;WindowsDesktopProperties&gt;" static="false"/>
            <variable name="staticMetaObject" fullname="WinWindow::staticMetaObject" href="winwindow.html#staticMetaObject-var" status="internal" access="private" location="winwindow.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/winwindow.h" lineno="56" type="const QMetaObject" static="true"/>
        </class>
        <class name="WindowsDesktopProperties" href="windowsdesktopproperties.html" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="47" bases="QObject">
            <function name="WindowsDesktopProperties" fullname="WindowsDesktopProperties::WindowsDesktopProperties" href="windowsdesktopproperties.html#WindowsDesktopProperties" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="51" meta="constructor" virtual="non" const="false" static="false" final="false" override="false" type="" signature="WindowsDesktopProperties(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="color" fullname="WindowsDesktopProperties::color" href="windowsdesktopproperties.html#color-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="89" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="color" type="QColor" signature="QColor color() const"/>
            <function name="colorChanged" fullname="WindowsDesktopProperties::colorChanged" href="windowsdesktopproperties.html#color-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="109" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="color" type="void" signature="void colorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="isTiled" fullname="WindowsDesktopProperties::isTiled" href="windowsdesktopproperties.html#isTiled-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="79" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="isTiled" type="bool" signature="bool isTiled() const"/>
            <function name="isTiledChanged" fullname="WindowsDesktopProperties::isTiledChanged" href="windowsdesktopproperties.html#isTiled-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="105" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="isTiled" type="void" signature="void isTiledChanged(bool isTiled)">
                <parameter type="bool" name="isTiled" default=""/>
            </function>
            <function name="metaObject" fullname="WindowsDesktopProperties::metaObject" href="windowsdesktopproperties.html#metaObject" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="48" meta="plain" virtual="virtual" const="true" static="false" final="false" override="true" type="const QMetaObject *" signature="const QMetaObject * metaObject() const override"/>
            <function name="position" fullname="WindowsDesktopProperties::position" href="windowsdesktopproperties.html#position-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="74" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="position" type="QPoint" signature="QPoint position() const"/>
            <function name="positionChanged" fullname="WindowsDesktopProperties::positionChanged" href="windowsdesktopproperties.html#position-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="103" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="position" type="void" signature="void positionChanged(QPoint position)">
                <parameter type="QPoint" name="position" default=""/>
            </function>
            <function name="qt_metacall" fullname="WindowsDesktopProperties::qt_metacall" href="windowsdesktopproperties.html#qt_metacall" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="48" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="int" signature="int qt_metacall(QMetaObject::Call, int, void **) override">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="qt_metacast" fullname="WindowsDesktopProperties::qt_metacast" href="windowsdesktopproperties.html#qt_metacast" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="48" meta="plain" virtual="virtual" const="false" static="false" final="false" override="true" type="void *" signature="void * qt_metacast(const char *) override">
                <parameter type="const char *" name="" default=""/>
            </function>
            <function name="qt_static_metacall" fullname="WindowsDesktopProperties::qt_static_metacall" href="windowsdesktopproperties.html#qt_static_metacall" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="48" meta="plain" virtual="non" const="false" static="true" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call, int, void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
            </function>
            <function name="setColor" fullname="WindowsDesktopProperties::setColor" href="windowsdesktopproperties.html#color-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="147" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="color" type="void" signature="void setColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setIsTiled" fullname="WindowsDesktopProperties::setIsTiled" href="windowsdesktopproperties.html#isTiled-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="130" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="isTiled" type="void" signature="void setIsTiled(bool isTiled)">
                <parameter type="bool" name="isTiled" default=""/>
            </function>
            <function name="setPosition" fullname="WindowsDesktopProperties::setPosition" href="windowsdesktopproperties.html#position-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="122" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="position" type="void" signature="void setPosition(QPoint position)">
                <parameter type="QPoint" name="position" default=""/>
            </function>
            <function name="setWallpaperPath" fullname="WindowsDesktopProperties::setWallpaperPath" href="windowsdesktopproperties.html#wallpaperPath-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="114" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="wallpaperPath" type="void" signature="void setWallpaperPath(QString wallpaperPath)">
                <parameter type="QString" name="wallpaperPath" default=""/>
            </function>
            <function name="setWallpaperStyle" fullname="WindowsDesktopProperties::setWallpaperStyle" href="windowsdesktopproperties.html#wallpaperStyle-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="138" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="wallpaperStyle" type="void" signature="void setWallpaperStyle(int wallpaperStyle)">
                <parameter type="int" name="wallpaperStyle" default=""/>
            </function>
            <function name="setWindowsVersion" fullname="WindowsDesktopProperties::setWindowsVersion" href="windowsdesktopproperties.html#windowsVersion-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="156" meta="slot" virtual="non" const="false" static="false" final="false" override="false" associated-property="windowsVersion" type="void" signature="void setWindowsVersion(int windowsVersion)">
                <parameter type="int" name="windowsVersion" default=""/>
            </function>
            <function name="wallpaperPath" fullname="WindowsDesktopProperties::wallpaperPath" href="windowsdesktopproperties.html#wallpaperPath-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="69" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="wallpaperPath" type="QString" signature="QString wallpaperPath() const"/>
            <function name="wallpaperPathChanged" fullname="WindowsDesktopProperties::wallpaperPathChanged" href="windowsdesktopproperties.html#wallpaperPath-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="101" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="wallpaperPath" type="void" signature="void wallpaperPathChanged(QString wallpaperPath)">
                <parameter type="QString" name="wallpaperPath" default=""/>
            </function>
            <function name="wallpaperStyle" fullname="WindowsDesktopProperties::wallpaperStyle" href="windowsdesktopproperties.html#wallpaperStyle-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="84" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="wallpaperStyle" type="int" signature="int wallpaperStyle() const"/>
            <function name="wallpaperStyleChanged" fullname="WindowsDesktopProperties::wallpaperStyleChanged" href="windowsdesktopproperties.html#wallpaperStyle-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="107" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="wallpaperStyle" type="void" signature="void wallpaperStyleChanged(int wallpaperStyle)">
                <parameter type="int" name="wallpaperStyle" default=""/>
            </function>
            <function name="windowsVersion" fullname="WindowsDesktopProperties::windowsVersion" href="windowsdesktopproperties.html#windowsVersion-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="94" meta="plain" virtual="non" const="true" static="false" final="false" override="false" associated-property="windowsVersion" type="int" signature="int windowsVersion() const"/>
            <function name="windowsVersionChanged" fullname="WindowsDesktopProperties::windowsVersionChanged" href="windowsdesktopproperties.html#windowsVersion-prop" status="active" access="public" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="111" meta="signal" virtual="non" const="false" static="false" final="false" override="false" associated-property="windowsVersion" type="void" signature="void windowsVersionChanged(int windowsVersion)">
                <parameter type="int" name="windowsVersion" default=""/>
            </function>
            <struct name="QPrivateSignal" fullname="WindowsDesktopProperties::QPrivateSignal" href="windowsdesktopproperties-qprivatesignal.html" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="48"/>
            <property name="color" fullname="WindowsDesktopProperties::color" href="windowsdesktopproperties.html#color-prop" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="58">
                <getter name="color"/>
                <setter name="setColor"/>
                <notifier name="colorChanged"/>
            </property>
            <property name="isTiled" fullname="WindowsDesktopProperties::isTiled" href="windowsdesktopproperties.html#isTiled-prop" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="56">
                <getter name="isTiled"/>
                <setter name="setIsTiled"/>
                <notifier name="isTiledChanged"/>
            </property>
            <property name="position" fullname="WindowsDesktopProperties::position" href="windowsdesktopproperties.html#position-prop" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="55">
                <getter name="position"/>
                <setter name="setPosition"/>
                <notifier name="positionChanged"/>
            </property>
            <property name="wallpaperPath" fullname="WindowsDesktopProperties::wallpaperPath" href="windowsdesktopproperties.html#wallpaperPath-prop" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="54">
                <getter name="wallpaperPath"/>
                <setter name="setWallpaperPath"/>
                <notifier name="wallpaperPathChanged"/>
            </property>
            <property name="wallpaperStyle" fullname="WindowsDesktopProperties::wallpaperStyle" href="windowsdesktopproperties.html#wallpaperStyle-prop" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="57">
                <getter name="wallpaperStyle"/>
                <setter name="setWallpaperStyle"/>
                <notifier name="wallpaperStyleChanged"/>
            </property>
            <property name="windowsVersion" fullname="WindowsDesktopProperties::windowsVersion" href="windowsdesktopproperties.html#windowsVersion-prop" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="53">
                <getter name="windowsVersion"/>
                <setter name="setWindowsVersion"/>
                <notifier name="windowsVersionChanged"/>
            </property>
            <variable name="m_color" fullname="WindowsDesktopProperties::m_color" href="windowsdesktopproperties.html#m_color-var" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="170" type="QColor" static="false"/>
            <variable name="m_isTiled" fullname="WindowsDesktopProperties::m_isTiled" href="windowsdesktopproperties.html#m_isTiled-var" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="168" type="bool" static="false"/>
            <variable name="m_position" fullname="WindowsDesktopProperties::m_position" href="windowsdesktopproperties.html#m_position-var" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="167" type="QPoint" static="false"/>
            <variable name="m_wallpaperPath" fullname="WindowsDesktopProperties::m_wallpaperPath" href="windowsdesktopproperties.html#m_wallpaperPath-var" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="166" type="QString" static="false"/>
            <variable name="m_wallpaperStyle" fullname="WindowsDesktopProperties::m_wallpaperStyle" href="windowsdesktopproperties.html#m_wallpaperStyle-var" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="169" type="int" static="false"/>
            <variable name="m_windowsVersion" fullname="WindowsDesktopProperties::m_windowsVersion" href="windowsdesktopproperties.html#m_windowsVersion-var" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="171" type="int" static="false"/>
            <variable name="staticMetaObject" fullname="WindowsDesktopProperties::staticMetaObject" href="windowsdesktopproperties.html#staticMetaObject-var" status="internal" access="private" location="windowsdesktopproperties.h" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/src/windowsdesktopproperties.h" lineno="48" type="const QMetaObject" static="true"/>
        </class>
        <qmlclass name="Wizard" qml-module-name="Wizard" href="qml-wizard.html" status="internal" access="private" location="Wizard.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizard.qml" lineno="13" title="Wizard" fulltitle="Wizard" subtitle="">
            <function name="setSource" fullname="Wizard::setSource" href="qml-wizard.html#setSource-method" status="internal" access="private" location="Wizard.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Create/Wizard.qml" lineno="18" meta="qmlmethod"/>
        </qmlclass>
        <qmlclass name="Workshop" qml-module-name="Workshop" href="qml-workshop.html" status="internal" access="private" location="Workshop.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/Workshop.qml" lineno="13" title="Workshop" fulltitle="Workshop" subtitle=""/>
        <qmlclass name="WorkshopInstalled" qml-module-name="WorkshopInstalled" href="qml-workshopinstalled.html" status="internal" access="private" location="WorkshopInstalled.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopInstalled.qml" lineno="7" title="WorkshopInstalled" fulltitle="WorkshopInstalled" subtitle="">
            <function name="setNavigationItem" fullname="WorkshopInstalled::setNavigationItem" href="qml-workshopinstalled.html#setNavigationItem-signal" status="internal" access="private" location="WorkshopInstalled.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopInstalled.qml" lineno="13" meta="qmlsignal"/>
            <function name="setSidebarActive" fullname="WorkshopInstalled::setSidebarActive" href="qml-workshopinstalled.html#setSidebarActive-signal" status="internal" access="private" location="WorkshopInstalled.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopInstalled.qml" lineno="14" meta="qmlsignal"/>
            <function name="setSidebaractiveItem" fullname="WorkshopInstalled::setSidebaractiveItem" href="qml-workshopinstalled.html#setSidebaractiveItem-signal" status="internal" access="private" location="WorkshopInstalled.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopInstalled.qml" lineno="12" meta="qmlsignal"/>
            <qmlproperty name="enabled" fullname="WorkshopInstalled::enabled" href="qml-workshopinstalled.html#enabled-prop" status="internal" access="private" location="WorkshopInstalled.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopInstalled.qml" lineno="17" type="bool" attached="false" writable="true"/>
            <qmlproperty name="refresh" fullname="WorkshopInstalled::refresh" href="qml-workshopinstalled.html#refresh-prop" status="internal" access="private" location="WorkshopInstalled.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopInstalled.qml" lineno="16" type="bool" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="WorkshopItem" qml-module-name="WorkshopItem" href="qml-workshopitem.html" status="internal" access="private" location="WorkshopItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopItem.qml" lineno="10" title="WorkshopItem" fulltitle="WorkshopItem" subtitle="">
            <function name="clicked" fullname="WorkshopItem::clicked" href="qml-workshopitem.html#clicked-signal" status="internal" access="private" location="WorkshopItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopItem.qml" lineno="24" meta="qmlsignal"/>
            <qmlproperty name="additionalPreviewUrl" fullname="WorkshopItem::additionalPreviewUrl" href="qml-workshopitem.html#additionalPreviewUrl-prop" status="internal" access="private" location="WorkshopItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopItem.qml" lineno="16" type="url" attached="false" writable="true"/>
            <qmlproperty name="imgUrl" fullname="WorkshopItem::imgUrl" href="qml-workshopitem.html#imgUrl-prop" status="internal" access="private" location="WorkshopItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopItem.qml" lineno="15" type="url" attached="false" writable="true"/>
            <qmlproperty name="isDownloading" fullname="WorkshopItem::isDownloading" href="qml-workshopitem.html#isDownloading-prop" status="internal" access="private" location="WorkshopItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopItem.qml" lineno="22" type="bool" attached="false" writable="true"/>
            <qmlproperty name="itemIndex" fullname="WorkshopItem::itemIndex" href="qml-workshopitem.html#itemIndex-prop" status="internal" access="private" location="WorkshopItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopItem.qml" lineno="19" type="int" attached="false" writable="true"/>
            <qmlproperty name="name" fullname="WorkshopItem::name" href="qml-workshopitem.html#name-prop" status="internal" access="private" location="WorkshopItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopItem.qml" lineno="17" type="string" attached="false" writable="true"/>
            <qmlproperty name="subscriptionCount" fullname="WorkshopItem::subscriptionCount" href="qml-workshopitem.html#subscriptionCount-prop" status="internal" access="private" location="WorkshopItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopItem.qml" lineno="20" type="int" attached="false" writable="true"/>
            <qmlproperty name="workshopID" fullname="WorkshopItem::workshopID" href="qml-workshopitem.html#workshopID-prop" status="internal" access="private" location="WorkshopItem.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Workshop/WorkshopItem.qml" lineno="18" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="XMLNewsfeed" qml-module-name="XMLNewsfeed" href="qml-xmlnewsfeed.html" status="internal" access="private" location="XMLNewsfeed.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/qml/Community/XMLNewsfeed.qml" lineno="9" title="XMLNewsfeed" fulltitle="XMLNewsfeed" subtitle=""/>
        <qmlclass name="config" qml-module-name="config" href="qml-config.html" status="internal" access="private" location="config.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/kde/ScreenPlay/contents/ui/config.qml" lineno="14" title="config" fulltitle="config" subtitle="">
            <qmlproperty name="cfg_StopWallpaperIfHidden" fullname="config::cfg_StopWallpaperIfHidden" href="qml-config.html#cfg_StopWallpaperIfHidden-prop" status="internal" access="private" location="config.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/kde/ScreenPlay/contents/ui/config.qml" lineno="18" type="alias" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="main" qml-module-name="main" href="qml-main.html" status="internal" access="private" location="main.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/kde/ScreenPlay/contents/ui/main.qml" lineno="7" title="main" fulltitle="main" subtitle="">
            <function name="getSetVideoCommand" fullname="main::getSetVideoCommand" href="qml-main.html#getSetVideoCommand-method" status="internal" access="private" location="main.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/kde/ScreenPlay/contents/ui/main.qml" lineno="48" meta="qmlmethod"/>
            <function name="setTheme" fullname="main::setTheme" href="qml-main.html#setTheme-method" status="internal" access="private" location="main.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/main.qml" lineno="72" meta="qmlmethod"/>
            <function name="switchPage" fullname="main::switchPage" href="qml-main.html#switchPage-method" status="internal" access="private" location="main.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlay/main.qml" lineno="86" meta="qmlmethod"/>
            <qmlproperty name="fillMode" fullname="main::fillMode" href="qml-main.html#fillMode-prop" status="internal" access="private" location="main.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/kde/ScreenPlay/contents/ui/main.qml" lineno="12" type="string" attached="false" writable="true"/>
            <qmlproperty name="fullContentPath" fullname="main::fullContentPath" href="qml-main.html#fullContentPath-prop" status="internal" access="private" location="main.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/kde/ScreenPlay/contents/ui/main.qml" lineno="10" type="string" attached="false" writable="true"/>
            <qmlproperty name="type" fullname="main::type" href="qml-main.html#type-prop" status="internal" access="private" location="main.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/kde/ScreenPlay/contents/ui/main.qml" lineno="13" type="string" attached="false" writable="true"/>
            <qmlproperty name="volume" fullname="main::volume" href="qml-main.html#volume-prop" status="internal" access="private" location="main.qml" filepath="D:/Backup/Code/Qt/ScreenPlayInternal/ScreenPlay/ScreenPlayWallpaper/kde/ScreenPlay/contents/ui/main.qml" lineno="11" type="real" attached="false" writable="true"/>
        </qmlclass>
        <module name="ScreenPlay" href="screenplay-module.html" status="internal" seen="false" title="" members="ScreenPlay,App,Create,CreateImportVideo,InstalledListFilter,InstalledListModel,MonitorListModel,ProfileListModel,ProjectSettingsListModel,ScreenPlayManager,ScreenPlayWallpaper,ScreenPlayWidget,Settings,Util"/>
    </namespace>
</INDEX>
